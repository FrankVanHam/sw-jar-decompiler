_package deco
$

#remex(:jpn_body)

_pragma(classify_level=restricted, topic={jar_decompiler})
def_slotted_exemplar(:jpn_body,
	{
		{:statements, _unset, :readable}
	},
	:jpn_base)
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method jpn_body.new(p_name, p_statements)
	.statements << p_statements
	>> _super.init(p_name)
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method jpn_body.size
	>> .statements.size
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method jpn_body.empty?
	>> .statements.empty?
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method jpn_body[p_nr]
	>> .statements[p_nr]
_endmethod
$
