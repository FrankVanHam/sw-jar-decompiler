_package deco
$

#remex(:jpn_cast)

_pragma(classify_level=restricted, topic={jar_decompiler})
def_slotted_exemplar(:jpn_cast,
	{
		{:type,       _unset, :readable},
		{:expression, _unset, :readable}
	},
	:jpn_base)
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method jpn_cast.init(p_type, p_exp)
	.type << p_type
	.expression << p_exp
	>> _super.init({})
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method jpn_cast.is_cast?
	>> _true 
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method jpn_cast.parse_expression(p_parser)
	##
	>> p_parser.parse_cast(_self)
_endmethod
$
