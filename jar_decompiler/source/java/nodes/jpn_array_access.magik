_package deco
$

#remex(:jpn_array_access)

_pragma(classify_level=restricted, topic={jar_decompiler})
def_slotted_exemplar(:jpn_array_access,
	{
		{:lex_name, _unset, :readable},
		{:args,     _unset, :writable}
	},
	:jpn_base)
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method jpn_array_access.init(p_lex_name, p_args)
	assert(p_lex_name _isnt _unset _andif p_lex_name.is_class_of?(lexeme))
	.lex_name << p_lex_name
	.args << p_args
	>> _super.init()
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method jpn_array_access.name
	>> .lex_name.value
_endmethod
$

