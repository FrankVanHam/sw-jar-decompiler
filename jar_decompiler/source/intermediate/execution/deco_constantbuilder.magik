_package deco
$

def_slotted_exemplar(:deco_constantbuilder, {}, :deco_execution_base)
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method deco_constantbuilder.stringbootstrap(p_parser, p_type_node, p_value_node)
	##
	_local type << p_type_node.string_value
	_local str_value << p_value_node.string_value

	>> _if type = "symbol"
	   _then
		   >> dcn_constant.new_symbol(str_value)
	   _elif type = "string"
	   _then
		   >> dcn_constant.new_string(str_value)
	   _else
		   1.stop
	   _endif
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method deco_constantbuilder.symbolbootstrap(p_parser, p_type_node, p_value_node)
	##
	_local type << p_type_node.string_value
	_local str_value << p_value_node.string_value

	>> _if type = "symbol"
	   _then
		   >> dcn_constant.new_symbol(str_value)
	   _else
		   1.stop
	   _endif
_endmethod
$
