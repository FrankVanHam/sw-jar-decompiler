_package deco
$


_pragma(classify_level=restricted, topic={jar_decompiler})
## No operation
def_slotted_exemplar(:dcn_pop,
		     {}, :dcn_base )
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method dcn_pop.new()
	>> _clone.init()
_endmethod
$


_pragma(classify_level=restricted, topic={jar_decompiler})
_private _method dcn_pop.init()
	>> _self 	 
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method dcn_pop.is_pop?
	##
	>> _true 
_endmethod
$


_pragma(classify_level=restricted, topic={jar_decompiler})
_method dcn_pop.decode_on(p_stream)
	##
	p_stream.write("pop")
_endmethod
$
