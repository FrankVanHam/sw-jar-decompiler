_package deco
$

#remex(:dcn_new)

_pragma(classify_level=restricted, topic={decompiler})
##
def_slotted_exemplar(:dcn_new,
		      {
			      {:type, _unset, :readable},
			      {:args, _unset, :readable},
			      {:array?, _unset, :readable}
		      },
		      :dcn_base)
$

_pragma(classify_level=restricted, topic={decompiler})
_method dcn_new.new(p_type, p_args, p_array?)
	_return _clone.init(p_type, p_args, p_array?)
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_private _method dcn_new.init(p_type, p_args, p_array?)
	##
	.type << p_type
	.args << p_args
	.array? << p_array?
	>> _self 
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_method dcn_new.decode_on(p_stream)
	##
	p_stream.write("dcn_new")
_endmethod
$
