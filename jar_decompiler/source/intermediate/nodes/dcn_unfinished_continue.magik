_package deco
$

_pragma(classify_level=restricted, topic={decompiler})
## Node a _leave statement.
def_slotted_exemplar( :dcn_unfinished_continue,
		       {
			       {:local, _unset, :readable}
		       }, :dcn_base)
$

_pragma(classify_level=restricted, topic={decompiler})
_method dcn_unfinished_continue.new(p_local)
	>> _clone.init(p_local)
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_private _method dcn_unfinished_continue.init(p_local)
	.local << p_local
	>> _self 
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_method dcn_unfinished_continue.decode_on(p_stream)
	p_stream.write("_unfinished_continue ")
	.local.decode_on(p_stream)
_endmethod
$
