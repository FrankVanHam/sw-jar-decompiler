_package deco
$

#remex(:dcn_gathered)
$

_pragma(classify_level=restricted, topic={decompiler})
## node for a gathereding
def_slotted_exemplar(:dcn_gathered,
		     {
			     {:expression, _unset, :readable}
		     }, :dcn_base )
$

_pragma(classify_level=restricted, topic={decompiler})
_method dcn_gathered.new(p_expression)
	>> _clone.init(p_expression)
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_private _method dcn_gathered.init(p_expression)
	.expression << p_expression
	>> _self 
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_method dcn_gathered.decode_on(p_stream, _gather p_args)
	.expression.decode_on(p_stream, _scatter p_args)
_endmethod
$
