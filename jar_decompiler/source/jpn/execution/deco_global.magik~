_package deco
$

_pragma(classify_level=restricted, topic={jar_decompiler})
def_slotted_exemplar(:deco_global,
	{
		{:name, _unset}
	}, :deco_execution_base)
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method deco_global.new(p_name)
	##
	>> _clone.init(p_name)
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_private _method deco_global.init(p_name)
	## 
	 .name << p_name
	 >> _self 
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method deco_global.class(p_parser)
	>> dcn_constant.new_literal(.name)
_endmethod
$
