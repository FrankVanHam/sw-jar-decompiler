_package deco
$

#remex(:dcn_loopbody)
$

_pragma(classify_level=restricted, topic={decompiler})
## Node for a _loopbody statement in a iter method or iter
## procedure. 
def_slotted_exemplar(:dcn_loopbody,
		     {
			     {:args,_unset, :readable}
		     },
		     :dcn_base)
$

_pragma(classify_level=restricted, topic={decompiler})
_method dcn_loopbody.new(args)
	_return _clone.init(args)
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_private _method dcn_loopbody.init(args)
	.args << args
	_return _self
_endmethod
$
_pragma(classify_level=restricted, topic={decompiler})
_method dcn_loopbody.decode_on(p_stream)
	p_stream.write( "_loopbody (")
	_self.decode_list_on(p_stream, .args)
	p_stream.write( ")")
_endmethod
$


