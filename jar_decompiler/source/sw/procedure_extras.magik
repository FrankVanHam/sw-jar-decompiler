_package sw
$

_pragma(classify_level=restricted, topic={decompiler})
_method procedure.deco_unique_constant_name
	name << _unset 
	_for i_global _over package.all_globals()
	_loop 
		_if i_global.constant? _andif
		    i_global.value _is _self
		_then
			_if name _is _unset
			_then
				name << i_global.key
			_else
				name << _unset
				_leave
			_endif 
		_endif
	_endloop
	_return name
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_method procedure.deco_method_finder_ids
	name << _self.deco_unique_constant_name
	_if name _is _unset
	_then
		name << ""
	_endif
	
	_return {
			name.as_charvec(),
			"<global>"
		}
_endmethod
$


