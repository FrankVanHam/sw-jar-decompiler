## jnp_parser_simple_iterator
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_test_3293 {
    @SourceHash(value=705022791)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=53, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=54, index=1)})
    public static Object deco_test__test4(Object _self) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__test4")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object i_var) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)i_var));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_3293.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_test_3292
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public deco_test_3292() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "C:\\Users\\frnkv\\source\\repos\\sw-jar-decompiler\\decompile_target\\source\\deco_test.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "user")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "deco_test"), (Object)VectorBuilder.EMPTY_VECTOR);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("deco_test", "test4()", deco_test_3293.class, "deco_test__test4", 1, 1));
    }

    @Override
    public void preload() {
    }
}
###########
_package user
$
def_slotted_exemplar(:deco_test, {})
$
_method deco_test.test4() 
    _for i_var _over _self.fast_elements()
    _loop
        _self.run(i_var)
    _endloop
    _return _unset 
_endmethod
$
###########
## jnp_parser_test_access_parameter_iter
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_test_3293 {
    @SourceHash(value=420855932)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="arg", type=Object.class, start=21, end=62, index=2), @EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=62, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=62, index=1)})
    public static Object deco_test__test_access_parameter_iter(Object _self, Object arg) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)arg, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__test_access_parameter_iter")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object i_index) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)i_index));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_3293.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_test_3292
implements ExecutableMagik {

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("deco_test", "test_access_parameter_iter()", deco_test_3293.class, "deco_test__test_access_parameter_iter", 2, 2);
    }
}
###########
_method deco_test.test_access_parameter_iter(arg) 
    _for i_index _over _self.fast_elements()
    _loop
        _self.run(arg, i_index)
    _endloop
    _return _unset 
_endmethod
$
###########
## jnp_parser_send_iterator
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_test_3293 {
    @SourceHash(value=420855932)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
        @EnvVars(value={@EnvVar(name="_self", type=Object.class, start=13, end=61, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=61, index=0)})
    public static Object deco_test__test_send_iter(Object _self) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        CallSite thing = Invoker.bootstrapPrivate("get_thing()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)thing));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__test_send_iter")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object i_index) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)i_index));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_3293.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_test_3292
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public deco_test_3292() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("deco_test", "test_send_iter()", deco_test_3293.class, "deco_test__test_send_iter", 1, 1);
    }

    @Override
    public void preload() {
    }
}
###########
_method deco_test.test_send_iter() 
     _local thing << _self.get_thing()
    _for i_index _over thing.fast_elements()
    _loop
        _self.run(i_index)
    _endloop
    _return _unset 
_endmethod
$
###########
## jnp_parser_test_gather_iter
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_test_3293 {
    @SourceHash(value=705022791)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
        public static Object deco_test__test_gather_iter(Object _self) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__test_gather_iter")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object i_index, Object ... i_var) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)i_index, (Object[])((Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)i_var))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }
	
	 /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_3293.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

}

public class deco_test_3292
implements ExecutableMagik {
    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
		MagikObjectUtils.createMethod("deco_test", "test_gather_iter()", deco_test_3293.class, "deco_test__test_gather_iter", 1, 1);
            }
}
###########
_method deco_test.test_gather_iter() 
    _for i_index, _scatter i_var _over _self.fast_elements()
    _loop
        _self.run(i_index, ( _scatter i_var))
    _endloop
    _return _unset 
_endmethod
$
###########
## jnp_parser_test_nested_iter
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_test_3293 {
    @SourceHash(value=958934361)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="_self", type=Object.class, start=13, end=54, index=3), @EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=54, index=2)})
    public static Object deco_test__test_nested_iter(Object _self) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__test_nested_iter")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=62, index=0), @EnvVar(name="i_var1", type=Object.class, start=8, end=74, index=1)})
    public static Object __loopbody_(Object[] __env__, Object i_var1) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)i_var1, (Object[])__env__, (int)1);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object i_var2) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)i_var2));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_3293.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_3293.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

public class deco_test_3292
implements ExecutableMagik {
    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
		MagikObjectUtils.createMethod("deco_test", "test_nested_iter()", deco_test_3293.class, "deco_test__test_nested_iter", 1, 1);
            }
}
###########
_method deco_test.test_nested_iter() 
    _for i_var1 _over _self.fast_elements()
    _loop
        _for i_var2 _over _self.fast_elements()
        _loop
            _self.run(i_var1, i_var2)
        _endloop
    _endloop
    _return _unset 
_endmethod
$
###########
## jnp_parser_test_nested_break_iter
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_test_3293 {
    @SourceHash(value=-1484411267)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="_self", type=Object.class, start=14, end=87, index=5), @EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=87, index=2), @EnvVar(name="__leave_catcher__outer", type=Object[].class, start=36, end=87, index=3)})
    public static Object deco_test__test_nested_break_iter(Object _self) {
        Object[] __env__ = new Object[6];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)3);
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)));
        }
        catch (LeaveCatcher.Leave leave) {
            ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).getLeaveResult(leave);
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__test_nested_break_iter")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=44, end=76, index=0), @EnvVar(name="__continue_catcher__outer", type=Object[].class, start=36, end=101, index=4), @EnvVar(name="i_var1", type=Object.class, start=8, end=107, index=1)})
    public static Object __loopbody_(Object[] __env__, Object i_var1) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)i_var1, (Object[])__env__, (int)1);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new ContinueCatcher(), (Object[])__env__, (int)4);
            try {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)));
                resultTuple = ResultTuple.EMPTY_TUPLE;
            }
            catch (ContinueCatcher.Continue continue_) {
                ResultTuple resultTuple2;
                resultTuple = resultTuple2 = ((ContinueCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).getContinueResult(continue_);
            }
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object i_var2) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run1()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("exit?", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)))) {
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run2()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)i_var2));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("exit?", Invoker.bootstrapPrivate("self", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))))) {
                throw ((ContinueCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).makeContinue(ResultTuple.EMPTY_TUPLE);
            }
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run3()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)i_var2));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_3293.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_3293.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

}

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_test_3292
implements ExecutableMagik {
    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
		MagikObjectUtils.createMethod("deco_test", "test_nested_break_iter()", deco_test_3293.class, "deco_test__test_nested_break_iter", 1, 1);
            }
}
###########
_method deco_test.test_nested_break_iter()
	_for i_var1 _over _self.fast_elements()
	_loop @outer
		_for i_var2 _over _self.fast_elements()
		_loop 
			_self.run1(i_var1)
			_if _self.exit? _then _leave @outer _endif
			_self.run2(i_var2)
			_if _self.self.exit? _then _continue @outer _endif
			_self.run3(i_var2)
		_endloop 
	_endloop
	_return _unset
_endmethod
$
###########
## jnp_parser_test_access_local_iter
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_test_3293 {
    @SourceHash(value=907092492)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=74, index=0), @EnvVar(name="a", type=Object.class, start=29, end=74, index=1), @EnvVar(name="_self", type=Object.class, start=13, end=74, index=2)})
    public static Object deco_test__test_access_local_iter(Object _self) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)ConstantBuilder.stringBootstrap("string", "hoi"), (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__test_access_local_iter")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object i_index) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)i_index));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_3293.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
    
}
@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_test_3292
implements ExecutableMagik {
    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
	MagikObjectUtils.createMethod("deco_test", "test_access_local_iter()", deco_test_3293.class, "deco_test__test_access_local_iter", 1, 1);
            }
}
###########
_method deco_test.test_access_local_iter() 
     a << "hoi"
    _for i_index _over _self.fast_elements()
    _loop
        _self.run(a, i_index)
    _endloop
    _return _unset 
_endmethod
$
###########
## jnp_parser_test_break_iter
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_test_3293 {
    @SourceHash(value=1616799078)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=101, index=0), @EnvVar(name="__leave_catcher__outer", type=Object[].class, start=35, end=102, index=2), @EnvVar(name="_self", type=Object.class, start=13, end=102, index=1)})
    public static Object deco_test__test_break_iter(Object _self) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)2);
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        }
        catch (LeaveCatcher.Leave leave) {
            ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getLeaveResult(leave);
        }
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run4()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__test_break_iter")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object i_var1) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run1()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)i_var1));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("exit?", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)))) {
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run2()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("exit?", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)))) {
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run3()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_3293.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

}

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_test_3292
implements ExecutableMagik {
    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
	MagikObjectUtils.createMethod("deco_test", "test_break_iter()", deco_test_3293.class, "deco_test__test_break_iter", 1, 1);
            }
}
###########
_method deco_test.test_break_iter() 
    _for i_var1 _over _self.fast_elements()
    _loop @outer
        _self.run1(i_var1)
        _if _self.exit?
        _then
             _leave @outer
        _endif
        _self.run2()
        _if _self.exit?
        _then
             _local resultTuple2 << _unset
            _continue
        _endif
        _self.run3()
    _endloop
    _self.run4()
    _return _unset
_endmethod
$
###########
## jnp_parser_return_iter
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_test_4015 {
    @SourceHash(value=-1220830357)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=53, end=82, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=35, end=102, index=2), @EnvVar(name="option_list", type=Object.class, start=21, end=102, index=3), @EnvVar(name="option", type=Object.class, start=13, end=102, index=1)})
    public static Object deco_test__get_option(Object _self, Object option, Object option_list) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)option, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)option_list, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)2);
        try {
            if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3) != null) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
            }
            return null;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getReturnResult(return_);
        }
    }

    @Parent(method="deco_test__get_option")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object i, Object opt) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.is(opt, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeReturn((ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)BinaryDispatcher.bootstrap("+", i, Integer.valueOf(1)))));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_4015.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}


@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_test_4014
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public deco_test_4014() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("deco_test", "get_option()", deco_test_4015.class, "deco_test__get_option", 3, 3));
    }

    @Override
    public void preload() {
    }
}
################
_method deco_test.get_option(option, option_list) 
    _if (option_list _isnt _unset)
    _then
        _for i, opt _over option_list.fast_keys_and_elements()
        _loop
            _if (opt _is option)
            _then
                _return option_list[(i + 1)]
            _endif
        _endloop
    _endif
    _return _unset
_endmethod
$
################
## jpn_test_iter_args
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_test_4161 {
    @SourceHash(value=-1011116301)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=54, index=0)})
    public static Object deco_test__goto_explorer_element(Object _self, Object explorer_element, Object object) {
        Object[] __env__ = new Object[1];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("explorers()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)_self, (Object)new Boolean(MagikObjectUtils.isnt(object, Boolean.TRUE))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__goto_explorer_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object explorer) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "show"), (Object)explorer);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_test_4161.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}


@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_test_4160
implements ExecutableMagik {
    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("deco_test", "goto_explorer_element()", deco_test_4161.class, "deco_test__goto_explorer_element", 3, 2));
    }
}
###############
_method deco_test.goto_explorer_element(explorer_element, _optional object) 
    _for explorer _over _self.explorers((object _isnt _true))
    _loop
        sw:show(explorer)
    _endloop
    _return _unset
_endmethod
$
###############
## jpn_test_range
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_tester_4066 {
    @SourceHash(value=360755075)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=49, index=0)})
    public static Object deco_tester__test_range(Object _self) {
        Object[] __env__ = new Object[1];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ProcInvoker.iterNaturalBootstrap("()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "range"), (Object)2, (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "deco", "n"));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_tester__test_range")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object i) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "show"), (Object)i);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_tester_4066.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}


@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_tester_4065
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public deco_tester_4065() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("deco_tester", "test_range()", deco_tester_4066.class, "deco_tester__test_range", 1, 1));
    }

    @Override
    public void preload() {
    }
}
##########
_method deco_tester.test_range() 
    _for i _over range(2, deco:n)
    _loop
        sw:show(i)
    _endloop
    _return _unset
_endmethod
$
##########
## jpn_iter_in_file
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_tester_4099 {
    @SourceHash(value=963926276)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object deco_tester__write(Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object i) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("write()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "deco", "deco_tester"), (Object)i));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }
}


@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_tester_4098
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public deco_tester_4098() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=81, end=116, index=0)})
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "C:\\Users\\frnkv\\source\\repos\\sw-jar-decompiler\\decompile_target\\source\\deco_tester.magik"));
        Object[] __env__ = new Object[1];
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "deco")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "deco_tester"), (Object)VectorBuilder.EMPTY_VECTOR, (Object)ConstantBuilder.symbolBootstrap("symbol", "model"));
        MagikObjectUtils.createMethod("deco_tester", "write()", deco_tester_4099.class, "deco_tester__write", 1, 1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ProcInvoker.iterNaturalBootstrap("()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "range"), (Object)1, (Object)5);
        return ResultTuple.EMPTY_TUPLE;
    }

    @Override
    public void preload() {
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_tester_4099.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}
##################
_package deco
$

def_slotted_exemplar(:deco_tester, {}, :model)
$

_method deco_tester.write() 
    _return _unset
_endmethod
$

_for i _over range(1, 5)
_loop
    deco:deco_tester.write(i)
_endloop
$
##################
## jpn_test_recursive_iter
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_tester_4099 {
    @SourceHash(value=1002081260)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=37, end=72, index=1), @EnvVar(name="__loopbody__", type=Object.class, start=13, end=73, index=2), @EnvVar(name="__loopenv__", type=Object.class, start=21, end=73, index=4), @EnvVar(name="_self", type=Object.class, start=29, end=73, index=3)})
    public static Object deco_tester__test_recursive_iter(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ProcInvoker.iterNaturalBootstrap("()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "range"), (Object)1, (Object)5);
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_tester__test_recursive_iter")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=54, index=0)})
    public static Object __loopbody_(Object[] __env__, Object i) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("test_recursive_iter()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object e) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object)e);
            ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "show"), (Object)e);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_tester_4099.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(deco_tester_4099.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}


@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_tester_4098
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public deco_tester_4098() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("deco_tester", "test_recursive_iter()", deco_tester_4099.class, "deco_tester__test_recursive_iter", 3, 3, true, false, false, 0));
    }

    @Override
    public void preload() {
    }
}
#############
_iter _method deco_tester.test_recursive_iter() 
    _for i _over range(1, 5)
    _loop
        _for e _over _self.test_recursive_iter()
        _loop
            _loopbody (e)
            sw:show(e)
        _endloop
    _endloop
    _return _unset
_endmethod
$
############
## jpn_test_recursive_iter
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_tester_4149 {
    @SourceHash(value=927567814)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=64, index=0), @EnvVar(name="__loopenv__", type=Object.class, start=21, end=65, index=1), @EnvVar(name="__loopbody__", type=Object.class, start=13, end=65, index=2)})
    public static Object deco_tester__test_recursive_iter(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ProcInvoker.iterNaturalBootstrap("()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "range"), (Object)1, (Object)5);
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_tester__test_recursive_iter")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object i) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite v = LoopBodyInvoker.bootstrap("_loopbody", (MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), i);
            ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "show"), (Object)v);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_tester_4149.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}


@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_tester_4148
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public deco_tester_4148() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("deco_tester", "test_recursive_iter()", deco_tester_4149.class, "deco_tester__test_recursive_iter", 3, 3, true, false, false, 0));
    }

    @Override
    public void preload() {
    }
}
#############
_iter _method deco_tester.test_recursive_iter() 
    _for i _over range(1, 5)
    _loop
         _local v << _loopbody (i)
        sw:show(v)
    _endloop
    _return _unset
_endmethod
$
#############
## jpn_test_mistery_2
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class view_pool_46759 {
    @SourceHash(value=179293526)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=34, end=167, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=185, index=1)})
    public static Object view_pool__close(Object _self) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
        InterruptInfrastructure.checkAndProcessInterrupts();
        synchronized (callSite) {
            try {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("keys()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_specs_by_view()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("empty()", (Object)Invoker.bootstrapPrivate("$slot_get_specs_by_view()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("keys()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_specs_by_thread()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("empty()", (Object)Invoker.bootstrapPrivate("$slot_get_specs_by_thread()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("empty()", (Object)Invoker.bootstrapPrivate("$slot_get_info_by_dataset()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
            }
            catch (Throwable throwable) {
                // MONITOREXIT @DISABLED, blocks:[1, 2] lbl23 : MonitorExitStatement: MONITOREXIT : var2_2
                InterruptInfrastructure.checkAndProcessInterrupts();
                throw throwable;
            }
        }
        InterruptInfrastructure.checkAndProcessInterrupts();
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="view_pool__close")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object view) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("discard()", (Object)view));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="view_pool__close")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object a_thread) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_dependent()", (Object)a_thread, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }
    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(view_pool_46759.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(view_pool_46759.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

}

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class view_pool_46758
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public view_pool_46758() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {

        MagikObjectUtils.createMethod("view_pool", "close()", view_pool_46759.class, "view_pool__close", 1, 1);
    }

    @Override
    public void preload() {
    }
}
##########
_method view_pool.close() 
     _local callSite << _self
    _lock callSite
        _for view _over .specs_by_view.keys()
        _loop
            view.discard()
        _endloop
        .specs_by_view.empty()
        _for a_thread _over .specs_by_thread.keys()
        _loop
            a_thread.remove_dependent(_self)
        _endloop
        .specs_by_thread.empty()
        .info_by_dataset.empty()
    _endlock
    _return _unset
_endmethod
$
##########
## jpn_iter_finally
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_tester_4167 {
    @SourceHash(value=-1361536317)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=79, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=80, index=1)})
    public static Object deco_tester__test_finally(Object _self) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)ProcInvoker.iterTupleBootstrap("()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "range"), (Object)1, (Object)5));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("show()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)0));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_tester__test_finally")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object i) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("show()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)i));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(deco_tester_4167.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.jar_decompiler_lp.decompile_target;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.jar_decompiler_lp.decompile_target.deco_tester_4167;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_tester_4166
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public deco_tester_4166() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("deco_tester", "test_finally()", deco_tester_4167.class, "deco_tester__test_finally", 1, 1);
    }

    @Override
    public void preload() {
    }
}
################
_method deco_tester.test_finally() 
    _for i _over range(1, 5)
    _loop
        _self.show(i)
    _endloop
    _self.show(0)
    _return _unset
_endmethod
$
################
## jpn_iter_with_labels
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class oracle_spatial_object_stream_13915 {
   @SourceHash(value=-181307059)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object oracle_spatial_object_stream__get(Object _self) {
        bounds = null;
        rec = null;
        an_rwo = null;
        c = null;
        visible_geom = null;
        vis_geoms = null;
        asp = null;
        tag = ConstantBuilder.symbolBootstrap("symbol", "ora_error");
        stream = DynamicAccessor.bootstrapFetcher("!terminal!", "sw");
        while (true) lbl-1000:
        // 2 sources
        {
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            var10_10 = tag;
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)var10_10);
            try {
                DynamicAccessor.bootstrapBinder("!current_world!", "sw", 1);
                DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 0);
                try {
                    v0 = Invoker.bootstrap("ora_handling_proc()", Invoker.bootstrapPrivate("$slot_get_dataset()", (Object)_self), tag, stream, visible_geom);
                    ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "extdb_database_error"), Invoker.bootstrap("extdb_handling_proc()", Invoker.bootstrapPrivate("$slot_get_dataset()", (Object)_self)), ConstantBuilder.symbolBootstrap("symbol", "ora_sc_error"), v0, ConstantBuilder.symbolBootstrap("symbol", "ora_sc_user_error"), v0);
                    if (Invoker.bootstrapPrivate("$slot_get_scanner()", (Object)_self) != null) {
                        rec = Invoker.bootstrap("get()", Invoker.bootstrapPrivate("$slot_get_scanner()", (Object)_self));
                        if (rec != null) {
                            an_rwo = Invoker.bootstrap("new_from()", Invoker.bootstrapPrivate("$slot_get_rec_exemplar()", (Object)_self), Invoker.bootstrap("values", rec));
                            var11_11 = (ResultTuple)Invoker.tupleBootstrap("perform()", (Object)an_rwo, (Object)Invoker.bootstrapPrivate("$slot_get_geom_field_name()", (Object)_self));
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            return var11_11;
                        }
                        (ResultTuple)Invoker.tupleBootstrap("close()", (Object)Invoker.bootstrapPrivate("$slot_get_scanner()", (Object)_self));
                    }
                    vis_geoms = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_scan_info()", (Object)_self), Integer.valueOf(2));
                    (ResultTuple)Invoker.tupleBootstrapPrivate("$slot_set_field_index()", (Object)_self, (Object)BinaryDispatcher.bootstrap("+", Invoker.bootstrapPrivate("$slot_get_field_index()", (Object)_self), Integer.valueOf(1)));
                    if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrapPrivate("$slot_get_field_index()", (Object)_self), Invoker.bootstrap("size", vis_geoms)))) {
                        var12_12 = null;
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        return var12_12;
                    }
                    visible_geom = Invoker.bootstrap("\\b]", vis_geoms, Invoker.bootstrapPrivate("$slot_get_field_index()", (Object)_self));
                    c = Invoker.bootstrap("\\b]", Invoker.bootstrap("collections", Invoker.bootstrap("dd", Invoker.bootstrap("owner", visible_geom))), Invoker.bootstrap("name", Invoker.bootstrap("owner", visible_geom)));
                    bounds = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_scan_info()", (Object)_self), Integer.valueOf(1));
                    (ResultTuple)Invoker.tupleBootstrapPrivate("$slot_set_rec_exemplar()", (Object)_self, (Object)Invoker.bootstrap("record_exemplar", c));
                    (ResultTuple)Invoker.tupleBootstrapPrivate("$slot_set_geom_field_name()", (Object)_self, (Object)Invoker.bootstrap("name", visible_geom));
                    asp = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_scan_info()", (Object)_self), Integer.valueOf(4));
                    DynamicAccessor.bootstrapStorer("!current_world!", "sw", (Object)Invoker.bootstrapPrivate("$slot_get_world()", (Object)_self));
                    (ResultTuple)Invoker.tupleBootstrapPrivate("$slot_set_scanner()", (Object)_self, (Object)Invoker.bootstrap("setup_spatial_stream()", Invoker.bootstrapPrivate("$slot_get_dataset()", (Object)_self), visible_geom, bounds, asp));
                }
                catch (Throwable v1) {
                    DynamicScope.destroyFrame();
                    throw v1;
                }
                DynamicScope.destroyFrame();
                ** break block10
            }
            catch (Thrower.Throw v2) {
                Thrower.checkTag(v2, var10_10);
            }
            break;
        }
        catch (Throwable v3) {
            DynamicScope.destroyFrame();
            throw v3;
        }
lbl-1000:
        // 2 sources

        {
            DynamicScope.destroyFrame();
            ** while (true)
        }
    }
}

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class oracle_spatial_object_stream_13914
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public oracle_spatial_object_stream_13914() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("oracle_spatial_object_stream", "get()", oracle_spatial_object_stream_13915.class, "oracle_spatial_object_stream__get", 1, 1);
    }

    @Override
    public void preload() {
    }
}
#########
_method oracle_spatial_object_stream.get() 
    bounds << _unset
    rec << _unset
    an_rwo << _unset
    c << _unset
    visible_geom << _unset
    vis_geoms << _unset
    asp << _unset
    tag << :ora_error
    stream << sw:!terminal!
    _loop
        _dynamic sw:__catch_tags_dynamic__
        var10_10 << tag
        _dynamic sw:__catch_tags_dynamic__ << var10_10
        _dynamic sw:!current_world!
        _dynamic sw:!sys!condition_handler_cluster!
        v0 << .dataset.ora_handling_proc(tag, stream, visible_geom)
        sw:sys!install_handlers(:extdb_database_error, .dataset.extdb_handling_proc(), :ora_sc_error, v0, :ora_sc_user_error, v0)
        _if (.scanner _isnt _unset)
        _then
            rec << .scanner.get()
            _if (rec _isnt _unset)
            _then
                an_rwo << .rec_exemplar.new_from(rec.values)
                var11_11 << an_rwo.perform(.geom_field_name)
                _return var11_11
            _endif
            .scanner.close()
        _endif
        vis_geoms << .scan_info[2]
        .field_index << (.field_index + 1)
        _if (.field_index > vis_geoms.size)
        _then
            var12_12 << _unset
            _return var12_12
        _endif
        visible_geom << vis_geoms[.field_index]
        c << visible_geom.owner.dd.collections[visible_geom.owner.name]
        bounds << .scan_info[1]
        .rec_exemplar << c.record_exemplar
        .geom_field_name << visible_geom.name
        asp << .scan_info[4]
        _dynamic sw:!current_world! << .world
        .scanner << .dataset.setup_spatial_stream(visible_geom, bounds, asp)
        ####################
        ## Failed to decompile
        ####################
         _leave
    _endloop
    
    ####################
    ## Failed to decompile
    ####################
_endmethod
$
#########
## jpn_keyword_as_variable
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class broadcaster_client_engine_43432 {
    @SourceHash(value=2134369763)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object broadcaster_client_engine__deliver_messages(Object _self) {
        v1 = (ResultTuple)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)cookie));
        switch = v1.pop();
        return ResultTuple.EMPTY_TUPLE;
    }
}

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class broadcaster_client_engine_43431
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public broadcaster_client_engine_43431() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("broadcaster_client_engine", "deliver_messages()", broadcaster_client_engine_43432.class, "broadcaster_client_engine__deliver_messages", 1, 1);
    }

    @Override
    public void preload() {
    }
}
###################
_method broadcaster_client_engine.deliver_messages() 
    v1 << ( _scatter cookie)
    switch << v1
    _return _unset
_endmethod
$
###################