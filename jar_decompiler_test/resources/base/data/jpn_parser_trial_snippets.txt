## jpn_method_test_trial
/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.utils.ExecutableMagik;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class remex_23539
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public remex_23539() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/base/remex.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "remex"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_plugin"));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "remex"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_input_view"));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "remex"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_input_plugin"));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "remex"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_output_view"));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "remex"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_output_plugin"));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "remex"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_element"));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "remex"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_view_framework"));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "remex"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_edit_plugin"));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "remex"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_popup_navigation_component"));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "remex"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_model_framework"));
        return (ResultTuple)((Object)ProcInvoker.tupleBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "remex"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_model_search_plugin")));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.LoopBodyInvoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_plugin_23620 {
    @SourceHash(value=191276465)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__init(Object _self, Object name, Object framework, Object properties) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_embedded_explorer_views()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_find_categories()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"))));
        return Invoker.superNaturalBootstrap("init()", "plugin", "sw", (Object)_self, (Object)name, (Object)framework, (Object)properties);
    }

    @SourceHash(value=1294020270)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__init_actions(Object _self) {
        CallSite id = Invoker.bootstrapPrivate("$slot_get_find_default_text_id()", (Object)_self);
        CallSite find_value = id != null ? Invoker.bootstrap("message()", Invoker.bootstrapPrivate("application", (Object)_self), id) : Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_default_text_id"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "start_explorer"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_dialog"), Invoker.bootstrapPrivate("module_name", (Object)_self)), ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "start_explorer()"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "find_input"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_input")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_input_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_input_sh")), ConstantBuilder.symbolBootstrap("symbol", "value"), find_value, ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "toolbar_control"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "combo_box_item"), ConstantBuilder.symbolBootstrap("symbol", "min_width"), Integer.valueOf(185)), ConstantBuilder.symbolBootstrap("symbol", "help_id"), Integer.valueOf(2050))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "find_target"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_target")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_target_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_target_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "toolbar_control"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "text_choice_item"), ConstantBuilder.symbolBootstrap("symbol", "min_width"), Integer.valueOf(100)), ConstantBuilder.symbolBootstrap("symbol", "help_id"), Integer.valueOf(2050))));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "find"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_sh")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "free_search"), Invoker.bootstrapPrivate("module_name", (Object)_self)), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "do_find()"), ConstantBuilder.symbolBootstrap("symbol", "help_id"), Integer.valueOf(2050))));
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("empty?", Invoker.bootstrapPrivate("$slot_get_find_categories()", (Object)_self)))) {
            CallSite no_categories = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "no_categories"));
            Object object = VectorBuilder.bootstrap("vb", no_categories);
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("items\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_target")), (Object)object));
            object = no_categories;
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("value\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_target")), (Object)object));
            object = Boolean.FALSE;
            ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_target")), (Object)object));
        } else {
            CallSite callSite = Invoker.bootstrapPrivate("$slot_get_find_categories()", (Object)_self);
            ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("items\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_target")), (Object)callSite));
            callSite = Invoker.bootstrapPrivate("$slot_get_find_default_category()", (Object)_self);
            ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrap("value\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_target")), (Object)callSite));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=809093704)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__sw_databus_data_requested(Object _self, Object data_type_name, Object ... args) {
        Object result;
        block1: {
            result = null;
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "service_provider")) break block1;
            if (((ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)args)))).pop() == ConstantBuilder.symbolBootstrap("symbol", "explorer")) {
                result = _self;
            }
        }
        return result;
    }

    @SourceHash(value=164491053)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=35, end=59, index=1), @EnvVar(name="_self", type=Object.class, start=13, end=66, index=2)})
    public static Object explorer_plugin__process_initialisation_data_element(Object _self, Object xml_element) {
        block0: {
            Object[] __env__ = new Object[3];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
            if (Invoker.bootstrap("type", xml_element) != ConstantBuilder.symbolBootstrap("symbol", "find_engine")) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements_of_type()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)xml_element));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_plugin__process_initialisation_data_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=36, end=60, index=0)})
    public static Object __loopbody_(Object[] __env__, Object sub) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (Invoker.bootstrap("type", sub) == ConstantBuilder.symbolBootstrap("symbol", "categories")) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements_of_type()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)sub));
            } else if (Invoker.bootstrap("type", sub) == ConstantBuilder.symbolBootstrap("symbol", "engine")) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_find_plugin_name()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", sub, ConstantBuilder.symbolBootstrap("symbol", "plugin_name")))));
            } else if (Invoker.bootstrap("type", sub) == ConstantBuilder.symbolBootstrap("symbol", "default_text")) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_find_default_text_id()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", sub, ConstantBuilder.symbolBootstrap("symbol", "id")))));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object category) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (Invoker.bootstrap("type", category) == ConstantBuilder.symbolBootstrap("symbol", "category")) {
                CallSite id = Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", category, ConstantBuilder.symbolBootstrap("symbol", "name")));
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)Invoker.bootstrapPrivate("$slot_get_find_categories()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)VectorBuilder.bootstrap("vb", id, Invoker.bootstrap("message()", Invoker.bootstrapPrivate("application", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), id))));
                Object object = BinaryDispatcher.bootstrap("=", Invoker.bootstrap("attribute()", category, ConstantBuilder.symbolBootstrap("symbol", "default")), ConstantBuilder.stringBootstrap("string", "yes"));
                if (!MagikObjectUtils.should_be_boolean(object)) {
                    object = new Boolean(MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_find_default_category()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), null));
                }
                if (MagikObjectUtils.should_be_boolean(object)) {
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_find_default_category()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)id));
                }
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-405835067)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__explorer_model_(Object _self) {
        block3: {
            if (Invoker.bootstrapPrivate("$slot_get_explorer_model()", (Object)_self) != null) break block3;
            CallSite config_definition_file_name = Invoker.bootstrapPrivate("model_config_definition_file_name", (Object)_self);
            CallSite resource_module_name = Invoker.bootstrap("default()", Invoker.bootstrapPrivate("model_resource_module_name", (Object)_self), Invoker.bootstrapPrivate("module_name", (Object)_self));
            CallSite config_definition_module_name = Invoker.bootstrap("default()", Invoker.bootstrapPrivate("model_config_definition_module_name", (Object)_self), resource_module_name);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_model()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_framework"), ConstantBuilder.symbolBootstrap("symbol", "model"), _self, ConstantBuilder.symbolBootstrap("symbol", "config_definition_file_name"), config_definition_file_name, ConstantBuilder.symbolBootstrap("symbol", "config_definition_module_name"), config_definition_module_name)));
            CallSite map_selection_info = Invoker.bootstrapPrivate("databus_request_data()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "map_selection"));
            if (map_selection_info != null) {
                ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)map_selection_info)));
                resultTuple.pop();
                Object map_selection = resultTuple.pop();
                boolean bl = MagikObjectUtils.isnt(map_selection, null);
                Object object = new Boolean(bl);
                if (bl) {
                    object = Invoker.bootstrap("not", Invoker.bootstrap("empty?", map_selection));
                }
                if (MagikObjectUtils.should_be_boolean(object)) {
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("make_data_available()", (Object)Invoker.bootstrap("databus", Invoker.bootstrapPrivate("$slot_get_explorer_model()", (Object)_self)), (Object)ConstantBuilder.symbolBootstrap("symbol", "application_map_selection"), (Object)map_selection_info));
                }
            }
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_get_explorer_model()", (Object)_self));
    }

    @SourceHash(value=275217371)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__new_explorer_view_framework(Object _self, Object ... keys_and_args) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("new()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_view_framework"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer"), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "model"), (Object)Invoker.bootstrapPrivate("explorer_model", (Object)_self), (Object[])((Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)keys_and_args))));
    }

    @SourceHash(value=1156150795)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=242, end=271, index=0), @EnvVar(name="main?", type=Object.class, start=16, end=457, index=1)})
    public static Object explorer_plugin__build_gui(Object _self, Object a_container, Object xml_element) {
        CallSite title_id;
        Object[] __env__ = new Object[2];
        CallSite title = null;
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        CallSite callSite = BinaryDispatcher.bootstrap("=", Invoker.bootstrap("attribute()", xml_element, ConstantBuilder.symbolBootstrap("symbol", "closable")), ConstantBuilder.stringBootstrap("string", "yes"));
        CallSite callSite2 = BinaryDispatcher.bootstrap("=", Invoker.bootstrap("attribute()", xml_element, ConstantBuilder.symbolBootstrap("symbol", "dynamic_title")), ConstantBuilder.stringBootstrap("string", "yes"));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("=", Invoker.bootstrap("attribute()", xml_element, ConstantBuilder.symbolBootstrap("symbol", "main")), ConstantBuilder.stringBootstrap("string", "yes")), (Object[])__env__, (int)1);
        CallSite gui_definition_module_name = Invoker.bootstrap("default()", Invoker.bootstrap("attribute()", xml_element, ConstantBuilder.symbolBootstrap("symbol", "gui_definition_module_name")), Invoker.bootstrapPrivate("embedded_gui_definition_module_name", (Object)_self));
        CallSite gui_definition_file_name = Invoker.bootstrap("default()", Invoker.bootstrap("attribute()", xml_element, ConstantBuilder.symbolBootstrap("symbol", "gui_definition_file_name")), Invoker.bootstrapPrivate("embedded_gui_definition_file_name", (Object)_self));
        CallSite config_definition_module_name = Invoker.bootstrap("default()", Invoker.bootstrap("attribute()", xml_element, ConstantBuilder.symbolBootstrap("symbol", "config_definition_module_name")), Invoker.bootstrapPrivate("embedded_config_definition_module_name", (Object)_self));
        CallSite config_definition_file_name = Invoker.bootstrap("default()", Invoker.bootstrap("attribute()", xml_element, ConstantBuilder.symbolBootstrap("symbol", "config_definition_file_name")), Invoker.bootstrapPrivate("embedded_config_definition_file_name", (Object)_self));
        CallSite resource_module_name = Invoker.bootstrap("default()", Invoker.bootstrap("attribute()", xml_element, ConstantBuilder.symbolBootstrap("symbol", "resource_module_name")), Invoker.bootstrap("default()", Invoker.bootstrapPrivate("floating_resource_module_name", (Object)_self), Invoker.bootstrapPrivate("module_name", (Object)_self)));
        if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_embedded_explorer_views()", (Object)_self)));
        }
        if ((title_id = Invoker.bootstrap("attribute()", xml_element, ConstantBuilder.symbolBootstrap("symbol", "title_id"))) != null) {
            title = Invoker.bootstrap("message()", Invoker.bootstrapPrivate("application", (Object)_self), title_id);
        }
        CallSite explorer = Invoker.bootstrapPrivate("new_explorer_view_framework()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "floating?"), (Object)Boolean.FALSE, (Object)ConstantBuilder.symbolBootstrap("symbol", "main?"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)ConstantBuilder.symbolBootstrap("symbol", "gui_definition_module_name"), (Object)gui_definition_module_name, (Object)ConstantBuilder.symbolBootstrap("symbol", "gui_definition_file_name"), (Object)gui_definition_file_name, (Object)ConstantBuilder.symbolBootstrap("symbol", "config_definition_module_name"), (Object)config_definition_module_name, (Object)ConstantBuilder.symbolBootstrap("symbol", "config_definition_file_name"), (Object)config_definition_file_name, (Object)ConstantBuilder.symbolBootstrap("symbol", "resource_module_name"), (Object)resource_module_name);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrapPrivate("$slot_get_embedded_explorer_views()", (Object)_self), (Object)explorer));
        CallSite container = Invoker.bootstrap("build_gui()", explorer, a_container, ConstantBuilder.symbolBootstrap("symbol", "closable?"), callSite, ConstantBuilder.symbolBootstrap("symbol", "title"), title, ConstantBuilder.symbolBootstrap("symbol", "dynamic_title?"), callSite2);
        CallSite callSite3 = Invoker.bootstrap("default()", title, Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_tab_label")));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("tab_label\\l\\l", (Object)container, (Object)callSite3));
        return container;
    }

    @Parent(method="explorer_plugin__build_gui")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="main?", type=Object[].class, start=36, end=39, index=1)})
    public static Object __loopbody_3(Object[] __env__, Object existing_explorer) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("main?", existing_explorer))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)1);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1229153699)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=39, end=127, index=0), @EnvVar(name="__leave_catcher__", type=Object[].class, start=53, end=130, index=1)})
    public static Object explorer_plugin__post_build_gui(Object _self) {
        block2: {
            Object[] __env__ = new Object[2];
            if (!MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_embedded_explorer_views()", (Object)_self)), Integer.valueOf(0)))) break block2;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)1);
            try {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_embedded_explorer_views()", (Object)_self)));
                Boolean bl = Boolean.TRUE;
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("main?\\l\\l", (Object)Invoker.bootstrap("an_element()", Invoker.bootstrapPrivate("$slot_get_embedded_explorer_views()", (Object)_self)), (Object)bl));
            }
            catch (LeaveCatcher.Leave leave) {
                ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getLeaveResult(leave);
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_plugin__post_build_gui")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_4(Object[] __env__, Object view) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("main?", view))) {
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=8247916)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=176, index=0), @EnvVar(name="num_active_dialogs", type=Object[].class, start=24, end=177, index=1)})
    public static Object explorer_plugin__start_explorer(Object _self) {
        block2: {
            Object[] __env__ = new Object[2];
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)0, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("dialogs", (Object)_self)));
            if (!MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), 0)) break block2;
            CallSite num_sub_dialogs = Invoker.bootstrap("size", Invoker.bootstrapPrivate("dialogs", (Object)_self));
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", num_sub_dialogs, Integer.valueOf(0)))) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate()", (Object)Invoker.bootstrap("an_element()", Invoker.bootstrapPrivate("dialogs", (Object)_self))));
            } else {
                Boolean bl = new Boolean(MagikObjectUtils.is(num_sub_dialogs, 0));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("start_explorer_view()", (Object)_self, (Object)bl, (Object)Invoker.bootstrap("top_frame", Invoker.bootstrapPrivate("application", (Object)_self)), (Object)100, (Object)100));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_plugin__start_explorer")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="num_active_dialogs", type=Object[].class, start=59, end=62, index=1)})
    public static Object __loopbody_5(Object[] __env__, Object a_dialog) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("active?", a_dialog))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("bring_to_front()", (Object)a_dialog));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("+", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), Integer.valueOf(1)), (Object[])__env__, (int)1);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=434636009)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="name", type=Object[].class, start=61, end=64, index=3), @EnvVar(name="__dynamic_frame__", type=Object.class, start=110, end=179, index=0), @EnvVar(name="__leave_catcher__", type=Object[].class, start=125, end=179, index=1), @EnvVar(name="name", type=Object[].class, start=86, end=482, index=3), @EnvVar(name="_self", type=Object.class, start=15, end=482, index=2)})
    public static Object explorer_plugin__start_explorer_view(Object _self, Object object, Object relative_container, Object delta_x, Object delta_y) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        Boolean bl = Boolean.TRUE;
        Boolean bl2 = Boolean.FALSE;
        object = new Boolean(MagikObjectUtils.isnt(object, Boolean.FALSE));
        if (MagikObjectUtils.should_be_boolean(object)) {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer"), (Object[])__env__, (int)3);
        } else {
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
            CallSite callSite2 = ConstantBuilder.symbolBootstrap("symbol", "explorer");
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite2, (Object[])__env__, (int)3);
            if (Invoker.bootstrapPrivate("get_dialog()", (Object)callSite, (Object)callSite2) == null) {
                object = Boolean.TRUE;
            } else {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)1);
                try {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("upto()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)1, (Object)1000));
                }
                catch (LeaveCatcher.Leave leave) {
                    ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getLeaveResult(leave);
                }
            }
        }
        CallSite explorer = Invoker.bootstrapPrivate("get_dialog()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3));
        if (explorer == null) {
            explorer = Invoker.bootstrapPrivate("new_explorer_view_framework()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "floating?"), (Object)bl, (Object)ConstantBuilder.symbolBootstrap("symbol", "main?"), (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "config_definition_file_name"), (Object)Invoker.bootstrapPrivate("floating_config_definition_file_name", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)ConstantBuilder.symbolBootstrap("symbol", "config_definition_module_name"), (Object)Invoker.bootstrapPrivate("floating_config_definition_module_name", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)ConstantBuilder.symbolBootstrap("symbol", "gui_definition_file_name"), (Object)Invoker.bootstrapPrivate("floating_gui_definition_file_name", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)ConstantBuilder.symbolBootstrap("symbol", "gui_definition_module_name"), (Object)Invoker.bootstrapPrivate("floating_gui_definition_module_name", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)ConstantBuilder.symbolBootstrap("symbol", "resource_module_name"), (Object)Invoker.bootstrapPrivate("floating_resource_module_name", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            bl2 = Boolean.TRUE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("cache_dialog()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)explorer));
        }
        if (relative_container != null) {
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate_relative_to()", (Object)explorer, null, (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_view_title")), (Object)relative_container, (Object)delta_x, (Object)delta_y, null, null, (Object)900, (Object)700));
        } else if (MagikObjectUtils.should_be_boolean(bl2)) {
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate()", (Object)explorer, null, (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_view_title")), null, (Object)900, (Object)700));
        } else {
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate()", (Object)explorer));
        }
        return explorer;
    }

    @Parent(method="explorer_plugin__start_explorer_view")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="name", type=Object[].class, start=50, end=85, index=3)})
    public static Object __loopbody_6(Object[] __env__, Object nr) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
            CallSite callSite2 = Invoker.bootstrap("as_symbol()", ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), ConstantBuilder.stringBootstrap("string", "explorer"), nr));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite2, (Object[])__env__, (int)3);
            if (Invoker.bootstrapPrivate("get_dialog()", (Object)callSite, (Object)callSite2) == null) {
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-962069936)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=89, end=120, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=33, end=176, index=1), @EnvVar(name="__loopenv__", type=Object.class, start=24, end=177, index=3), @EnvVar(name="__loopbody__", type=Object.class, start=15, end=177, index=2)})
    public static Object explorer_plugin__explorers(MethodHandle __loopbody__, Object[] __loopenv__, Object _self, Object object) {
        block1: {
            Object[] __env__;
            block0: {
                __env__ = new Object[4];
                EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)2);
                EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)3);
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_embedded_explorer_views()", (Object)_self)));
                if (Invoker.bootstrapPrivate("get_dialog()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer")) == null) break block0;
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_dialogs()", (Object)_self)));
                break block1;
            }
            if (!MagikObjectUtils.is(object, Boolean.TRUE)) break block1;
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object)Invoker.bootstrapPrivate("start_explorer_view()", (Object)_self, (Object)Boolean.TRUE));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_plugin__explorers")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_7(Object[] __env__, Object el) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object)el);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_plugin__explorers")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_8(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object)element);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1390711593)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__map_trail_(Object _self) {
        Object trail;
        block0: {
            trail = null;
            CallSite info = Invoker.bootstrapPrivate("databus_request_data()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "map_trail"));
            if (info == null) break block0;
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)info)));
            resultTuple.pop();
            trail = resultTuple.pop();
        }
        return trail;
    }

    @SourceHash(value=393244208)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__map_selection_(Object _self) {
        Object selection;
        block0: {
            selection = null;
            CallSite info = Invoker.bootstrapPrivate("databus_request_data()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "map_selection"));
            if (info == null) break block0;
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)info)));
            resultTuple.pop();
            selection = resultTuple.pop();
        }
        return selection;
    }

    @SourceHash(value=-1520638436)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__map_world_(Object _self) {
        ResultTuple resultTuple;
        CallSite info = Invoker.bootstrapPrivate("databus_request_data()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "ace_context"));
        if (info != null) {
            ResultTuple resultTuple2 = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)info)));
            resultTuple2.pop();
            resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrap("world", (Object)resultTuple2.pop()));
        } else {
            resultTuple = null;
        }
        return resultTuple;
    }

    @SourceHash(value=1531482525)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__ace_control_(Object _self) {
        CallSite info = Invoker.bootstrapPrivate("databus_request_data()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "ace_context"));
        if (info != null) {
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)info)));
            resultTuple.pop();
            Object ace_name = resultTuple.pop();
            if (ace_name != null) {
                return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("get_ace_control_for()", (Object)_self, (Object)ace_name));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1489664810)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__get_ace_control_for(Object _self, Object ace_name) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("get_ace_control_for()", (Object)Invoker.bootstrapPrivate("application", (Object)_self), (Object)ace_name));
    }

    @SourceHash(value=-1709590348)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__editor_manager_(Object _self) {
        CallSite plugin_name = Invoker.bootstrapPrivate("property()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "editor_manager_name"));
        return plugin_name != null ? (ResultTuple)((Object)Invoker.tupleBootstrap("plugin()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)plugin_name)) : (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("get_service_provider()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "editor_manager")));
    }

    @SourceHash(value=1124426385)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=38, end=124, index=0), @EnvVar(name="__leave_catcher__", type=Object[].class, start=52, end=125, index=3), @EnvVar(name="embedded_only?", type=Object.class, start=30, end=125, index=1), @EnvVar(name="explorer_element", type=Object.class, start=22, end=125, index=2), @EnvVar(name="_self", type=Object.class, start=14, end=125, index=4)})
    public static Object explorer_plugin__goto_explorer_element(Object _self, Object explorer_element, Object object) {
        Object[] __env__ = new Object[6];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)explorer_element, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)object, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)3);
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("explorers()", (MethodHandle)cfr_ldc_8(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)new Boolean(MagikObjectUtils.isnt(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), Boolean.TRUE))));
        }
        catch (LeaveCatcher.Leave leave) {
            ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).getLeaveResult(leave);
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_plugin__goto_explorer_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="plugin", type=Object[].class, start=180, end=227, index=5)})
    public static Object __loopbody_9(Object[] __env__, Object explorer) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            boolean bl = MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), Boolean.TRUE);
            Object object = new Boolean(bl);
            if (bl) {
                object = Invoker.bootstrap("floating?", explorer);
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("main?", explorer))) {
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("floating?", explorer))) {
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate()", (Object)explorer));
                } else {
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("manage()", (Object)explorer));
                }
                Boolean bl2 = Boolean.FALSE;
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("background_busy?\\l\\l", (Object)Invoker.bootstrapPrivate("application", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object)bl2));
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("goto_explorer_element()", (Object)explorer, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Boolean.TRUE));
                CallSite callSite = Invoker.bootstrap("plugin()", explorer, ConstantBuilder.symbolBootstrap("symbol", "explorer_input_plugin"));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)5);
                if (callSite != null) {
                    ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_search_current_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
                }
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-2043229176)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__find_engine_(Object _self) {
        CallSite find_engine = null;
        CallSite name = Invoker.bootstrapPrivate("$slot_get_find_plugin_name()", (Object)_self);
        if (name == null) return find_engine;
        Object object = null;
        try {
            object = _self;
            synchronized (object) {
            }
        }
        catch (Throwable throwable) {
            InterruptInfrastructure.disableInterrupts();
            try {
                Invoker.bootstrap("plugin()", Invoker.bootstrapPrivate("explorer_model", (Object)_self), name);
                throw throwable;
            }
            finally {
                Object object2 = object;
                if (object2 != null) {
                    // ** MonitorExit[v0] (shouldn't be in output)
                }
                InterruptInfrastructure.enableInterrupts();
            }
        }
        {
            InterruptInfrastructure.disableInterrupts();
            try {
                find_engine = Invoker.bootstrap("plugin()", Invoker.bootstrapPrivate("explorer_model", (Object)_self), name);
                return find_engine;
            }
            finally {
                Object object3 = object;
                if (object3 != null) {
                    // ** MonitorExit[v1] (shouldn't be in output)
                }
                InterruptInfrastructure.enableInterrupts();
            }
        }
    }

    @SourceHash(value=133781866)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="text", type=Object[].class, start=159, end=497, index=2), @EnvVar(name="__dynamic_frame__", type=Object.class, start=294, end=497, index=0), @EnvVar(name="items", type=Object.class, start=302, end=497, index=1)})
    public static Object explorer_plugin__do_find(Object _self) {
        Object[] __env__ = new Object[3];
        Boolean bl = Boolean.TRUE;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("busy?\\l\\l", (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)bl));
        try {
            Object object = Invoker.bootstrap("empty?", Invoker.bootstrapPrivate("$slot_get_find_categories()", (Object)_self));
            if (!MagikObjectUtils.should_be_boolean(object)) {
                object = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("value", Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_target"))), null));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("raise()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "condition"), (Object)ConstantBuilder.symbolBootstrap("symbol", "user_error"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_error_no_target"))));
            } else {
                CallSite callSite = Invoker.bootstrap("trim_spaces()", Invoker.bootstrap("default()", Invoker.bootstrap("value", Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_input"))), ConstantBuilder.stringBootstrap("string", "")));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)2);
                if (MagikObjectUtils.is(Invoker.bootstrap("size", callSite), 0)) {
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("raise()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "condition"), (Object)ConstantBuilder.symbolBootstrap("symbol", "user_error"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_error_no_text"))));
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_value()", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_input")), (Object)ConstantBuilder.stringBootstrap("string", "")));
                } else {
                    CallSite find_plugin = Invoker.bootstrapPrivate("find_engine", (Object)_self);
                    if (find_plugin == null) {
                        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("raise()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "condition"), (Object)ConstantBuilder.symbolBootstrap("symbol", "user_error"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_error_no_engine"))));
                    } else {
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_from()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"), Invoker.bootstrap("items", Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_input")))), (Object[])__env__, (int)1);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_9(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
                        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_first()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
                        CallSite callSite2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
                        ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("items\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_input")), (Object)callSite2));
                        CallSite id = Invoker.bootstrap("value", Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "find_target")));
                        CallSite message = Invoker.bootstrap("message()", Invoker.bootstrapPrivate("application", (Object)_self), id);
                        CallSite result_element = Invoker.bootstrap("do_find()", find_plugin, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), id, ConstantBuilder.symbolBootstrap("symbol", "category_name"), message);
                        if (result_element != null) {
                            ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("goto_explorer_element()", (Object)_self, (Object)result_element));
                        }
                    }
                }
            }
        }
        finally {
            InterruptInfrastructure.disableInterrupts();
            try {
                Boolean bl2 = Boolean.FALSE;
                ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrap("busy?\\l\\l", (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)bl2));
            }
            finally {
                InterruptInfrastructure.enableInterrupts();
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_plugin__do_find")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_10(Object[] __env__, Object item) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", item, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)item));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1158506435)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__explorer_elements_changed(Object _self, Object who, Object elements) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=539311113)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__explorer_selection_changed(Object _self, Object who, Object selection) {
        block1: {
            CallSite callSite = Invoker.bootstrap("is_records?", selection);
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("not", Invoker.bootstrap("anonymous_collection?", selection));
            }
            if (!MagikObjectUtils.should_be_boolean(callSite) || !MagikObjectUtils.should_be_boolean(MagikObjectUtils.should_be_boolean(Invoker.bootstrap("floating?", who)) ? Invoker.bootstrapPrivate("expose_floating_selection", (Object)_self) : Invoker.bootstrapPrivate("expose_embedded_selection", (Object)_self))) break block1;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "record_selection"), (Object)VectorBuilder.bootstrap("vb", _self, Invoker.bootstrap("rwo_set", selection))));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-305426191)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block2: {
            block3: {
                block1: {
                    if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "rwo_set")) break block1;
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("do_work_at_priority()", (Object)Invoker.bootstrapPrivate("application", (Object)_self), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "int!explorer_model_set_rwo_set()"), (Object)BinaryDispatcher.bootstrap("-", Invoker.bootstrap("vm_priority", Thread.currentThread()), Integer.valueOf(1)), (Object)data));
                    break block2;
                }
                if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "map_selection")) break block3;
                if (Invoker.bootstrapPrivate("$slot_get_explorer_model()", (Object)_self) == null) break block2;
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("make_data_available()", (Object)Invoker.bootstrap("databus", Invoker.bootstrapPrivate("$slot_get_explorer_model()", (Object)_self)), (Object)ConstantBuilder.symbolBootstrap("symbol", "application_map_selection"), (Object)data));
                break block2;
            }
            boolean bl = MagikObjectUtils.is(data_type_name, ConstantBuilder.symbolBootstrap("symbol", "pre_activate_design"));
            Boolean bl2 = new Boolean(bl);
            if (!bl) {
                bl2 = new Boolean(MagikObjectUtils.is(data_type_name, ConstantBuilder.symbolBootstrap("symbol", "post_activate_design")));
            }
            if (!MagikObjectUtils.should_be_boolean(bl2) || Invoker.bootstrapPrivate("$slot_get_explorer_model()", (Object)_self) == null) break block2;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("make_data_available()", (Object)Invoker.bootstrap("databus", Invoker.bootstrapPrivate("$slot_get_explorer_model()", (Object)_self)), (Object)data_type_name, (Object)data));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1752982983)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=52, index=0)})
    public static Object explorer_plugin__reset(Object _self) {
        Object[] __env__ = new Object[1];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        Invoker.superNaturalBootstrap("reset()", "plugin", "sw", (Object)_self);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_10(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_embedded_explorer_views()", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_plugin__reset")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_11(Object[] __env__, Object explorer) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("reset()", (Object)explorer));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=821121032)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=79, index=0)})
    public static Object explorer_plugin__terminate(Object _self) {
        Object[] __env__ = new Object[1];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        CallSite model = Invoker.bootstrapPrivate("$slot_get_explorer_model()", (Object)_self);
        if (model != null) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("terminate()", (Object)model));
        }
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("clear_dialog_cache()", (Object)_self));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_11(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_embedded_explorer_views()", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_plugin__terminate")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_12(Object[] __env__, Object el) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("terminate()", (Object)el));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1439128328)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__explore(Object _self, Object an_explorer_element, Object relative_container, Object delta_x, Object delta_y) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("goto_explorer_element()", (Object)Invoker.bootstrapPrivate("start_explorer_view()", (Object)_self, (Object)Boolean.FALSE, (Object)relative_container, (Object)delta_x, (Object)delta_y), (Object)an_explorer_element, (Object)Boolean.FALSE));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-2099012535)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__explorer_selection_content_changed(Object _self, Object who, Object selection) {
        block1: {
            CallSite callSite = Invoker.bootstrap("is_records?", selection);
            if (!MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("is_empty?", selection);
            }
            if (!MagikObjectUtils.should_be_boolean(callSite) || !MagikObjectUtils.should_be_boolean(MagikObjectUtils.should_be_boolean(Invoker.bootstrap("floating?", who)) ? Invoker.bootstrapPrivate("expose_floating_selection", (Object)_self) : Invoker.bootstrapPrivate("expose_embedded_selection", (Object)_self))) break block1;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "selection_content"), (Object)Invoker.bootstrap("rwo_set", selection)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=770179483)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_plugin__int!explorer_model_set_rwo_set(Object _self, Object rwo_set_data) {
        Object object = null;
        try {
            object = _self;
            synchronized (object) {
                Boolean bl = Boolean.TRUE;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("background_busy?\\l\\l", (Object)Invoker.bootstrapPrivate("application", (Object)_self), (Object)bl));
                CallSite new_element = Invoker.bootstrap("set_rwo_set_from_application_databus()", Invoker.bootstrapPrivate("explorer_model", (Object)_self), rwo_set_data);
                if (new_element != null) {
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("goto_explorer_element()", (Object)_self, (Object)new_element));
                }
            }
        }
        finally {
            InterruptInfrastructure.disableInterrupts();
            try {
                Boolean bl = Boolean.FALSE;
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("background_busy?\\l\\l", (Object)Invoker.bootstrapPrivate("application", (Object)_self), (Object)bl));
            }
            finally {
                Object object2 = object;
                if (object2 != null) {
                    // ** MonitorExit[v0] (shouldn't be in output)
                }
                InterruptInfrastructure.enableInterrupts();
            }
        }
        {
            return ResultTuple.EMPTY_TUPLE;
        }
    }

    @SourceHash(value=-2134331353)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=107, end=163, index=0), @EnvVar(name="__leave_catcher__", type=Object[].class, start=121, end=166, index=2), @EnvVar(name="terminate?", type=Object.class, start=13, end=174, index=1)})
    public static Object explorer_plugin__permission_to_terminate?(Object _self) {
        Object[] __env__;
        block4: {
            __env__ = new Object[3];
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.superBootstrap("permission_to_terminate?()", "plugin", "sw", (Object)_self), (Object[])__env__, (int)1);
            Object object = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
            if (MagikObjectUtils.should_be_boolean(object)) {
                object = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_explorer_model()", (Object)_self), null));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("permission_to_terminate?()", Invoker.bootstrapPrivate("$slot_get_explorer_model()", (Object)_self)), (Object[])__env__, (int)1);
            }
            if (!MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))) break block4;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)2);
            try {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("explorers()", (MethodHandle)cfr_ldc_12(), (Object[])__env__, (Object)_self));
            }
            catch (LeaveCatcher.Leave leave) {
                ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getLeaveResult(leave);
            }
        }
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
    }

    @Parent(method="explorer_plugin__permission_to_terminate?")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="terminate?", type=Object[].class, start=39, end=57, index=1)})
    public static Object __loopbody_13(Object[] __env__, Object explorer) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.is(Invoker.bootstrap("permission_to_terminate?()", explorer), Boolean.FALSE)) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)1);
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_8() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_9", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_9() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_10", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_10() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_11", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_11() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_12", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_12() {
        try {
            return MethodHandles.lookup().findStatic(explorer_plugin_23620.class, "__loopbody_13", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_plugin_23620;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_plugin_23619
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_plugin_23619() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/base/explorer_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_plugin"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_model"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "find_plugin_name"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "find_default_text_id"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "find_categories"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "find_default_category"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "embedded_explorer_views"), null)), (Object)ConstantBuilder.symbolBootstrap("symbol", "plugin"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "editor_manager_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "name of editor manager plugin")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "expose_embedded_selection"), (Object)ConstantBuilder.symbolBootstrap("symbol", "boolean"), (Object)ConstantBuilder.stringBootstrap("string", "expose selection done in an embedded view to the application"), null, null, (Object)Boolean.TRUE));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "expose_floating_selection"), (Object)ConstantBuilder.symbolBootstrap("symbol", "boolean"), (Object)ConstantBuilder.stringBootstrap("string", "expose selection done in a floating view to the application"), null, null, (Object)Boolean.TRUE));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "floating_gui_definition_file_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of the gui definition file"), (Object)Boolean.FALSE, (Object)Boolean.FALSE, (Object)ConstantBuilder.stringBootstrap("string", "floating_explorer_view_gui.xml")));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "floating_gui_definition_module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of module in which gui definition is located")));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "floating_config_definition_file_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of config definition file"), (Object)Boolean.FALSE, (Object)Boolean.FALSE, (Object)ConstantBuilder.stringBootstrap("string", "floating_explorer_view_config.xml")));
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "floating_config_definition_module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of the module which provides plugin definition file")));
        ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "floating_resource_module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of the module which provides definition files")));
        ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "embedded_gui_definition_file_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of the gui definition file"), (Object)Boolean.FALSE, (Object)Boolean.FALSE, (Object)ConstantBuilder.stringBootstrap("string", "embedded_explorer_view_gui.xml")));
        ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "embedded_gui_definition_module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of module in which gui definition is located")));
        ResultTuple cfr_ignored_10 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "embedded_config_definition_file_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of config definition file"), (Object)Boolean.FALSE, (Object)Boolean.FALSE, (Object)ConstantBuilder.stringBootstrap("string", "embedded_explorer_view_config.xml")));
        ResultTuple cfr_ignored_11 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "embedded_config_definition_module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of the module which provides plugin definition file")));
        ResultTuple cfr_ignored_12 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "embedded_resource_module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of the module which provides definition files")));
        ResultTuple cfr_ignored_13 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "model_config_definition_file_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of config definition file"), (Object)Boolean.FALSE, (Object)Boolean.FALSE, (Object)ConstantBuilder.stringBootstrap("string", "explorer_model_config.xml")));
        ResultTuple cfr_ignored_14 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "model_config_definition_module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of the module which provides plugin definition file")));
        ResultTuple cfr_ignored_15 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "model_resource_module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "Name of the module which provides definition files")));
        ResultTuple cfr_ignored_16 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), ConstantBuilder.symbolBootstrap("symbol", "map_selection"), ConstantBuilder.symbolBootstrap("symbol", "pre_activate_design"), ConstantBuilder.symbolBootstrap("symbol", "post_activate_design")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_17 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "help_id"), (Object)6000, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_18 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "record_selection"), ConstantBuilder.symbolBootstrap("symbol", "service_provider")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_plugin", "init()", explorer_plugin_23620.class, "explorer_plugin__init", 4, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_plugin", "init_actions()", explorer_plugin_23620.class, "explorer_plugin__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "sw_databus_data_requested()", explorer_plugin_23620.class, "explorer_plugin__sw_databus_data_requested", 3, 2);
        MagikObjectUtils.createMethod("explorer_plugin", "process_initialisation_data_element()", explorer_plugin_23620.class, "explorer_plugin__process_initialisation_data_element", 2, 2);
        MagikObjectUtils.createMethod("explorer_plugin", "explorer_model", explorer_plugin_23620.class, "explorer_plugin__explorer_model_", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "new_explorer_view_framework()", explorer_plugin_23620.class, "explorer_plugin__new_explorer_view_framework", 2, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_plugin", "build_gui()", explorer_plugin_23620.class, "explorer_plugin__build_gui", 3, 2);
        MagikObjectUtils.createMethod("explorer_plugin", "post_build_gui()", explorer_plugin_23620.class, "explorer_plugin__post_build_gui", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "start_explorer()", explorer_plugin_23620.class, "explorer_plugin__start_explorer", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "start_explorer_view()", explorer_plugin_23620.class, "explorer_plugin__start_explorer_view", 5, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "explorers()", explorer_plugin_23620.class, "explorer_plugin__explorers", 4, 3, true, false, true, 0);
        MagikObjectUtils.createMethod("explorer_plugin", "map_trail", explorer_plugin_23620.class, "explorer_plugin__map_trail_", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "map_selection", explorer_plugin_23620.class, "explorer_plugin__map_selection_", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "map_world", explorer_plugin_23620.class, "explorer_plugin__map_world_", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "ace_control", explorer_plugin_23620.class, "explorer_plugin__ace_control_", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "get_ace_control_for()", explorer_plugin_23620.class, "explorer_plugin__get_ace_control_for", 2, 2);
        MagikObjectUtils.createMethod("explorer_plugin", "editor_manager", explorer_plugin_23620.class, "explorer_plugin__editor_manager_", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "goto_explorer_element()", explorer_plugin_23620.class, "explorer_plugin__goto_explorer_element", 3, 2);
        MagikObjectUtils.createMethod("explorer_plugin", "find_engine", explorer_plugin_23620.class, "explorer_plugin__find_engine_", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_plugin", "do_find()", explorer_plugin_23620.class, "explorer_plugin__do_find", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "explorer_elements_changed()", explorer_plugin_23620.class, "explorer_plugin__explorer_elements_changed", 3, 3);
        MagikObjectUtils.createMethod("explorer_plugin", "explorer_selection_changed()", explorer_plugin_23620.class, "explorer_plugin__explorer_selection_changed", 3, 3);
        MagikObjectUtils.createMethod("explorer_plugin", "sw_databus_data_available()", explorer_plugin_23620.class, "explorer_plugin__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_plugin", "reset()", explorer_plugin_23620.class, "explorer_plugin__reset", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "terminate()", explorer_plugin_23620.class, "explorer_plugin__terminate", 1, 1);
        MagikObjectUtils.createMethod("explorer_plugin", "explore()", explorer_plugin_23620.class, "explorer_plugin__explore", 5, 2);
        MagikObjectUtils.createMethod("explorer_plugin", "explorer_selection_content_changed()", explorer_plugin_23620.class, "explorer_plugin__explorer_selection_content_changed", 3, 3);
        MagikObjectUtils.createMethod("explorer_plugin", "int!explorer_model_set_rwo_set()", explorer_plugin_23620.class, "explorer_plugin__int!explorer_model_set_rwo_set", 2, 2);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_plugin", "permission_to_terminate?()", explorer_plugin_23620.class, "explorer_plugin__permission_to_terminate?", 1, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.Cloner;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_element_23682 {
    @SourceHash(value=-1049970246)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__new_with(Object _self, Object ... keys_and_args) {
        CallSite properties = Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)keys_and_args));
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("init_with()", (Object)Cloner.makeClone(Cloner.makeClone(_self)), (Object)properties));
    }

    @SourceHash(value=-373487498)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__init_with(Object _self, Object properties) {
        CallSite new_element;
        block0: {
            CallSite key = Invoker.bootstrap("default()", Invoker.bootstrap("remove_key()", properties, ConstantBuilder.symbolBootstrap("symbol", "key")), Invoker.bootstrap("\\b]", properties, ConstantBuilder.symbolBootstrap("symbol", "name")));
            CallSite parent = Invoker.bootstrap("remove_key()", properties, ConstantBuilder.symbolBootstrap("symbol", "parent"));
            new_element = Invoker.bootstrapPrivate("init()", (Object)_self, (Object)key, (Object)properties, (Object)parent);
            if (!MagikObjectUtils.is(Invoker.bootstrap("\\b]", properties, ConstantBuilder.symbolBootstrap("symbol", "lazy_children?")), Boolean.TRUE)) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_children_method()", (Object)new_element, (Object)Invoker.bootstrap("\\b]", properties, ConstantBuilder.symbolBootstrap("symbol", "owner")), (Object)ConstantBuilder.symbolBootstrap("symbol", "children_for_explorer_element()"), (Object)new_element));
        }
        return new_element;
    }

    @SourceHash(value=2002388758)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__define_method_with_info(Object _self, Object name, Object value, Object object, Object comment) {
        CallSite source_file = Invoker.bootstrap("as_charvec()", DynamicAccessor.bootstrapFetcher("!module_file!", "sw"));
        CallSite m = Invoker.bootstrapPrivate("define_method()", (Object)_self, (Object)name, (Object)value, (Object)object);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("send_method_info()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "method_finder"), (Object)m, null, (Object)VectorBuilder.bootstrap("vb", comment), (Object)source_file));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1144747364)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="prop_name", type=Object.class, start=13, end=128, index=0)})
    public static Object explorer_element__define_explorer_value_item(Object _self, Object property_name, Object description) {
        Object[] __env__ = new Object[1];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_symbol()", property_name), (Object[])__env__, (int)0);
        CallSite set_method_name = Invoker.bootstrap("with_chevron", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0));
        Object[] objectArray = new Object[]{__env__[0]};
        CallSite p = ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_element_23682.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("define_method_with_info()", (Object)_self, (Object)set_method_name, (Object)p, (Object)Boolean.FALSE, (Object)description));
        Object[] objectArray2 = new Object[]{__env__[0]};
        p = ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_element_23682.class, "proc___2", "", 2, 2, 0, 0, (Object[])objectArray2);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("define_method_with_info()", (Object)_self, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (Object)p, (Object)Boolean.FALSE, (Object)description));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_element__define_explorer_value_item")
    @SourceHash(value=897765834)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="prop_name", type=Object.class, start=0, end=31, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object value) {
        Object object = value;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("value", (Object)_self), (Object)object, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_element__define_explorer_value_item")
    @SourceHash(value=-413813716)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="prop_name", type=Object.class, start=0, end=22, index=0)})
    public static Object proc___2(Object[] __env__, Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)Invoker.bootstrapPrivate("value", (Object)_self), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
    }

    @SourceHash(value=1311848843)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=48, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=49, index=1)})
    public static Object explorer_element__define_explorer_value_items(Object _self, Object ... properties) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)properties));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_element__define_explorer_value_items")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object property_info) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("define_explorer_value_item()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object[])((Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)property_info))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-957355585)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__is_collection_part?_(Object _self) {
        CallSite parent = Invoker.bootstrapPrivate("parent", (Object)_self);
        boolean bl = MagikObjectUtils.isnt(parent, null);
        Object object = new Boolean(bl);
        if (bl) {
            object = Invoker.bootstrap("is_collection?", parent);
        }
        return object;
    }

    @SourceHash(value=-1405809981)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__has_collection_parts?_(Object _self) {
        CallSite callSite = Invoker.bootstrapPrivate("is_collection?", (Object)_self);
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            callSite = Invoker.bootstrapPrivate("children?", (Object)_self);
        }
        return callSite;
    }

    @SourceHash(value=-1412240672)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__rename(Object _self, Object new_name) {
        if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("~=", Invoker.bootstrapPrivate("$slot_get_key()", (Object)_self), new_name))) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_key()", (Object)_self, (Object)new_name));
        }
        Object object = new_name;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("name\\l\\l", (Object)_self, (Object)object));
        return new_name;
    }

    @SourceHash(value=838371674)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=301, end=371, index=0), @EnvVar(name="children", type=Object[].class, start=318, end=374, index=2), @EnvVar(name="__dynamic_frame__", type=Object.class, start=382, end=406, index=1), @EnvVar(name="children", type=Object[].class, start=406, end=414, index=2), @EnvVar(name="dt", type=Object[].class, start=23, end=414, index=3)})
    public static Object explorer_element__as_display_tree(Object _self, Object parent, Object object) {
        CallSite styled_string;
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "display_tree"), _self), (Object[])__env__, (int)3);
        object = new Boolean(MagikObjectUtils.is(object, Boolean.TRUE));
        if (parent != null) {
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_child()", (Object)parent, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), null, (Object)Boolean.TRUE));
            } else {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_child()", (Object)parent, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
            }
        }
        if ((styled_string = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "own_styled_string"))) == null) {
            CallSite callSite = Invoker.bootstrapPrivate("styled_string_for()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "name"));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "own_styled_string")));
            styled_string = callSite;
        }
        CallSite callSite = styled_string;
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("styled_string\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)callSite));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_value_method()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "value()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "set_value()")));
        if (MagikObjectUtils.is(Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "lazy_children?")), Boolean.TRUE)) {
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_children_method()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "child_display_trees()"), (Object)Boolean.TRUE));
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("children?\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)bl));
        } else if (MagikObjectUtils.should_be_boolean(object)) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)_self));
            CallSite callSite2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrap("children\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)callSite2));
        } else {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)_self));
        }
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
    }

    @Parent(method="explorer_element__as_display_tree")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("as_display_tree()", child, null, Boolean.TRUE)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_element__as_display_tree")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_3(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("as_display_tree()", (Object)child, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=401286945)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=38, end=169, index=3), @EnvVar(name="field_names", type=Object.class, start=30, end=169, index=2), @EnvVar(name="child_display_trees", type=Object.class, start=22, end=169, index=1), @EnvVar(name="cache_name", type=Object.class, start=14, end=169, index=0)})
    public static Object explorer_element__child_display_trees(Object _self, Object object) {
        Object[] __env__ = new Object[6];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)(MagikObjectUtils.is(object, Boolean.TRUE) ? ConstantBuilder.symbolBootstrap("symbol", "own_styled_string") : ConstantBuilder.symbolBootstrap("symbol", "child_styled_string")), (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)(MagikObjectUtils.is(object, Boolean.TRUE) ? VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name")) : Invoker.bootstrapPrivate("visible_field_names", (Object)_self)), (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)_self));
        Boolean bl = Boolean.FALSE;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("lazy_children?\\l\\l", (Object)_self, (Object)bl));
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
    }

    @Parent(method="explorer_element__child_display_trees")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="dt", type=Object[].class, start=40, end=199, index=4), @EnvVar(name="styled_string", type=Object[].class, start=75, end=199, index=5)})
    public static Object __loopbody_4(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
            CallSite callSite2 = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "display_tree"), child);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite2, (Object[])__env__, (int)4);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)callSite, (Object)callSite2));
            CallSite callSite3 = Invoker.bootstrap("\\b]", Invoker.bootstrap("value", child), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite3, (Object[])__env__, (int)5);
            if (callSite3 == null) {
                CallSite callSite4 = Invoker.bootstrap("styled_string_for()", child, (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("value", child), (Object)callSite4, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite4, (Object[])__env__, (int)5);
            }
            CallSite callSite5 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5);
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("styled_string\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)callSite5));
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_value_method()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)child, (Object)ConstantBuilder.symbolBootstrap("symbol", "value()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "set_value()")));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=704008702)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__styled_string_for(Object _self, Object ... fields) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("styled_string_for()", (Object)Invoker.bootstrapPrivate("owner", (Object)_self), (Object)_self, (Object[])((Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)fields))));
    }

    @SourceHash(value=1725381027)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=54, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=73, index=1)})
    public static Object explorer_element__a_collection(Object _self) {
        ResultTuple resultTuple;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("collections()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)_self));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return resultTuple;
    }

    @Parent(method="explorer_element__a_collection")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_5(Object[] __env__, Object collection) {
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(collection);
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
    }

    @SourceHash(value=-835849215)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__total_name_(Object _self) {
        CallSite total_name;
        block0: {
            total_name = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "total_name"));
            if (total_name != null) break block0;
            total_name = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "name"));
        }
        return total_name;
    }

    @SourceHash(value=-1361554724)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__operation_allowed_to?(Object _self, Object target_element, Object action) {
        Boolean bl;
        block3: {
            block2: {
                bl = Boolean.TRUE;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrap("includes?()", Invoker.bootstrap("branch_to_root", target_element), _self))) break block2;
                bl = Boolean.FALSE;
                break block3;
            }
            if (!MagikObjectUtils.is(target_element, Invoker.bootstrapPrivate("parent", (Object)_self))) break block3;
            if (action == ConstantBuilder.symbolBootstrap("symbol", "move")) {
                action = ConstantBuilder.symbolBootstrap("symbol", "copy");
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("is_collection?", (Object)_self))) {
                bl = Boolean.FALSE;
            }
        }
        return TupleBuilder.bootstrap("tb", bl, action);
    }

    @SourceHash(value=-46790874)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__uncache(Object _self) {
        Object var1_1 = null;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), var1_1, (Object)ConstantBuilder.symbolBootstrap("symbol", "cached_rwo_set")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("uncache_explorer_element()", (Object)Invoker.bootstrapPrivate("owner", (Object)_self), (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-801027378)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__has_geometry?_(Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1282751852)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__has_bounds?_(Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=11930565)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__collections(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-691015171)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__rwo_sets(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-711409395)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__set_value(Object _self, Object new_value, Object index, Object from_display_tree) {
        block0: {
            if (index != ConstantBuilder.symbolBootstrap("symbol", "name")) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("do_action()", (Object)Invoker.bootstrapPrivate("owner", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "rename"), (Object)_self, (Object)new_value));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-180143325)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__image_styled_string_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("image_styled_string_for()", (Object)Invoker.bootstrapPrivate("owner", (Object)_self), (Object)_self));
    }

    @SourceHash(value=1694120114)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__path_name_component_(Object _self) {
        return MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrapPrivate("level", (Object)_self), Integer.valueOf(1))) ? (ResultTuple)((Object)Invoker.tupleBootstrap("default()", (Object)Invoker.bootstrapPrivate("name", (Object)_self), (Object)Invoker.bootstrapPrivate("$slot_get_key()", (Object)_self))) : ConstantBuilder.stringBootstrap("string", "");
    }

    @SourceHash(value=1230442378)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__calculated_size(Object _self, Object object) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1468520547)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=54, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=73, index=1)})
    public static Object explorer_element__definitely_empty?_(Object _self) {
        Boolean bl;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("valid_rwo_sets()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)_self));
            bl = Boolean.TRUE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_element__definitely_empty?_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_6(Object[] __env__, Object rwo_set) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("not", Invoker.bootstrap("size_is_fast?", rwo_set));
            if (!MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", rwo_set), Integer.valueOf(0));
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(Boolean.FALSE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1578190781)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=54, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=73, index=1)})
    public static Object explorer_element__anonymous_collection?_(Object _self) {
        Boolean bl;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)_self));
            bl = Boolean.FALSE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_element__anonymous_collection?_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_7(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("anonymous_collection?", child))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(Boolean.TRUE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1546426234)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__cache_rwo_set(Object _self, Object an_rwo_set) {
        Object object = an_rwo_set;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "cached_rwo_set")));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=623608260)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__clean_up(Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-613048964)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_element__detach(Object _self, Object object) {
        block0: {
            Invoker.superNaturalBootstrap("detach()", "tree", "sw", (Object)_self);
            if (!MagikObjectUtils.is(object, Boolean.TRUE)) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("clean_up()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_element_23682.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_element_23682.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_element_23682.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_element_23682.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_element_23682.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_element_23682.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_element_23682.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_element_23682;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_element_23681
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_element_23681() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model/explorer_element.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_element"), (Object)VectorBuilder.EMPTY_VECTOR, (Object)ConstantBuilder.symbolBootstrap("symbol", "tree"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "is_group?"), (Object)Boolean.FALSE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "is_collection?"), (Object)Boolean.FALSE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_element", "new_with()", explorer_element_23682.class, "explorer_element__new_with", 2, 1);
        MagikObjectUtils.createMethod("explorer_element", "init_with()", explorer_element_23682.class, "explorer_element__init_with", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_element", "define_method_with_info()", explorer_element_23682.class, "explorer_element__define_method_with_info", 5, 5, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_element", "define_explorer_value_item()", explorer_element_23682.class, "explorer_element__define_explorer_value_item", 3, 3);
        MagikObjectUtils.createMethod("explorer_element", "define_explorer_value_items()", explorer_element_23682.class, "explorer_element__define_explorer_value_items", 2, 1);
        MagikObjectUtils.createMethod("explorer_element", "is_collection_part?", explorer_element_23682.class, "explorer_element__is_collection_part?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_element", "has_collection_parts?", explorer_element_23682.class, "explorer_element__has_collection_parts?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_element", "rename()", explorer_element_23682.class, "explorer_element__rename", 2, 2);
        MagikObjectUtils.createMethod("explorer_element", "as_display_tree()", explorer_element_23682.class, "explorer_element__as_display_tree", 3, 1);
        MagikObjectUtils.createMethod("explorer_element", "child_display_trees()", explorer_element_23682.class, "explorer_element__child_display_trees", 2, 1);
        MagikObjectUtils.createMethod("explorer_element", "styled_string_for()", explorer_element_23682.class, "explorer_element__styled_string_for", 2, 1);
        MagikObjectUtils.createMethod("explorer_element", "a_collection()", explorer_element_23682.class, "explorer_element__a_collection", 1, 1);
        MagikObjectUtils.createMethod("explorer_element", "total_name", explorer_element_23682.class, "explorer_element__total_name_", 1, 1);
        MagikObjectUtils.createMethod("explorer_element", "operation_allowed_to?()", explorer_element_23682.class, "explorer_element__operation_allowed_to?", 3, 3);
        MagikObjectUtils.createMethod("explorer_element", "uncache()", explorer_element_23682.class, "explorer_element__uncache", 1, 1);
        MagikObjectUtils.createMethod("explorer_element", "has_geometry?", explorer_element_23682.class, "explorer_element__has_geometry?_", 1, 1, false, true, false, 0);
        MagikObjectUtils.createMethod("explorer_element", "has_bounds?", explorer_element_23682.class, "explorer_element__has_bounds?_", 1, 1, false, true, false, 0);
        MagikObjectUtils.createMethod("explorer_element", "collections()", explorer_element_23682.class, "explorer_element__collections", 3, 3, true, true, false, 0);
        MagikObjectUtils.createMethod("explorer_element", "rwo_sets()", explorer_element_23682.class, "explorer_element__rwo_sets", 3, 3, true, true, false, 0);
        MagikObjectUtils.createMethod("explorer_element", "set_value()", explorer_element_23682.class, "explorer_element__set_value", 4, 4);
        MagikObjectUtils.createMethod("explorer_element", "image_styled_string", explorer_element_23682.class, "explorer_element__image_styled_string_", 1, 1);
        MagikObjectUtils.createMethod("explorer_element", "path_name_component", explorer_element_23682.class, "explorer_element__path_name_component_", 1, 1);
        MagikObjectUtils.createMethod("explorer_element", "calculated_size()", explorer_element_23682.class, "explorer_element__calculated_size", 2, 2, false, true, false, 0);
        MagikObjectUtils.createMethod("explorer_element", "definitely_empty?", explorer_element_23682.class, "explorer_element__definitely_empty?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_element", "anonymous_collection?", explorer_element_23682.class, "explorer_element__anonymous_collection?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_element", "cache_rwo_set()", explorer_element_23682.class, "explorer_element__cache_rwo_set", 2, 2);
        MagikObjectUtils.createMethod("explorer_element", "clean_up()", explorer_element_23682.class, "explorer_element__clean_up", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_element", "detach()", explorer_element_23682.class, "explorer_element__detach", 2, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.LoopBodyInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_group_element_23716 {
    @SourceHash(value=1240705563)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="rwo_sets", type=Object.class, start=13, end=212, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=212, index=1), @EnvVar(name="collection", type=Object.class, start=29, end=212, index=2)})
    public static Object explorer_group_element__rwo_set_(Object _self) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)_self));
        return MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), Integer.valueOf(0))) ? TupleBuilder.bootstrap("tb", Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rwo_set")), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)) : (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), Integer.valueOf(1))) ? TupleBuilder.bootstrap("tb", Invoker.bootstrap("an_element()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)) : TupleBuilder.bootstrap("tb", Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "composite_rwo_set"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
    }

    @Parent(method="explorer_group_element__rwo_set_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="collection", type=Object[].class, start=108, end=111, index=2), @EnvVar(name="child_rwo_set", type=Object[].class, start=51, end=123, index=4), @EnvVar(name="child_collection", type=Object[].class, start=44, end=123, index=3)})
    public static Object __loopbody_(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrap("rwo_set", (Object)child));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)3);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)4);
            if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4) != null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
                if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2) == null) {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object[])__env__, (int)2);
                }
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1248903868)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=55, index=1), @EnvVar(name="__loopenv__", type=Object.class, start=21, end=56, index=2), @EnvVar(name="__loopbody__", type=Object.class, start=13, end=56, index=3)})
    public static Object explorer_group_element__rwo_sets(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_group_element__rwo_sets")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=48, index=0)})
    public static Object __loopbody_2(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("rwo_sets()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)child));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_2")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_3(Object[] __env__, Object rwo_set, Object col, Object the_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)rwo_set, (Object)col, (Object)the_element);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1580775460)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=109, index=1), @EnvVar(name="collections", type=Object.class, start=37, end=109, index=2), @EnvVar(name="__loopenv__", type=Object.class, start=21, end=110, index=3), @EnvVar(name="__loopbody__", type=Object.class, start=13, end=110, index=4)})
    public static Object explorer_group_element__collections(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)_self));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_group_element__collections")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=48, index=0)})
    public static Object __loopbody_4(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("collections()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)child));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_4")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_5(Object[] __env__, Object collection, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            Object object = element;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)object, (Object)collection));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_group_element__collections")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_6(Object[] __env__, Object collection, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object)collection, (Object)element);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=594631452)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=54, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=73, index=1)})
    public static Object explorer_group_element__has_geometry?_(Object _self) {
        Boolean bl;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)_self));
            bl = Boolean.FALSE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_group_element__has_geometry?_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_7(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("has_geometry?", child))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(Boolean.TRUE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-558470597)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=54, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=73, index=1)})
    public static Object explorer_group_element__has_bounds?_(Object _self) {
        Boolean bl;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)_self));
            bl = Boolean.FALSE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_group_element__has_bounds?_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_8(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("has_bounds?", child))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(Boolean.TRUE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-574629336)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_element__column_headings_(Object _self) {
        CallSite headings;
        block0: {
            headings = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "column_headings"));
            if (headings != null) break block0;
            CallSite callSite = VectorBuilder.bootstrap("vb", Invoker.bootstrap("human_string()", Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "message_handler"), ConstantBuilder.symbolBootstrap("symbol", "explorer_group_element")), ConstantBuilder.symbolBootstrap("symbol", "name")));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "column_headings")));
            headings = callSite;
        }
        return headings;
    }

    @SourceHash(value=-2048167565)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_element__visible_field_names\l\l_(Object _self, Object visible_field_names) {
        Object object = visible_field_names;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "visible_field_names")));
        object = null;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "child_styled_string")));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=12574741)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_element__visible_field_names_(Object _self) {
        CallSite field_names;
        block0: {
            field_names = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"));
            if (field_names != null) break block0;
            CallSite callSite = VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name"));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "visible_field_names")));
            field_names = callSite;
        }
        return field_names;
    }

    @SourceHash(value=-691205569)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_element__lazy_children?_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("default()", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "lazy_children?")), (Object)Boolean.FALSE));
    }

    @SourceHash(value=-496345375)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_element__lazy_children?\l\l_(Object _self, Object object) {
        block0: {
            Object object2 = object;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "lazy_children?")));
            if (!MagikObjectUtils.should_be_boolean(object2)) break block0;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_children_method()", (Object)_self, (Object)Invoker.bootstrapPrivate("owner", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "children_for_explorer_element()"), (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=524484605)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="total_size", type=Object.class, start=77, end=164, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=85, end=164, index=1), @EnvVar(name="__leave_catcher__", type=Object[].class, start=110, end=167, index=4), @EnvVar(name="force?", type=Object.class, start=13, end=169, index=3)})
    public static Object explorer_group_element__calculated_size(Object _self, Object object) {
        CallSite callSite;
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)object, (Object[])__env__, (int)3);
        CallSite size = Invoker.bootstrapPrivate("size", (Object)_self);
        if (size != null) {
            callSite = size;
        } else {
            Object object2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
            if (!MagikObjectUtils.should_be_boolean(object2)) {
                object2 = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrapPrivate("lazy_children?", (Object)_self), Boolean.TRUE));
            }
            if (MagikObjectUtils.should_be_boolean(object2)) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)0, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)4);
                try {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_8(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("children", (Object)_self)));
                }
                catch (LeaveCatcher.Leave leave) {
                    ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).getLeaveResult(leave);
                }
                callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            } else {
                callSite = null;
            }
        }
        return callSite;
    }

    @Parent(method="explorer_group_element__calculated_size")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="total_size", type=Object[].class, start=46, end=64, index=0), @EnvVar(name="total_size", type=Object[].class, start=90, end=99, index=0), @EnvVar(name="child_size", type=Object[].class, start=35, end=99, index=2)})
    public static Object __loopbody_9(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            CallSite callSite = Invoker.bootstrap("calculated_size()", child, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)2);
            if (callSite == null) {
                EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)0);
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("+", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object[])__env__, (int)0);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1198483862)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=40, end=136, index=0), @EnvVar(name="w", type=Object[].class, start=29, end=147, index=1)})
    public static Object explorer_group_element__column_widths_(Object _self) {
        Object[] __env__;
        block0: {
            __env__ = new Object[2];
            CallSite callSite = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("value", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "column_widths"));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)1);
            if (callSite != null) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            CallSite names = Invoker.bootstrapPrivate("visible_field_names", (Object)_self);
            Object size = names != null ? Invoker.bootstrap("size", names) : Integer.valueOf(1);
            CallSite callSite2 = Invoker.bootstrap("new()", VectorBuilder.EMPTY_VECTOR, size);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("value", (Object)_self), (Object)callSite2, (Object)ConstantBuilder.symbolBootstrap("symbol", "column_widths")));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite2, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys()", (MethodHandle)cfr_ldc_9(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        }
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
    }

    @Parent(method="explorer_group_element__column_widths_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_10(Object[] __env__, Object nr) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            Integer n = 5;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)n, (Object)nr));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1454517814)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=56, index=1), @EnvVar(name="__loopenv__", type=Object.class, start=21, end=57, index=2), @EnvVar(name="__loopbody__", type=Object.class, start=13, end=57, index=3)})
    public static Object explorer_group_element__valid_rwo_sets(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_10(), (Object[])__env__, (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_group_element__valid_rwo_sets")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=49, index=0)})
    public static Object __loopbody_11(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("valid_rwo_sets()", (MethodHandle)cfr_ldc_11(), (Object[])__env__, (Object)child));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_11")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_12(Object[] __env__, Object rwo_set, Object col, Object the_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)rwo_set, (Object)col, (Object)the_element);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1873984814)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=28, end=52, index=0)})
    public static Object explorer_group_element__clean_up(Object _self) {
        block0: {
            Object[] __env__ = new Object[1];
            if (!MagikObjectUtils.is(Invoker.bootstrapPrivate("lazy_children?", (Object)_self), Boolean.FALSE)) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_12(), (Object[])__env__, (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_group_element__clean_up")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_13(Object[] __env__, Object c) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("clean_up()", (Object)c));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_8() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_9", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_9() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_10", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_10() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_11", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_11() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_12", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_12() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_element_23716.class, "__loopbody_13", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_group_element_23716;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_group_element_23715
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_group_element_23715() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model/explorer_group_element.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_group_element"), (Object)VectorBuilder.EMPTY_VECTOR, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_element"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "is_group?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_explorer_value_items()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "owner"), ConstantBuilder.stringBootstrap("string", "The owner of the Explorer Element")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name"), ConstantBuilder.stringBootstrap("string", "Name of the Explorer Element")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "lazy_children?"), ConstantBuilder.stringBootstrap("string", "Indicates whether children are evaluated lazy")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "description"), ConstantBuilder.stringBootstrap("string", "Description of the Explorer Element")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "user_data"), ConstantBuilder.stringBootstrap("string", "Any data the user wishes to store")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "size"), ConstantBuilder.stringBootstrap("string", "The known size of the rwo-set")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "image"), ConstantBuilder.stringBootstrap("string", "Image of the Explorer Element")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), ConstantBuilder.stringBootstrap("string", "The visible fields for this element")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "column_headings"), ConstantBuilder.stringBootstrap("string", "The column headings to be used")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "column_widths"), ConstantBuilder.stringBootstrap("string", "The column widths for this element"))));
        MagikObjectUtils.createMethod("explorer_group_element", "rwo_set", explorer_group_element_23716.class, "explorer_group_element__rwo_set_", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_element", "rwo_sets()", explorer_group_element_23716.class, "explorer_group_element__rwo_sets", 3, 3, true, false, false, 0);
        MagikObjectUtils.createMethod("explorer_group_element", "collections()", explorer_group_element_23716.class, "explorer_group_element__collections", 3, 3, true, false, false, 0);
        MagikObjectUtils.createMethod("explorer_group_element", "has_geometry?", explorer_group_element_23716.class, "explorer_group_element__has_geometry?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_element", "has_bounds?", explorer_group_element_23716.class, "explorer_group_element__has_bounds?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_element", "column_headings", explorer_group_element_23716.class, "explorer_group_element__column_headings_", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_element", "visible_field_names<<", explorer_group_element_23716.class, "explorer_group_element__visible_field_names\\l\\l_", 2, 2);
        MagikObjectUtils.createMethod("explorer_group_element", "visible_field_names", explorer_group_element_23716.class, "explorer_group_element__visible_field_names_", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_element", "lazy_children?", explorer_group_element_23716.class, "explorer_group_element__lazy_children?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_element", "lazy_children?<<", explorer_group_element_23716.class, "explorer_group_element__lazy_children?\\l\\l_", 2, 2);
        MagikObjectUtils.createMethod("explorer_group_element", "calculated_size()", explorer_group_element_23716.class, "explorer_group_element__calculated_size", 2, 2);
        MagikObjectUtils.createMethod("explorer_group_element", "column_widths", explorer_group_element_23716.class, "explorer_group_element__column_widths_", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_element", "valid_rwo_sets()", explorer_group_element_23716.class, "explorer_group_element__valid_rwo_sets", 3, 3, true, false, false, 0);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_group_element", "clean_up()", explorer_group_element_23716.class, "explorer_group_element__clean_up", 1, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.LoopBodyInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_collection_element_23765 {
    @SourceHash(value=-1251712150)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="sets", type=Object.class, start=94, end=226, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=86, end=226, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=325, end=384, index=2), @EnvVar(name="__leave_catcher__", type=Object[].class, start=339, end=387, index=3)})
    public static Object explorer_collection_element__rwo_set_(Object _self) {
        CallSite collection;
        CallSite rs;
        block11: {
            Object[] __env__ = new Object[6];
            rs = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "cached_rwo_set"));
            boolean bl = MagikObjectUtils.is(rs, null);
            Boolean bl2 = new Boolean(bl);
            if (bl) {
                rs = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "rwo_set"));
                bl2 = new Boolean(MagikObjectUtils.is(rs, null));
            }
            if (MagikObjectUtils.should_be_boolean(bl2)) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "set")), (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_children()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)_self));
                rs = MagikObjectUtils.is(Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), 0) ? Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rwo_set")) : (MagikObjectUtils.is(Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), 1) ? Invoker.bootstrap("an_element()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)) : Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "composite_rwo_set"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
            } else {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_invalid_elements()", (Object)rs));
            }
            collection = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "collection"));
            if (collection != null) break block11;
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("responds_to?()", rs, ConstantBuilder.symbolBootstrap("symbol", "source")))) {
                collection = Invoker.bootstrap("source", rs);
            } else {
                CallSite el = Invoker.bootstrap("an_element()", rs);
                if (el != null) {
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("responds_to?()", el, ConstantBuilder.symbolBootstrap("symbol", "elements()")))) {
                        Object object;
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)3);
                        try {
                            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
                            object = Invoker.bootstrap("elements()", cfr_ldc_1(), __env__, el);
                        }
                        catch (LeaveCatcher.Leave leave) {
                            Object object2;
                            object = object2 = ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).getLeaveResult(leave).pop();
                        }
                        collection = object;
                    } else {
                        collection = Invoker.bootstrap("source_collection", el);
                    }
                } else {
                    collection = Invoker.bootstrap("an_element()", Invoker.bootstrap("all_collections()", rs));
                }
            }
            CallSite callSite = collection;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "collection")));
        }
        return TupleBuilder.bootstrap("tb", rs, collection);
    }

    @Parent(method="explorer_collection_element__rwo_set_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="child_rwo_set", type=Object[].class, start=28, end=66, index=5)})
    public static Object __loopbody_(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("rwo_set", child);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)5);
            if (callSite != null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_collection_element__rwo_set_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="r", type=Object[].class, start=28, end=70, index=4)})
    public static Object __loopbody_2(Object[] __env__, Object a_set) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            CallSite callSite = Invoker.bootstrap("an_element()", a_set);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)4);
            if (callSite != null) {
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).makeLeave((ResultTuple)((Object)Invoker.tupleBootstrap("source_collection", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=387952289)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__rwo_sets(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_set", (Object)_self));
        Object collection = resultTuple.pop();
        Object rwo_set = resultTuple.pop();
        LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)__loopbody__, (Object[])__loopenv__, (Object)rwo_set, (Object)collection, (Object)_self);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=550546570)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__collections(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        block0: {
            ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_set", (Object)_self));
            resultTuple.pop();
            Object collection = resultTuple.pop();
            if (collection == null) break block0;
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)__loopbody__, (Object[])__loopenv__, (Object)collection, (Object)_self);
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-2101896482)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__has_geometry?_(Object _self) {
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_set", (Object)_self));
        resultTuple.pop();
        Object collection = resultTuple.pop();
        boolean bl = MagikObjectUtils.isnt(collection, null);
        Object object = new Boolean(bl);
        if (bl) {
            object = Invoker.bootstrap("has_geometry_fields?", Invoker.bootstrap("descriptor", collection));
        }
        return object;
    }

    @SourceHash(value=-1719798538)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__has_bounds?_(Object _self) {
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_set", (Object)_self));
        resultTuple.pop();
        Object collection = resultTuple.pop();
        boolean bl = MagikObjectUtils.isnt(collection, null);
        Object object = new Boolean(bl);
        if (bl) {
            object = Invoker.bootstrap("responds_to?()", Invoker.bootstrap("record_exemplar", collection), ConstantBuilder.symbolBootstrap("symbol", "bounds"));
        }
        return object;
    }

    @SourceHash(value=1991504124)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__available_field_names_(Object _self) {
        CallSite field_names;
        block0: {
            field_names = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "available_field_names"));
            if (field_names != null) break block0;
            CallSite available_field_names = MagikObjectUtils.is(Invoker.bootstrapPrivate("all_fields_available??", (Object)_self), Boolean.TRUE) ? Invoker.bootstrapPrivate("int!available_field_names", (Object)_self) : (MagikObjectUtils.is(Invoker.bootstrapPrivate("all_fields_available??", (Object)_self), ConstantBuilder.maybeBootstrap("_maybe")) ? Invoker.bootstrapPrivate("int!visible_field_names()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "default")) : Invoker.bootstrapPrivate("int!visible_field_names()", (Object)_self));
            CallSite callSite = available_field_names;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "available_field_names")));
            field_names = callSite;
        }
        return field_names;
    }

    @SourceHash(value=819966477)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=105, index=0), @EnvVar(name="fields", type=Object.class, start=21, end=105, index=1), @EnvVar(name="collection", type=Object[].class, start=51, end=106, index=2)})
    public static Object explorer_collection_element__available_fields_(Object _self) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_set", (Object)_self));
        resultTuple.pop();
        EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple.pop(), (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("available_field_names", (Object)_self)));
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
    }

    @Parent(method="explorer_collection_element__available_fields_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_3(Object[] __env__, Object field_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("field()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), field_name)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1567708884)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__ace_control_(Object _self) {
        CallSite ace_name = Invoker.bootstrap("default()", Invoker.bootstrapPrivate("ace_name", (Object)_self), ConstantBuilder.stringBootstrap("string", "Default"));
        return (ResultTuple)((Object)Invoker.tupleBootstrap("get_ace_control_for()", (Object)Invoker.bootstrapPrivate("owner", (Object)_self), (Object)ace_name));
    }

    @SourceHash(value=1117140069)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__ace_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("ace", (Object)Invoker.bootstrapPrivate("ace_control", (Object)_self)));
    }

    @SourceHash(value=455472010)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=35, end=125, index=1), @EnvVar(name="all_names", type=Object.class, start=27, end=125, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=144, index=2)})
    public static Object explorer_collection_element__visible_field_names\l\l_(Object _self, Object visible_field_names) {
        ResultTuple resultTuple;
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)2);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("int!available_field_names", (Object)_self), (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)visible_field_names));
            Object object = visible_field_names;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "visible_field_names")));
            object = null;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "child_styled_string")));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getReturnResult(return_);
        }
        return resultTuple;
    }

    @Parent(method="explorer_collection_element__visible_field_names\\l\\l_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_4(Object[] __env__, Object name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("includes?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), name)))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeReturn(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1547351875)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__visible_field_names_(Object _self) {
        CallSite field_names;
        block0: {
            field_names = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"));
            if (field_names != null) break block0;
            CallSite callSite = Invoker.bootstrapPrivate("int!visible_field_names()", (Object)_self);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "visible_field_names")));
            field_names = callSite;
        }
        return field_names;
    }

    @SourceHash(value=-1463630208)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__lazy_children?_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("default()", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "lazy_children?")), (Object)Boolean.FALSE));
    }

    @SourceHash(value=264844606)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__calculated_size(Object _self, Object object) {
        Object object2;
        CallSite size = Invoker.bootstrapPrivate("size", (Object)_self);
        if (size != null) {
            object2 = size;
        } else {
            CallSite rwo_set = Invoker.bootstrapPrivate("rwo_set", (Object)_self);
            boolean bl = MagikObjectUtils.isnt(rwo_set, null);
            Object object3 = new Boolean(bl);
            if (bl && !MagikObjectUtils.should_be_boolean(object3 = Invoker.bootstrap("size_is_fast?", rwo_set))) {
                object3 = object;
            }
            object2 = MagikObjectUtils.should_be_boolean(object3) ? (ResultTuple)((Object)Invoker.tupleBootstrap("size", (Object)rwo_set)) : null;
        }
        return object2;
    }

    @SourceHash(value=-833097171)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=54, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=73, index=1)})
    public static Object explorer_collection_element__anonymous_collection?_(Object _self) {
        Boolean bl;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("collections()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)_self));
            bl = Boolean.FALSE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_collection_element__anonymous_collection?_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_5(Object[] __env__, Object collection) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (Invoker.bootstrap("name", collection) == null) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(Boolean.TRUE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1919601156)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__valid_rwo_sets(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_set", (Object)_self));
        Object collection = resultTuple.pop();
        Object rwo_set = resultTuple.pop();
        LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)__loopbody__, (Object[])__loopenv__, (Object)rwo_set, (Object)collection, (Object)_self);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=173077176)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=85, index=0), @EnvVar(name="collection", type=Object[].class, start=57, end=88, index=2), @EnvVar(name="collection", type=Object[].class, start=103, end=104, index=2), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=104, index=1)})
    public static Object explorer_collection_element__is_valid_collection?(Object _self, Object database) {
        Boolean bl;
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_set", (Object)_self));
            resultTuple.pop();
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple.pop(), (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("datasets()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)database));
            bl = Boolean.FALSE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_collection_element__is_valid_collection?")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_6(Object[] __env__, Object ds) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("includes?()", Invoker.bootstrap("collections", ds), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(Boolean.TRUE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1933603799)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=259, index=0), @EnvVar(name="__leave_catcher__", type=Object[].class, start=27, end=260, index=1)})
    public static Object explorer_collection_element__int!visible_field_names_(Object _self) {
        Object field_names;
        Object object;
        Object object2;
        Object object3;
        CallSite col;
        Object object4;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            object4 = Invoker.bootstrapPrivate("collections()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)_self);
        }
        catch (LeaveCatcher.Leave leave) {
            Object object5;
            object4 = col = (object5 = ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getLeaveResult(leave).pop());
        }
        if (MagikObjectUtils.should_be_boolean(object3 = Invoker.bootstrap("is_kind_of?()", col, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "view_collection")))) {
            object3 = object2 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("name", col), null));
        }
        if (!MagikObjectUtils.should_be_boolean(object3)) {
            object2 = object = Invoker.bootstrap("is_kind_of?()", col, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "transient_collection"));
        }
        if (!MagikObjectUtils.should_be_boolean(object2)) {
            boolean bl = MagikObjectUtils.isnt(col, null);
            object = new Boolean(bl);
            if (bl) {
                object = BinaryDispatcher.bootstrap("=", Invoker.bootstrap("source_view", col), Invoker.bootstrap("scratch_view", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "gis_program_manager")));
            }
        }
        if (MagikObjectUtils.should_be_boolean(object)) {
            field_names = Invoker.bootstrap("visible_field_names", col);
        } else if (col != null) {
            CallSite use_ace = Invoker.bootstrap("ace", Invoker.bootstrapPrivate("ace_control", (Object)_self));
            CallSite tag = Invoker.bootstrap("visibility_tag_for_rwo_sets", Invoker.bootstrapPrivate("owner", (Object)_self));
            field_names = Invoker.bootstrap("table_visible_field_names_with_defaults()", use_ace, Invoker.bootstrap("name", Invoker.bootstrap("source_view", col)), Invoker.bootstrap("name", col), tag);
        } else {
            field_names = VectorBuilder.EMPTY_VECTOR;
        }
        return field_names;
    }

    @Parent(method="explorer_collection_element__int!visible_field_names_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_7(Object[] __env__, Object a_collection) {
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeLeave(TupleBuilder.bootstrap("tb", a_collection));
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
    }

    @SourceHash(value=421806441)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="all_names", type=Object.class, start=27, end=100, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=35, end=100, index=1), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=119, index=2)})
    public static Object explorer_collection_element__available_field_names\l\l_(Object _self, Object available_field_names) {
        ResultTuple resultTuple;
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)2);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("int!available_field_names", (Object)_self), (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)available_field_names));
            Object object = available_field_names;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "available_field_names")));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getReturnResult(return_);
        }
        return resultTuple;
    }

    @Parent(method="explorer_collection_element__available_field_names\\l\\l_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_8(Object[] __env__, Object name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("includes?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), name)))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeReturn(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=41349538)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=165, index=0), @EnvVar(name="__leave_catcher__", type=Object[].class, start=27, end=166, index=1)})
    public static Object explorer_collection_element__int!available_field_names_(Object _self) {
        CallSite callSite;
        Object object;
        CallSite col;
        Object object2;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            object2 = Invoker.bootstrapPrivate("collections()", (MethodHandle)cfr_ldc_8(), (Object[])__env__, (Object)_self);
        }
        catch (LeaveCatcher.Leave leave) {
            Object object3;
            object2 = col = (object3 = ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getLeaveResult(leave).pop());
        }
        if (MagikObjectUtils.should_be_boolean(object = Invoker.bootstrap("is_kind_of?()", col, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "view_collection")))) {
            object = callSite = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("name", col), null));
        }
        if (!MagikObjectUtils.should_be_boolean(object)) {
            callSite = Invoker.bootstrap("is_kind_of?()", col, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "transient_collection"));
        }
        Object field_names = MagikObjectUtils.should_be_boolean(callSite) ? Invoker.bootstrap("visible_field_names", col) : (col != null ? Invoker.bootstrap("all_field_names", col) : VectorBuilder.EMPTY_VECTOR);
        return field_names;
    }

    @Parent(method="explorer_collection_element__int!available_field_names_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_9(Object[] __env__, Object a_collection) {
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeLeave(TupleBuilder.bootstrap("tb", a_collection));
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
    }

    @SourceHash(value=1693845780)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_collection_element__clean_up(Object _self) {
        block1: {
            CallSite rwo_set = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_value()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "rwo_set"));
            if (rwo_set == null) {
                return ResultTuple.EMPTY_TUPLE;
            }
            if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_kind_of?()", rwo_set, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "lazy_record_collection")))) break block1;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("discard()", (Object)rwo_set));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=786507429)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=273, index=0), @EnvVar(name="__leave_catcher__", type=Object[].class, start=27, end=274, index=1)})
    public static Object explorer_collection_element__int!visible_field_names(Object _self, Object tag) {
        Object field_names;
        Object object;
        Object object2;
        Object object3;
        CallSite col;
        Object object4;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            object4 = Invoker.bootstrapPrivate("collections()", (MethodHandle)cfr_ldc_9(), (Object[])__env__, (Object)_self);
        }
        catch (LeaveCatcher.Leave leave) {
            Object object5;
            object4 = col = (object5 = ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getLeaveResult(leave).pop());
        }
        if (MagikObjectUtils.should_be_boolean(object3 = Invoker.bootstrap("is_kind_of?()", col, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "view_collection")))) {
            object3 = object2 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("name", col), null));
        }
        if (!MagikObjectUtils.should_be_boolean(object3)) {
            object2 = object = Invoker.bootstrap("is_kind_of?()", col, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "transient_collection"));
        }
        if (!MagikObjectUtils.should_be_boolean(object2)) {
            boolean bl = MagikObjectUtils.isnt(col, null);
            object = new Boolean(bl);
            if (bl) {
                object = BinaryDispatcher.bootstrap("=", Invoker.bootstrap("source_view", col), Invoker.bootstrap("scratch_view", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "gis_program_manager")));
            }
        }
        if (MagikObjectUtils.should_be_boolean(object)) {
            field_names = Invoker.bootstrap("visible_field_names", col);
        } else if (col != null) {
            CallSite use_ace = Invoker.bootstrap("ace", Invoker.bootstrapPrivate("ace_control", (Object)_self));
            tag = Invoker.bootstrap("default()", tag, Invoker.bootstrap("visibility_tag_for_rwo_sets", Invoker.bootstrapPrivate("owner", (Object)_self)));
            field_names = Invoker.bootstrap("table_visible_field_names_with_defaults()", use_ace, Invoker.bootstrap("name", Invoker.bootstrap("source_view", col)), Invoker.bootstrap("name", col), tag);
        } else {
            field_names = VectorBuilder.EMPTY_VECTOR;
        }
        return field_names;
    }

    @Parent(method="explorer_collection_element__int!visible_field_names")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_10(Object[] __env__, Object a_collection) {
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeLeave(TupleBuilder.bootstrap("tb", a_collection));
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_collection_element_23765.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_collection_element_23765.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_collection_element_23765.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_collection_element_23765.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_collection_element_23765.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_collection_element_23765.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_collection_element_23765.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_collection_element_23765.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_8() {
        try {
            return MethodHandles.lookup().findStatic(explorer_collection_element_23765.class, "__loopbody_9", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_9() {
        try {
            return MethodHandles.lookup().findStatic(explorer_collection_element_23765.class, "__loopbody_10", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_collection_element_23765;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_collection_element_23764
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_collection_element_23764() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model/explorer_collection_element.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_collection_element"), (Object)VectorBuilder.EMPTY_VECTOR, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_element"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "is_collection?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_explorer_value_items()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "owner"), ConstantBuilder.stringBootstrap("string", "The owner of the Explorer Element")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name"), ConstantBuilder.stringBootstrap("string", "Name of the Explorer Element")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "description"), ConstantBuilder.stringBootstrap("string", "Description of the Explorer Element")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "lazy_children?"), ConstantBuilder.stringBootstrap("string", "Indicates whether children are evaluated lazy")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "user_data"), ConstantBuilder.stringBootstrap("string", "Any data the user wishes to store")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "size"), ConstantBuilder.stringBootstrap("string", "The known size of the rwo-set")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), ConstantBuilder.stringBootstrap("string", "The rwo_set this collection represents")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "ace_name"), ConstantBuilder.stringBootstrap("string", "Ace_name the element should look for field information")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "available_field_names"), ConstantBuilder.stringBootstrap("string", "The available fields for this element")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), ConstantBuilder.stringBootstrap("string", "The visible fields for this element")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "field_formats"), ConstantBuilder.stringBootstrap("string", "The column formats for this element")), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "column_widths"), ConstantBuilder.stringBootstrap("string", "The column widths for this element"))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_variable()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "all_fields_available??"), (Object)Boolean.FALSE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_collection_element", "rwo_set", explorer_collection_element_23765.class, "explorer_collection_element__rwo_set_", 1, 1);
        MagikObjectUtils.createMethod("explorer_collection_element", "rwo_sets()", explorer_collection_element_23765.class, "explorer_collection_element__rwo_sets", 3, 3, true, false, false, 0);
        MagikObjectUtils.createMethod("explorer_collection_element", "collections()", explorer_collection_element_23765.class, "explorer_collection_element__collections", 3, 3, true, false, false, 0);
        MagikObjectUtils.createMethod("explorer_collection_element", "has_geometry?", explorer_collection_element_23765.class, "explorer_collection_element__has_geometry?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_collection_element", "has_bounds?", explorer_collection_element_23765.class, "explorer_collection_element__has_bounds?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_collection_element", "available_field_names", explorer_collection_element_23765.class, "explorer_collection_element__available_field_names_", 1, 1);
        MagikObjectUtils.createMethod("explorer_collection_element", "available_fields", explorer_collection_element_23765.class, "explorer_collection_element__available_fields_", 1, 1);
        MagikObjectUtils.createMethod("explorer_collection_element", "ace_control", explorer_collection_element_23765.class, "explorer_collection_element__ace_control_", 1, 1);
        MagikObjectUtils.createMethod("explorer_collection_element", "ace", explorer_collection_element_23765.class, "explorer_collection_element__ace_", 1, 1);
        MagikObjectUtils.createMethod("explorer_collection_element", "visible_field_names<<", explorer_collection_element_23765.class, "explorer_collection_element__visible_field_names\\l\\l_", 2, 2);
        MagikObjectUtils.createMethod("explorer_collection_element", "visible_field_names", explorer_collection_element_23765.class, "explorer_collection_element__visible_field_names_", 1, 1);
        MagikObjectUtils.createMethod("explorer_collection_element", "lazy_children?", explorer_collection_element_23765.class, "explorer_collection_element__lazy_children?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_collection_element", "calculated_size()", explorer_collection_element_23765.class, "explorer_collection_element__calculated_size", 2, 2);
        MagikObjectUtils.createMethod("explorer_collection_element", "anonymous_collection?", explorer_collection_element_23765.class, "explorer_collection_element__anonymous_collection?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_collection_element", "valid_rwo_sets()", explorer_collection_element_23765.class, "explorer_collection_element__valid_rwo_sets", 3, 3, true, false, false, 0);
        MagikObjectUtils.createMethod("explorer_collection_element", "is_valid_collection?()", explorer_collection_element_23765.class, "explorer_collection_element__is_valid_collection?", 2, 2);
        MagikObjectUtils.createMethod("explorer_collection_element", "int!visible_field_names", explorer_collection_element_23765.class, "explorer_collection_element__int!visible_field_names_", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_collection_element", "available_field_names<<", explorer_collection_element_23765.class, "explorer_collection_element__available_field_names\\l\\l_", 2, 2);
        MagikObjectUtils.createMethod("explorer_collection_element", "int!available_field_names", explorer_collection_element_23765.class, "explorer_collection_element__int!available_field_names_", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_collection_element", "clean_up()", explorer_collection_element_23765.class, "explorer_collection_element__clean_up", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_collection_element", "int!visible_field_names()", explorer_collection_element_23765.class, "explorer_collection_element__int!visible_field_names", 2, 1, false, false, true, 0));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_model_plugin_mixin_23809 {
    @SourceHash(value=-1328304082)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__get_ace_control_for(Object _self, Object ace_name) {
        CallSite ace_control = Invoker.bootstrap("get_ace_control_for()", Invoker.bootstrapPrivate("framework", (Object)_self), ace_name);
        return ace_control != null ? ace_control : null;
    }

    @SourceHash(value=-1382310439)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__visibility_tag_for_rwo_sets_(Object _self) {
        CallSite vis_tag;
        block2: {
            Boolean bl;
            vis_tag = null;
            CallSite exp_pl = null;
            CallSite app = Invoker.bootstrapPrivate("application", (Object)_self);
            boolean bl2 = MagikObjectUtils.isnt(app, null);
            Boolean bl3 = new Boolean(bl2);
            if (bl2) {
                exp_pl = Invoker.bootstrap("get_service_provider()", app, ConstantBuilder.symbolBootstrap("symbol", "explorer"));
                bl3 = bl = new Boolean(MagikObjectUtils.isnt(exp_pl, null));
            }
            if (MagikObjectUtils.should_be_boolean(bl3)) {
                bl = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("get_property_signature()", exp_pl, ConstantBuilder.symbolBootstrap("symbol", "visibility_tag_for_rwo_sets")), null));
            }
            if (!MagikObjectUtils.should_be_boolean(bl)) break block2;
            vis_tag = Invoker.bootstrap("visibility_tag_for_rwo_sets", exp_pl);
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrap("default()", (Object)vis_tag, (Object)ConstantBuilder.symbolBootstrap("symbol", "browser")));
    }

    @SourceHash(value=308871964)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__children_for_explorer_element(Object _self, Object an_explorer_element) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1437007007)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__uncache_explorer_element(Object _self, Object an_explorer_element) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-999416406)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="0d046dac-7b11-42fb-8cc3-793843f1f40d", type=Object.class, start=103, end=242, index=0), @EnvVar(name="0d046dac-7b11-42fb-8cc3-793843f1f40d", type=Object.class, start=284, end=562, index=0)})
    public static Object explorer_model_plugin_mixin__icon_scheme_for_collection(Object _self, Object collection) {
        CallSite icon;
        block15: {
            Object draw_result;
            CallSite default_draw_properties;
            Integer width;
            Integer height;
            CallSite rex;
            Object draw_properties;
            block14: {
                Object object;
                Object[] __env__ = new Object[1];
                draw_properties = null;
                icon = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("collection_icon_schemes", (Object)_self), collection);
                if (icon != null) break block15;
                Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"));
                rex = Invoker.bootstrap("record_exemplar", collection);
                height = 16;
                width = 16;
                default_draw_properties = Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), ConstantBuilder.symbolBootstrap("symbol", "height"), height, ConstantBuilder.symbolBootstrap("symbol", "width"), width);
                Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"));
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[0]};
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "does_not_understand"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_model_plugin_mixin_23809.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray));
                            ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrap("legend_info_for()", (Object)rex, (Object)default_draw_properties));
                            draw_properties = resultTuple.pop();
                            draw_result = resultTuple.pop();
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            break block14;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object2;
                        object = object2 = Thrower.checkTag(throw_, callSite).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "does_not_understand")))) {
                    draw_result = ConstantBuilder.symbolBootstrap("symbol", "use_default");
                } else {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            if (draw_result == ConstantBuilder.symbolBootstrap("symbol", "use_default")) {
                CallSite callSite = VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "image"), Invoker.bootstrap("icon_scheme", collection));
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("collection_icon_schemes", (Object)_self), (Object)callSite, (Object)collection));
                icon = callSite;
            } else if (draw_result == ConstantBuilder.symbolBootstrap("symbol", "use_custom_draw")) {
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("responds_to?()", rex, ConstantBuilder.symbolBootstrap("symbol", "draw_legend_for()")))) {
                    draw_properties = Invoker.bootstrap("default()", draw_properties, default_draw_properties);
                    CallSite custom_width = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", draw_properties, ConstantBuilder.symbolBootstrap("symbol", "width")), width);
                    CallSite custom_height = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", draw_properties, ConstantBuilder.symbolBootstrap("symbol", "height")), height);
                    CallSite custom_draw = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "custom_draw_renderer"), custom_width, custom_height, _self, ConstantBuilder.symbolBootstrap("symbol", "custom_draw_style_for()"), rex, rex, custom_width, custom_height, draw_properties);
                    CallSite callSite = VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "custom_draw"), custom_draw);
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("collection_icon_schemes", (Object)_self), (Object)callSite, (Object)collection));
                    icon = callSite;
                } else {
                    CallSite callSite = VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "image"), Invoker.bootstrap("icon_scheme", collection));
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("collection_icon_schemes", (Object)_self), (Object)callSite, (Object)collection));
                    icon = callSite;
                }
            } else {
                CallSite callSite = VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "image"), draw_result);
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("collection_icon_schemes", (Object)_self), (Object)callSite, (Object)collection));
                icon = callSite;
            }
        }
        return icon;
    }

    @Parent(method="explorer_model_plugin_mixin__icon_scheme_for_collection")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="0d046dac-7b11-42fb-8cc3-793843f1f40d", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=88883305)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__custom_draw_style_for(Object _self, Object an_object, Object draw_element, Object width, Object height, Object properties, Object canvas, Object x, Object y, Object text_style, Object renderer) {
        CallSite box = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "bounding_box"), x, y, BinaryDispatcher.bootstrap("+", x, width), BinaryDispatcher.bootstrap("+", y, height));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("draw_on()", (Object)box, (Object)canvas, (Object)Invoker.bootstrapPrivate("style_background_fs", (Object)_self)));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("draw_legend_for()", (Object)an_object, (Object)draw_element, (Object)canvas, (Object)box, (Object)text_style, (Object)properties));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1795227888)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__image_styled_string_for(Object _self, Object an_explorer_element) {
        CallSite rs = null;
        CallSite image = Invoker.bootstrap("\\b]", Invoker.bootstrap("value", an_explorer_element), ConstantBuilder.symbolBootstrap("symbol", "image"));
        if (image != null) {
            return VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "image"), image);
        }
        Object object = Invoker.bootstrap("is_collection?", an_explorer_element);
        if (MagikObjectUtils.should_be_boolean(object)) {
            rs = Invoker.bootstrap("rwo_set", an_explorer_element);
            object = new Boolean(MagikObjectUtils.isnt(rs, null));
        }
        if (MagikObjectUtils.should_be_boolean(object)) {
            CallSite collections = Invoker.bootstrap("all_collections()", rs);
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", collections), Integer.valueOf(0)))) {
                CallSite collection = Invoker.bootstrap("an_element()", collections);
                return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("icon_scheme_for_collection()", (Object)_self, (Object)collection));
            }
            return VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "generic_object"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")));
        }
        return VectorBuilder.EMPTY_VECTOR;
    }

    @SourceHash(value=-1152447237)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="styled_rope", type=Object.class, start=21, end=69, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=69, index=0)})
    public static Object explorer_model_plugin_mixin__text_styled_string_for(Object _self, Object an_explorer_element, Object keys) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)keys));
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
    }

    @Parent(method="explorer_model_plugin_mixin__text_styled_string_for")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object nr, Object key) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", nr, Integer.valueOf(1)))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)ConstantBuilder.symbolBootstrap("symbol", "tab")));
            }
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_all_last()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "value"), key)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1722541608)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__styled_string_for(Object _self, Object an_explorer_element, Object ... keys) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("new_appending()", (Object)Invoker.bootstrapPrivate("image_styled_string_for()", (Object)_self, (Object)an_explorer_element), (Object[])((Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrapPrivate("text_styled_string_for()", (Object)_self, (Object)an_explorer_element, (Object)keys)))));
    }

    @SourceHash(value=-728225249)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=89, end=121, index=0), @EnvVar(name="name", type=Object.class, start=35, end=128, index=1), @EnvVar(name="__return_catcher__", type=Object[].class, start=27, end=147, index=2), @EnvVar(name="existing_names", type=Object.class, start=13, end=147, index=4)})
    public static Object explorer_model_plugin_mixin__get_unique_name(Object _self, Object proposed_name, Object existing_names) {
        CallSite callSite;
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)existing_names, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)2);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)proposed_name, (Object[])__env__, (int)1);
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("includes?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))))) {
                return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
            }
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("upto()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)2, (Object)100));
            callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getReturnResult(return_);
        }
        return callSite;
    }

    @Parent(method="explorer_model_plugin_mixin__get_unique_name")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="test_name", type=Object[].class, start=49, end=110, index=3)})
    public static Object __loopbody_2(Object[] __env__, Object nr) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.stringBootstrap("string", " ("), nr, ConstantBuilder.stringBootstrap("string", ")")), (Object[])__env__, (int)3);
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("includes?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeReturn(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-28266380)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=79, index=1), @EnvVar(name="existing_names", type=Object.class, start=13, end=79, index=0)})
    public static Object explorer_model_plugin_mixin__get_unique_name_for_parent(Object _self, Object proposed_name, Object parent) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "equality_set")), (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)parent));
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("get_unique_name()", (Object)_self, (Object)proposed_name, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
    }

    @Parent(method="explorer_model_plugin_mixin__get_unique_name_for_parent")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_3(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (Object)Invoker.bootstrap("name", child)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1739704785)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__notify_changed_explorer_elements(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("notify_changed_explorer_elements()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1007466777)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__action_allowed?(Object _self, Object action, Object source_element, Object records) {
        return TupleBuilder.bootstrap("tb", Boolean.FALSE, action);
    }

    @SourceHash(value=1251262165)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=59, end=100, index=0)})
    public static Object explorer_model_plugin_mixin__do_action(Object _self, Object action, Object source_element, Object argument) {
        block1: {
            block2: {
                Object[] __env__;
                block0: {
                    __env__ = new Object[1];
                    if (action != ConstantBuilder.symbolBootstrap("symbol", "delete")) break block0;
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)source_element, (Object)Boolean.TRUE));
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_changed_explorer_elements()", (Object)_self));
                    break block1;
                }
                if (action != ConstantBuilder.symbolBootstrap("symbol", "delete_all")) break block2;
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)Invoker.bootstrap("children", source_element)));
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_changed_explorer_elements()", (Object)_self));
                break block1;
            }
            if (action != ConstantBuilder.symbolBootstrap("symbol", "rename")) break block1;
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("rename()", (Object)source_element, (Object)argument));
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_changed_explorer_elements()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_plugin_mixin__do_action")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_4(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)element, (Object)Boolean.TRUE));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-667209951)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__start_move_action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        return TupleBuilder.bootstrap("tb", Boolean.FALSE, action);
    }

    @SourceHash(value=1386841265)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__end_move_action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        return TupleBuilder.bootstrap("tb", Boolean.FALSE, action);
    }

    @SourceHash(value=1570927156)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=24, end=175, index=0), @EnvVar(name="_self", type=Object.class, start=15, end=176, index=1)})
    public static Object explorer_model_plugin_mixin__do_move_action(Object _self, Object action, Object source_element, Object target_element) {
        Object new_element;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        if (action == ConstantBuilder.symbolBootstrap("symbol", "move")) {
            new_element = source_element;
        } else if (action == ConstantBuilder.symbolBootstrap("symbol", "copy")) {
            new_element = Invoker.bootstrap("deep_copy()", source_element, Boolean.TRUE);
        } else {
            if (action == ConstantBuilder.symbolBootstrap("symbol", "link")) {
                return ResultTuple.EMPTY_TUPLE;
            }
            return ResultTuple.EMPTY_TUPLE;
        }
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("rename()", (Object)new_element, (Object)Invoker.bootstrapPrivate("get_unique_name_for_parent()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("name", new_element), (Object)target_element)));
        Object object = target_element;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("parent\\l\\l", (Object)new_element, (Object)object));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_depth_first()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)new_element));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_changed_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return new_element;
    }

    @Parent(method="explorer_model_plugin_mixin__do_move_action")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_5(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("owner\\l\\l", (Object)element, (Object)callSite));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_group?", element))) {
                CallSite callSite2 = ConstantBuilder.symbolBootstrap("symbol", "folder");
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("image\\l\\l", (Object)element, (Object)callSite2));
                callSite2 = null;
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("value", element), (Object)callSite2, (Object)ConstantBuilder.symbolBootstrap("symbol", "own_styled_string")));
                callSite2 = null;
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("value", element), (Object)callSite2, (Object)ConstantBuilder.symbolBootstrap("symbol", "child_styled_string")));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1750435584)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__database_changed(Object _self, Object database) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=329821399)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_plugin_mixin__default_ace_name(Object _self) {
        CallSite an_app;
        Boolean bl;
        CallSite an_ace_control = null;
        CallSite an_ace = null;
        CallSite an_f = Invoker.bootstrapPrivate("framework", (Object)_self);
        boolean bl2 = MagikObjectUtils.isnt(an_f, null);
        Boolean bl3 = new Boolean(bl2);
        if (bl2) {
            an_ace_control = Invoker.bootstrap("ace_control", an_f);
            bl3 = bl = new Boolean(MagikObjectUtils.isnt(an_ace_control, null));
        }
        if (MagikObjectUtils.should_be_boolean(bl3)) {
            an_ace = Invoker.bootstrap("ace", an_ace_control);
            bl = new Boolean(MagikObjectUtils.isnt(an_ace, null));
        }
        return MagikObjectUtils.should_be_boolean(bl) ? (ResultTuple)((Object)Invoker.tupleBootstrap("name", an_ace)) : ((an_app = Invoker.bootstrapPrivate("application", (Object)_self)) != null ? (ResultTuple)((Object)Invoker.tupleBootstrap("ace_name", (Object)an_app)) : null);
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_plugin_mixin_23809.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_plugin_mixin_23809.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_plugin_mixin_23809.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_plugin_mixin_23809.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_plugin_mixin_23809.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_model_plugin_mixin_23809;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_model_plugin_mixin_23808
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_model_plugin_mixin_23808() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model/explorer_model_plugin_mixin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_mixin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_model_plugin_mixin"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_plugin_mixin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "collection_icon_schemes"), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "hash_table")), (Object)ConstantBuilder.symbolBootstrap("symbol", "private")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("def_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "visibility_tag_for_rwo_sets"), (Object)ConstantBuilder.symbolBootstrap("symbol", "type"), (Object)ConstantBuilder.symbolBootstrap("symbol", "symbol"), (Object)ConstantBuilder.symbolBootstrap("symbol", "default_value"), (Object)ConstantBuilder.symbolBootstrap("symbol", "browser"), (Object)ConstantBuilder.symbolBootstrap("symbol", "description"), (Object)ConstantBuilder.stringBootstrap("string", "ACE tag to use for displaying the RWO sets with")));
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "get_ace_control_for()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__get_ace_control_for", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "visibility_tag_for_rwo_sets", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__visibility_tag_for_rwo_sets_", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "children_for_explorer_element()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__children_for_explorer_element", 2, 2, false, true, false, 0);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "uncache_explorer_element()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__uncache_explorer_element", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "icon_scheme_for_collection()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__icon_scheme_for_collection", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "custom_draw_style_for()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__custom_draw_style_for", 11, 11);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "image_styled_string_for()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__image_styled_string_for", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "text_styled_string_for()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__text_styled_string_for", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "styled_string_for()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__styled_string_for", 3, 2);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "get_unique_name()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__get_unique_name", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "get_unique_name_for_parent()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__get_unique_name_for_parent", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "notify_changed_explorer_elements()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__notify_changed_explorer_elements", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "action_allowed?()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__action_allowed?", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "do_action()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__do_action", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "start_move_action_allowed?()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__start_move_action_allowed?", 4, 4);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "end_move_action_allowed?()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__end_move_action_allowed?", 4, 4);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "do_move_action()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__do_move_action", 4, 4);
        MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "database_changed()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__database_changed", 2, 2);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_model_plugin_mixin", "default_ace_name()", explorer_model_plugin_mixin_23809.class, "explorer_model_plugin_mixin__default_ace_name", 1, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.LoopBodyInvoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_model_framework_23848 {
    @SourceHash(value=457767440)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=72, end=352, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=359, index=2)})
    public static Object explorer_model_framework__setup_explorer_elements(Object _self, Object object) {
        block3: {
            Object[] __env__ = new Object[4];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
            boolean bl = MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), null);
            Boolean bl2 = new Boolean(bl);
            if (!bl) {
                bl2 = new Boolean(MagikObjectUtils.is(object, Boolean.TRUE));
            }
            if (!MagikObjectUtils.should_be_boolean(bl2)) break block3;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            if (Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)) == null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"))));
                CallSite callSite = Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer")), ConstantBuilder.symbolBootstrap("symbol", "key"), ConstantBuilder.stringBootstrap("string", ""), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_explorer"), Invoker.bootstrapPrivate("module_name", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))), ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(475)));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)callSite, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            } else {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)))));
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_request_all_data()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")));
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_model_trees()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_framework__setup_explorer_elements")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="top_elements", type=Object[].class, start=49, end=104, index=1), @EnvVar(name="plugin", type=Object[].class, start=56, end=104, index=3)})
    public static Object __loopbody_(Object[] __env__, Object info) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple resultTuple2 = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)info)));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)3);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)callSite, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1824261419)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_framework__ace_control_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("ace_control", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=1513362235)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_framework__map_trail_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("map_trail", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=-906925246)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_framework__map_selection_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("map_selection", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=2084246844)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_framework__map_world_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("map_world", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=776147253)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_framework__explorer_elements_(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_explorer_elements()", (Object)_self));
        return (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), (Object)_self));
    }

    @SourceHash(value=671706989)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_framework__notify_changed_explorer_elements(Object _self) {
        CallSite elements = Invoker.bootstrapPrivate("explorer_elements", (Object)_self);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("explorer_elements_changed()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)_self, (Object)elements));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), (Object)elements));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1968175422)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=141, end=202, index=0), @EnvVar(name="__leave_catcher__", type=Object[].class, start=155, end=205, index=5), @EnvVar(name="__dynamic_frame__", type=Object.class, start=250, end=311, index=1), @EnvVar(name="__leave_catcher__", type=Object[].class, start=264, end=314, index=5), @EnvVar(name="third_level_elements", type=Object.class, start=14, end=336, index=2), @EnvVar(name="second_level_element", type=Object.class, start=22, end=336, index=3), @EnvVar(name="new_third_level_element", type=Object.class, start=30, end=336, index=4)})
    public static Object explorer_model_framework__set_rwo_set_from_application_databus(Object _self, Object information) {
        Object[] __env__;
        block5: {
            __env__ = new Object[6];
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)4);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "set")), (Object[])__env__, (int)2);
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)information)));
            Object[] args = resultTuple.remainder(2);
            resultTuple.pop();
            resultTuple.pop();
            CallSite props = Invoker.bootstrap("new_from_gathered()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), args);
            EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)3);
            EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)4);
            if (MagikObjectUtils.is(Invoker.bootstrap("\\b]", props, ConstantBuilder.symbolBootstrap("symbol", "set_current?")), Boolean.TRUE)) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)5);
                try {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_breadth_first()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("explorer_elements", (Object)_self)));
                }
                catch (LeaveCatcher.Leave leave) {
                    ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))).getLeaveResult(leave);
                }
            }
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "application_rwo_set"), (Object)information));
            if (!MagikObjectUtils.is(Invoker.bootstrap("\\b]", props, ConstantBuilder.symbolBootstrap("symbol", "set_current?")), Boolean.TRUE)) break block5;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)5);
            try {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_breadth_first()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("explorer_elements", (Object)_self)));
            }
            catch (LeaveCatcher.Leave leave) {
                ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))).getLeaveResult(leave);
            }
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrap("default()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
    }

    @Parent(method="explorer_model_framework__set_rwo_set_from_application_databus")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.is(Invoker.bootstrap("level", element), 3)) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)element));
            } else if (MagikObjectUtils.is(Invoker.bootstrap("level", element), 4)) {
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_framework__set_rwo_set_from_application_databus")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="second_level_element", type=Object[].class, start=88, end=99, index=3), @EnvVar(name="new_third_level_element", type=Object[].class, start=96, end=99, index=4), @EnvVar(name="second_level_element", type=Object[].class, start=107, end=110, index=3), @EnvVar(name="new_third_level_element", type=Object[].class, start=107, end=110, index=4), @EnvVar(name="second_level_element", type=Object[].class, start=144, end=153, index=3), @EnvVar(name="new_third_level_element", type=Object[].class, start=144, end=153, index=4)})
    public static Object __loopbody_3(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            boolean bl = MagikObjectUtils.is(Invoker.bootstrap("level", element), 3);
            Object object = new Boolean(bl);
            if (bl) {
                object = Invoker.bootstrap("not", Invoker.bootstrap("includes?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), element));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3) == null) {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("parent", element), (Object[])__env__, (int)3);
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)element, (Object[])__env__, (int)4);
                } else {
                    EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)4);
                }
            } else if (MagikObjectUtils.is(Invoker.bootstrap("level", element), 4)) {
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-833384951)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_framework__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block2: {
            block4: {
                block3: {
                    block1: {
                        if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) break block1;
                        ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
                        Object elements = resultTuple.pop();
                        Object plugin = resultTuple.pop();
                        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_explorer_elements()", (Object)_self));
                        Object object = elements;
                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), (Object)object, (Object)plugin));
                        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_model_trees()", (Object)_self));
                        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_changed_explorer_elements()", (Object)_self));
                        break block2;
                    }
                    if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "refresh")) break block3;
                    ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "refresh"), (Object)data));
                    break block2;
                }
                if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "pre_activate_design")) break block4;
                ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_design_change_info()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "set"))));
                break block2;
            }
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "post_activate_design")) break block2;
            CallSite callSite = Invoker.bootstrapPrivate("$slot_get_design_change_info()", (Object)_self);
            ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_design_change_info()", (Object)_self, null));
            CallSite to_do = callSite;
            if (to_do != null && MagikObjectUtils.should_be_boolean(Invoker.bootstrap("includes?()", to_do, ConstantBuilder.symbolBootstrap("symbol", "database_changed")))) {
                ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("database_changed()", (Object)_self));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-782450947)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_framework__note_change(Object _self, Object who, Object what, Object ... args) {
        block4: {
            block3: {
                if (what != ConstantBuilder.symbolBootstrap("symbol", "view")) break block3;
                CallSite type = Invoker.bootstrap("an_element()", args);
                boolean bl = MagikObjectUtils.is(type, ConstantBuilder.symbolBootstrap("symbol", "added_dsm"));
                Boolean bl2 = new Boolean(bl);
                if (!bl) {
                    bl2 = new Boolean(MagikObjectUtils.is(type, ConstantBuilder.symbolBootstrap("symbol", "removed_dsm")));
                }
                if (!MagikObjectUtils.should_be_boolean(bl2)) break block4;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("database_changed()", (Object)_self));
                break block4;
            }
            if (what != ConstantBuilder.symbolBootstrap("symbol", "alternative_path")) break block4;
            if (Invoker.bootstrapPrivate("$slot_get_design_change_info()", (Object)_self) == null) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("database_changed()", (Object)_self));
            } else {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrapPrivate("$slot_get_design_change_info()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "database_changed")));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1568530548)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=48, end=125, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=132, index=1)})
    public static Object explorer_model_framework__setup_model_trees(Object _self) {
        block0: {
            Object[] __env__ = new Object[2];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
            if (Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)) == null) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("children()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("sorted_plugin_trees()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_framework__setup_model_trees")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_4(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)child));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_framework__setup_model_trees")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_5(Object[] __env__, Object tree) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_child()", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), (Object)tree));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1634705748)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_framework__init(Object _self, Object name, Object a_framework, Object properties) {
        Invoker.superNaturalBootstrap("init()", "plugin_framework", "sw", (Object)_self, (Object)name, (Object)a_framework, (Object)properties);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_dependent()", (Object)Invoker.bootstrapPrivate("database", (Object)_self), (Object)_self));
        return _self;
    }

    @SourceHash(value=-506524065)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_framework__database_changed(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("do_work_at_priority()", (Object)Invoker.bootstrapPrivate("application", (Object)_self), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "int!database_changed()"), (Object)Invoker.bootstrap("vm_priority", Thread.currentThread())));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=394177259)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=89, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=90, index=1)})
    public static Object explorer_model_framework__int!database_changed(Object _self) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("plugins()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Boolean.TRUE));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_changed_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_framework__int!database_changed")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_6(Object[] __env__, Object plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("database_changed()", (Object)plugin, (Object)Invoker.bootstrapPrivate("database", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=304242543)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=47, end=137, index=2), @EnvVar(name="sc", type=Object.class, start=39, end=137, index=1), @EnvVar(name="_self", type=Object.class, start=31, end=138, index=4), @EnvVar(name="__loopenv__", type=Object.class, start=23, end=138, index=5), @EnvVar(name="__loopbody__", type=Object.class, start=15, end=138, index=6)})
    public static Object explorer_model_framework__sorted_plugin_trees(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        Object[] __env__ = new Object[7];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)6);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        CallSite sort_proc = ConstantBuilder.procWithEmptyEnvBootstrap("proc", (Class<?>)explorer_model_framework_23848.class, "proc___", "", 3, 3, 0, 0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sorted_collection"), null, sort_proc), (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("plugins()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_framework__sorted_plugin_trees")
    @SourceHash(value=111613222)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    public static Object proc___(Object _self, Object a, Object b) {
        return BinaryDispatcher.bootstrap("cf", Invoker.bootstrap("write_string", Invoker.bootstrap("name", a)), Invoker.bootstrap("write_string", Invoker.bootstrap("name", b)));
    }

    @Parent(method="explorer_model_framework__sorted_plugin_trees")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=106, index=0), @EnvVar(name="element", type=Object[].class, start=48, end=112, index=3)})
    public static Object __loopbody_7(Object[] __env__, Object a_plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            CallSite callSite = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), a_plugin);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)3);
            if (callSite == null) {
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_8(), (Object[])__env__, (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), a_plugin)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_7")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_8(Object[] __env__, Object an_explorer_group_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (an_explorer_group_element == null) {
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)an_explorer_group_element));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_framework__sorted_plugin_trees")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_9(Object[] __env__, Object tree) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object)tree);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-281090746)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_framework__terminate(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_dependent()", (Object)Invoker.bootstrapPrivate("database", (Object)_self), (Object)_self));
        Invoker.superNaturalBootstrap("terminate()", "plugin_framework", "sw", (Object)_self);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1949689201)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=68, end=147, index=0)})
    public static Object explorer_model_framework__int!output_debug_information(Object _self, Object object) {
        Object[] __env__ = new Object[1];
        CallSite my_app = Invoker.bootstrapPrivate("application", (Object)_self);
        CallSite all_apps = Invoker.bootstrap("applications", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "smallworld_product"));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write"), (Object)ConstantBuilder.stringBootstrap("string", "Detected: "), (Object)object);
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("includes?()", all_apps, my_app)))) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write"), (Object)ConstantBuilder.stringBootstrap("string", "Updating an inactive explorer plugin in "), (Object)Invoker.bootstrap("application_name", my_app), (Object)ConstantBuilder.stringBootstrap("string", "("), (Object)Invoker.bootstrap("as_oop", my_app), (Object)ConstantBuilder.stringBootstrap("string", ")"));
            ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write"), (Object)ConstantBuilder.stringBootstrap("string", "Running applications are: "));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_9(), (Object[])__env__, (Object)all_apps));
        } else {
            ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write"), (Object)ConstantBuilder.stringBootstrap("string", "Updating an active explorer plugin belonging to "), (Object)my_app);
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_framework__int!output_debug_information")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_10(Object[] __env__, Object an_app) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write"), (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "tab_char"), (Object)Invoker.bootstrap("application_name", an_app), (Object)ConstantBuilder.stringBootstrap("string", "("), (Object)Invoker.bootstrap("as_oop", an_app), (Object)ConstantBuilder.stringBootstrap("string", ")"), (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "tab_char"), (Object)Invoker.bootstrap("title", Invoker.bootstrap("top_frame", an_app)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_framework_23848.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_framework_23848.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_framework_23848.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_framework_23848.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_framework_23848.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_framework_23848.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_framework_23848.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_framework_23848.class, "__loopbody_9", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_8() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_framework_23848.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_9() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_framework_23848.class, "__loopbody_10", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_model_framework_23848;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_model_framework_23847
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_model_framework_23847() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model/explorer_model_framework.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_model_framework"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "design_change_info"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin_framework"), ConstantBuilder.symbolBootstrap("symbol", "explorer_model_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_framework"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), ConstantBuilder.symbolBootstrap("symbol", "refresh"), ConstantBuilder.symbolBootstrap("symbol", "pre_activate_design"), ConstantBuilder.symbolBootstrap("symbol", "post_activate_design")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_model_framework", "setup_explorer_elements()", explorer_model_framework_23848.class, "explorer_model_framework__setup_explorer_elements", 2, 1);
        MagikObjectUtils.createMethod("explorer_model_framework", "ace_control", explorer_model_framework_23848.class, "explorer_model_framework__ace_control_", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_framework", "map_trail", explorer_model_framework_23848.class, "explorer_model_framework__map_trail_", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_framework", "map_selection", explorer_model_framework_23848.class, "explorer_model_framework__map_selection_", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_framework", "map_world", explorer_model_framework_23848.class, "explorer_model_framework__map_world_", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_framework", "explorer_elements", explorer_model_framework_23848.class, "explorer_model_framework__explorer_elements_", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_framework", "notify_changed_explorer_elements()", explorer_model_framework_23848.class, "explorer_model_framework__notify_changed_explorer_elements", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_framework", "set_rwo_set_from_application_databus()", explorer_model_framework_23848.class, "explorer_model_framework__set_rwo_set_from_application_databus", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_framework", "sw_databus_data_available()", explorer_model_framework_23848.class, "explorer_model_framework__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_model_framework", "note_change()", explorer_model_framework_23848.class, "explorer_model_framework__note_change", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_framework", "setup_model_trees()", explorer_model_framework_23848.class, "explorer_model_framework__setup_model_trees", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_framework", "init()", explorer_model_framework_23848.class, "explorer_model_framework__init", 4, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_framework", "database_changed()", explorer_model_framework_23848.class, "explorer_model_framework__database_changed", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_framework", "int!database_changed()", explorer_model_framework_23848.class, "explorer_model_framework__int!database_changed", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_framework", "sorted_plugin_trees()", explorer_model_framework_23848.class, "explorer_model_framework__sorted_plugin_trees", 3, 3, true, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_framework", "terminate()", explorer_model_framework_23848.class, "explorer_model_framework__terminate", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_model_framework", "int!output_debug_information()", explorer_model_framework_23848.class, "explorer_model_framework__int!output_debug_information", 2, 2));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_model_find_source_mixin_23854 {
    @SourceHash(value=1093030801)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_find_source_mixin__find_source_rwo_sets_for(Object _self, Object properties) {
        return ResultTuple.EMPTY_TUPLE;
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_model_find_source_mixin_23854;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_model_find_source_mixin_23853
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_model_find_source_mixin_23853() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model_plugins/explorer_model_find_source_mixin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_mixin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_model_find_source_mixin"));
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_model_find_source_mixin", "find_source_rwo_sets_for()", explorer_model_find_source_mixin_23854.class, "explorer_model_find_source_mixin__find_source_rwo_sets_for", 2, 2, false, true, false, 0));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_model_datasets_plugin_23885 {
    @SourceHash(value=1094279191)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=24, end=92, index=6), @EnvVar(name="dataset_info", type=Object.class, start=15, end=92, index=7)})
    public static Object explorer_model_datasets_plugin__process_plugin_data(Object _self, Object plugin_data) {
        Object[] __env__ = new Object[8];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)7);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)6);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)7);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)6);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrap("elements", plugin_data)));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_plugin_data()", (Object)_self, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_datasets_plugin__process_plugin_data")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=37, end=65, index=5)})
    public static Object __loopbody_(Object[] __env__, Object explorer_data) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)));
        try {
            if (Invoker.bootstrap("type", explorer_data) == ConstantBuilder.symbolBootstrap("symbol", "elements")) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)5);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)5);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrap("elements", explorer_data)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=38, end=338, index=4), @EnvVar(name="info", type=Object.class, start=22, end=338, index=2), @EnvVar(name="display_all?", type=Object.class, start=30, end=338, index=3)})
    public static Object __loopbody_2(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)4);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrap("attribute()", element, ConstantBuilder.symbolBootstrap("symbol", "name"))), (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.TRUE, (Object[])__env__, (int)3);
            CallSite callSite = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "datasets")));
            callSite = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "aces")));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)4);
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrap("elements", element)));
            callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "display_all?")));
            if (Invoker.bootstrap("type", element) == ConstantBuilder.symbolBootstrap("symbol", "element")) {
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            } else if (Invoker.bootstrap("type", element) == ConstantBuilder.symbolBootstrap("symbol", "default")) {
                ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_key()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "name")));
                ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_key()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "datasets")));
                ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_2")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="display_all?", type=Object[].class, start=89, end=92, index=3), @EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=129, index=0), @EnvVar(name="sub", type=Object.class, start=8, end=141, index=1)})
    public static Object __loopbody_3(Object[] __env__, Object sub) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)sub, (Object[])__env__, (int)1);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            if (Invoker.bootstrap("type", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)) == ConstantBuilder.symbolBootstrap("symbol", "datasets")) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("~=", Invoker.bootstrap("\\b]", Invoker.bootstrap("attributes", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), ConstantBuilder.stringBootstrap("string", "display_all")), ConstantBuilder.stringBootstrap("string", "no")), (Object[])__env__, (int)3);
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)Invoker.bootstrap("elements", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_3")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_4(Object[] __env__, Object data) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (Invoker.bootstrap("type", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)) == ConstantBuilder.symbolBootstrap("symbol", "datasets")) {
                CallSite name = Invoker.bootstrap("attribute()", data, ConstantBuilder.symbolBootstrap("symbol", "name"));
                CallSite alias = Invoker.bootstrap("default()", Invoker.bootstrap("attribute()", data, ConstantBuilder.symbolBootstrap("symbol", "alias")), name);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "datasets")), (Object)VectorBuilder.bootstrap("vb", name, alias)));
            } else {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "aces")), (Object)Invoker.bootstrap("attribute()", data, ConstantBuilder.symbolBootstrap("symbol", "name"))));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-2144044612)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="soc", type=Object.class, start=60, end=257, index=9), @EnvVar(name="processed_dataset_managers", type=Object.class, start=51, end=257, index=8), @EnvVar(name="me", type=Object.class, start=24, end=257, index=6), @EnvVar(name="__dynamic_frame__", type=Object.class, start=42, end=257, index=7), @EnvVar(name="get_ace_control", type=Object.class, start=69, end=257, index=11), @EnvVar(name="get_dataset_manager", type=Object.class, start=33, end=257, index=10), @EnvVar(name="_self", type=Object.class, start=15, end=258, index=15)})
    public static Object explorer_model_datasets_plugin__setup_data(Object _self) {
        Object[] __env__ = new Object[18];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)15);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)6);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)10);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)7);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)8);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)9);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)11);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)15), (Object[])__env__, (int)6);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("spatial_object_controller", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)15)), (Object[])__env__, (int)9);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "set")), (Object[])__env__, (int)8);
        Object[] objectArray = new Object[2];
        objectArray[1] = __env__[6];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_model_datasets_plugin_23885.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray), (Object[])__env__, (int)11);
        Object[] objectArray2 = new Object[]{__env__[6], __env__[8], __env__[9]};
        EnvAccessor.bootstrapStorer("storeEnv", (Object)ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_model_datasets_plugin_23885.class, "proc___3", "", 3, 3, 0, 0, (Object[])objectArray2), (Object[])__env__, (int)10);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)15), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)7);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugin_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)15))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_datasets_plugin__setup_data")
    @SourceHash(value=-810796853)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="4a583441-1474-4617-b31f-0dbe2b686af6", type=Object.class, start=16, end=144, index=0), @EnvVar(name="4a583441-1474-4617-b31f-0dbe2b686af6", type=Object.class, start=182, end=183, index=0), @EnvVar(name="me", type=Object.class, start=8, end=183, index=1)})
    public static Object proc___(Object[] __env__, Object _self, Object ace_name) {
        ResultTuple resultTuple;
        block8: {
            Object object;
            __env__ = (Object[])__env__.clone();
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "does_not_understand"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_model_datasets_plugin_23885.class, "proc___2", "", 3, 3, 0, 0, (Object[])objectArray));
                        ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrap("get_ace_control_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)ace_name));
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        resultTuple = resultTuple2;
                        break block8;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "does_not_understand")))) {
                resultTuple = ResultTuple.EMPTY_TUPLE;
            } else {
                throw new Error("Try block caught unexpected error.");
            }
        }
        return resultTuple;
    }

    @Parent(method="proc___")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="4a583441-1474-4617-b31f-0dbe2b686af6", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___2(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @Parent(method="explorer_model_datasets_plugin__setup_data")
    @SourceHash(value=245720933)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="soc", type=Object.class, start=0, end=79, index=2), @EnvVar(name="me", type=Object.class, start=0, end=79, index=0), @EnvVar(name="processed_dataset_managers", type=Object.class, start=0, end=79, index=1)})
    public static Object proc___3(Object[] __env__, Object _self, Object ds_name) {
        CallSite dataset_name = Invoker.bootstrap("as_symbol()", ds_name);
        CallSite dataset_manager = Invoker.bootstrap("dataset_manager()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), dataset_name);
        boolean bl = MagikObjectUtils.is(dataset_manager, null);
        Object object = new Boolean(bl);
        if (!bl) {
            object = Invoker.bootstrap("is_geometry?", dataset_manager);
        }
        if (MagikObjectUtils.should_be_boolean(object)) {
            // empty if block
        }
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)dataset_manager));
        return dataset_manager;
    }

    @Parent(method="explorer_model_datasets_plugin__setup_data")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=60, end=274, index=0), @EnvVar(name="info", type=Object.class, start=68, end=274, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=285, end=316, index=4), @EnvVar(name="name", type=Object[].class, start=49, end=325, index=14), @EnvVar(name="plugin_element", type=Object.class, start=8, end=331, index=5)})
    public static Object __loopbody_5(Object[] __env__, Object plugin_element) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)plugin_element, (Object[])__env__, (int)5);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7)));
        try {
            CallSite callSite = Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), ConstantBuilder.symbolBootstrap("symbol", "name"));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)14);
            if (callSite != null) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), ConstantBuilder.symbolBootstrap("symbol", "name"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)14), ConstantBuilder.symbolBootstrap("symbol", "datasets"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), ConstantBuilder.symbolBootstrap("symbol", "aliases"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), ConstantBuilder.symbolBootstrap("symbol", "display_all?"), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), ConstantBuilder.symbolBootstrap("symbol", "display_all?")), ConstantBuilder.symbolBootstrap("symbol", "ace_controls"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"))), (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), ConstantBuilder.symbolBootstrap("symbol", "datasets"))));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), ConstantBuilder.symbolBootstrap("symbol", "aces"))));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)Invoker.bootstrapPrivate("$slot_get_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)15)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
            } else {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)4);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)4);
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("dataset_managers()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_5")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="ds", type=Object[].class, start=88, end=231, index=12), @EnvVar(name="ds_name", type=Object[].class, start=58, end=231, index=16), @EnvVar(name="alias", type=Object[].class, start=50, end=231, index=17)})
    public static Object __loopbody_6(Object[] __env__, Object ds_info) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple resultTuple2 = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)ds_info)));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)17);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)16);
            CallSite callSite = ProcInvoker.bootstrap("()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)16));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)12);
            if (callSite != null) {
                CallSite callSite2 = Invoker.bootstrap("view_name", Invoker.bootstrap("actual_dataset", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)12)));
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)callSite2, (Object)ConstantBuilder.symbolBootstrap("symbol", "name")));
                callSite2 = null;
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "datasets")), (Object)callSite2, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)12)));
                callSite2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)17);
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "aliases")), (Object)callSite2, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)12)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_5")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="ac", type=Object[].class, start=37, end=86, index=13)})
    public static Object __loopbody_7(Object[] __env__, Object ace_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = ProcInvoker.bootstrap("()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11), ace_name);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)13);
            if (callSite != null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "ace_controls")), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_5")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="info", type=Object.class, start=61, end=248, index=2), @EnvVar(name="__dynamic_frame__", type=Object.class, start=69, end=248, index=3)})
    public static Object __loopbody_8(Object[] __env__, Object dataset_manager) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
        try {
            CallSite callSite = Invoker.bootstrap("includes?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8), dataset_manager);
            if (!MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("is_geometry?", dataset_manager);
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", callSite))) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrap("view_name", Invoker.bootstrap("actual_dataset", dataset_manager)), ConstantBuilder.symbolBootstrap("symbol", "datasets"), Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), dataset_manager, Invoker.bootstrap("rwo_set()", Invoker.bootstrap("actual_dataset", dataset_manager))), ConstantBuilder.symbolBootstrap("symbol", "aliases"), Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), dataset_manager, Invoker.bootstrap("view_name", Invoker.bootstrap("actual_dataset", dataset_manager))), ConstantBuilder.symbolBootstrap("symbol", "display_all?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "ace_controls"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"))), (Object[])__env__, (int)2);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_8(), (Object[])__env__, (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), ConstantBuilder.symbolBootstrap("symbol", "aces"))));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)Invoker.bootstrapPrivate("$slot_get_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)15)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_8")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="ac", type=Object[].class, start=37, end=86, index=13)})
    public static Object __loopbody_9(Object[] __env__, Object ace_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            CallSite callSite = ProcInvoker.bootstrap("()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11), ace_name);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)13);
            if (callSite != null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "ace_controls")), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=778325367)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_datasets_plugin__data_(Object _self) {
        block0: {
            if (Invoker.bootstrapPrivate("$slot_get_data()", (Object)_self) != null) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_data()", (Object)_self));
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_get_data()", (Object)_self));
    }

    @SourceHash(value=1928272783)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=14, end=211, index=1), @EnvVar(name="collection_name", type=Object.class, start=38, end=211, index=3), @EnvVar(name="rwo_sets", type=Object.class, start=22, end=211, index=2), @EnvVar(name="dataset_name", type=Object.class, start=30, end=211, index=4), @EnvVar(name="__leave_catcher__", type=Object[].class, start=138, end=212, index=6)})
    public static Object explorer_model_datasets_plugin__find_source_rwo_sets_for(Object _self, Object properties) {
        Object[] __env__ = new Object[7];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_symbol()", Invoker.bootstrap("lowercase", Invoker.bootstrap("\\b]", properties, ConstantBuilder.symbolBootstrap("symbol", "dataset")))), (Object[])__env__, (int)4);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_symbol()", Invoker.bootstrap("lowercase", Invoker.bootstrap("\\b]", properties, ConstantBuilder.symbolBootstrap("symbol", "collection")))), (Object[])__env__, (int)3);
        CallSite field_names = Invoker.bootstrap("\\b]", properties, ConstantBuilder.symbolBootstrap("symbol", "fields"));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)6);
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_breadth_first()", (MethodHandle)cfr_ldc_9(), (Object[])__env__, (Object)Invoker.bootstrap("an_element()", Invoker.bootstrapPrivate("explorer_elements", (Object)_self))));
        }
        catch (LeaveCatcher.Leave leave) {
            ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6))).getLeaveResult(leave);
        }
        return TupleBuilder.bootstrap("tb", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), field_names, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5));
    }

    @Parent(method="explorer_model_datasets_plugin__find_source_rwo_sets_for")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=131, end=155, index=0), @EnvVar(name="ace_name", type=Object[].class, start=111, end=211, index=5)})
    public static Object __loopbody_10(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_collection?", child))) {
                CallSite child_collection = Invoker.bootstrap("a_collection()", child);
                boolean bl = MagikObjectUtils.is(Invoker.bootstrap("name", child_collection), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3));
                Boolean bl2 = new Boolean(bl);
                if (bl) {
                    bl2 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("name", Invoker.bootstrap("source_view", child_collection)), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
                }
                if (MagikObjectUtils.should_be_boolean(bl2)) {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("ace_name", child), (Object[])__env__, (int)5);
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("children?", child))) {
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_10(), (Object[])__env__, (Object)child));
                    } else {
                        CallSite callSite = Invoker.bootstrap("rwo_set", child);
                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)callSite, (Object)Invoker.bootstrap("total_name", child)));
                    }
                    throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6))).makeLeave(ResultTuple.EMPTY_TUPLE);
                }
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_10")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_11(Object[] __env__, Object sub_child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("rwo_set", sub_child);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)callSite, (Object)Invoker.bootstrap("total_name", sub_child)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1372092331)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_datasets_plugin__create_group_element_for(Object _self, Object name, Object vhs_tree, Object parent) {
        CallSite element;
        block0: {
            CallSite group_name = Invoker.bootstrap("write_string", Invoker.bootstrap("object_description", vhs_tree));
            element = Invoker.bootstrap("\\b]", parent, group_name);
            if (element != null) break block0;
            element = Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), _self, ConstantBuilder.symbolBootstrap("symbol", "name"), group_name, ConstantBuilder.symbolBootstrap("symbol", "total_name"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "total_group_name"), (Object)name, (Object)group_name), ConstantBuilder.symbolBootstrap("symbol", "parent"), parent, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "collection"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")));
        }
        return element;
    }

    @SourceHash(value=523692847)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=189, end=500, index=0), @EnvVar(name="sets", type=Object.class, start=198, end=500, index=1), @EnvVar(name="col_header", type=Object[].class, start=331, end=503, index=8), @EnvVar(name="__dynamic_frame__", type=Object.class, start=512, end=539, index=2), @EnvVar(name="mod_name", type=Object.class, start=98, end=542, index=5), @EnvVar(name="collection_external_name", type=Object.class, start=80, end=542, index=3), @EnvVar(name="collection_name", type=Object.class, start=89, end=542, index=4), @EnvVar(name="dataset_aliases", type=Object.class, start=38, end=543, index=11), @EnvVar(name="parent", type=Object.class, start=71, end=543, index=6), @EnvVar(name="name", type=Object.class, start=27, end=543, index=12), @EnvVar(name="ace_name", type=Object.class, start=60, end=543, index=13), @EnvVar(name="_self", type=Object.class, start=17, end=543, index=10), @EnvVar(name="display_all?", type=Object.class, start=49, end=543, index=9)})
    public static Object explorer_model_datasets_plugin__create_collection_element_for(Object _self, Object name, Object vhs_tree, Object main_dataset_manager, Object dataset_managers, Object dataset_aliases, Object object, Object ace_name, Object parent) {
        Object[] __env__ = new Object[14];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)10);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)name, (Object[])__env__, (int)12);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)dataset_aliases, (Object[])__env__, (int)11);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)object, (Object[])__env__, (int)9);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)ace_name, (Object[])__env__, (int)13);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)parent, (Object[])__env__, (int)6);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("name", Invoker.bootstrap("object_data", vhs_tree)), (Object[])__env__, (int)4);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("external_name", Invoker.bootstrap("object_data", vhs_tree)), (Object[])__env__, (int)3);
        CallSite callSite = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", dataset_managers), Integer.valueOf(1));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_datasets_plugin")), (Object[])__env__, (int)5);
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "set")), (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), ConstantBuilder.symbolBootstrap("symbol", "name"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), ConstantBuilder.symbolBootstrap("symbol", "total_name"), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), (Object)ConstantBuilder.symbolBootstrap("symbol", "total_collection_name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)12), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), ConstantBuilder.symbolBootstrap("symbol", "parent"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), ConstantBuilder.symbolBootstrap("symbol", "ace_name"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13)), (Object[])__env__, (int)8);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_11(), (Object[])__env__, (Object)dataset_managers));
            CallSite col_rwo_set = MagikObjectUtils.is(Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), 0) ? null : (MagikObjectUtils.is(Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), 1) ? Invoker.bootstrap("an_element()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)) : Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "composite_rwo_set"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
            if (col_rwo_set == null) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8)));
            } else {
                CallSite callSite2 = col_rwo_set;
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("rwo_set\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8), callSite2));
            }
        } else {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_12(), (Object[])__env__, (Object)dataset_managers));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_datasets_plugin__create_collection_element_for")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="ds_col", type=Object[].class, start=36, end=310, index=7)})
    public static Object __loopbody_12(Object[] __env__, Object dataset, Object a_ds_rwo_set) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("collection()", dataset, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)7);
            boolean bl = MagikObjectUtils.isnt(callSite, null);
            Object object = new Boolean(bl);
            if (bl) {
                object = Invoker.bootstrap("read_authorised?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                CallSite alias = Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11), dataset);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7)));
                if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9))) {
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), (Object)ConstantBuilder.symbolBootstrap("symbol", "collection_name_for_alias"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)12), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)alias), (Object)ConstantBuilder.symbolBootstrap("symbol", "total_name"), (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), (Object)ConstantBuilder.symbolBootstrap("symbol", "total_collection_name_for_alias"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)12), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)alias), (Object)ConstantBuilder.symbolBootstrap("symbol", "image"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "collection_part"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8), (Object)ConstantBuilder.symbolBootstrap("symbol", "ace_name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13), (Object)ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7)));
                }
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_datasets_plugin__create_collection_element_for")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="ds_col", type=Object[].class, start=36, end=227, index=7)})
    public static Object __loopbody_13(Object[] __env__, Object dataset, Object a_ds_rwo_set) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            CallSite callSite = Invoker.bootstrap("collection()", dataset, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)7);
            boolean bl = MagikObjectUtils.isnt(callSite, null);
            Object object = new Boolean(bl);
            if (bl) {
                object = Invoker.bootstrap("read_authorised?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7));
            }
            if (MagikObjectUtils.should_be_boolean(object) && Invoker.bootstrap("child_with_key()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)) == null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)ConstantBuilder.symbolBootstrap("symbol", "total_name"), (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), (Object)ConstantBuilder.symbolBootstrap("symbol", "total_collection_name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)12), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), (Object)ConstantBuilder.symbolBootstrap("symbol", "ace_name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13), (Object)ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-548729334)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=96, end=126, index=1), @EnvVar(name="name", type=Object.class, start=26, end=127, index=4), @EnvVar(name="dataset_managers", type=Object.class, start=55, end=127, index=2), @EnvVar(name="main_dataset_manager", type=Object.class, start=45, end=127, index=5), @EnvVar(name="ds_element", type=Object.class, start=36, end=127, index=6), @EnvVar(name="display_all?", type=Object.class, start=77, end=127, index=7), @EnvVar(name="_self", type=Object.class, start=17, end=127, index=8), @EnvVar(name="dataset_aliases", type=Object.class, start=66, end=127, index=10), @EnvVar(name="ace_name", type=Object.class, start=87, end=127, index=3)})
    public static Object explorer_model_datasets_plugin__add_elements_for_hierarchy(Object _self, Object name, Object ds_element, Object main_dataset_manager, Object dataset_managers, Object dataset_aliases, Object object, Object ace_name, Object rwo_hierarchy) {
        Object[] __env__ = new Object[11];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)8);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)name, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)ds_element, (Object[])__env__, (int)6);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)main_dataset_manager, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)dataset_managers, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)dataset_aliases, (Object[])__env__, (int)10);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)object, (Object[])__env__, (int)7);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)ace_name, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_13(), (Object[])__env__, (Object)rwo_hierarchy));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_datasets_plugin__add_elements_for_hierarchy")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=34, end=95, index=0), @EnvVar(name="header_element", type=Object[].class, start=71, end=98, index=9)})
    public static Object __loopbody_14(Object[] __env__, Object vhs_child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_header?", vhs_child))) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("create_group_element_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)vhs_child, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)), (Object[])__env__, (int)9);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_14(), (Object[])__env__, (Object)vhs_child));
            } else if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_collection?", vhs_child))) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("create_collection_element_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)vhs_child, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_14")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_15(Object[] __env__, Object vhs_col) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("create_collection_element_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)vhs_col, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1670247771)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=75, end=146, index=2), @EnvVar(name="_self", type=Object.class, start=16, end=147, index=3), @EnvVar(name="display_all?", type=Object.class, start=66, end=147, index=9), @EnvVar(name="dataset_aliases", type=Object.class, start=55, end=147, index=8), @EnvVar(name="dataset_managers", type=Object.class, start=44, end=147, index=5), @EnvVar(name="name", type=Object.class, start=26, end=147, index=6), @EnvVar(name="main_dataset_manager", type=Object.class, start=35, end=147, index=4)})
    public static Object explorer_model_datasets_plugin__add_elements_for(Object _self, Object name, Object main_dataset_manager, Object dataset_managers, Object dataset_aliases, Object object, Object ace_controls) {
        Object[] __env__ = new Object[10];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)name, (Object[])__env__, (int)6);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)main_dataset_manager, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)dataset_managers, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)dataset_aliases, (Object[])__env__, (int)8);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)object, (Object[])__env__, (int)9);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("default()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), Invoker.bootstrap("view_name", Invoker.bootstrap("actual_dataset", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)))), (Object[])__env__, (int)6);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_15(), (Object[])__env__, (Object)ace_controls));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_datasets_plugin__add_elements_for")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="ace_name", type=Object.class, start=22, end=82, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=82, index=1)})
    public static Object __loopbody_16(Object[] __env__, Object ace_control) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("name", Invoker.bootstrap("ace", ace_control)), (Object[])__env__, (int)0);
            CallSite hierarchy = Invoker.bootstrap("rwo_hierarchy", ace_control);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_16(), (Object[])__env__, (Object)hierarchy));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_16")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="ds_element", type=Object[].class, start=153, end=156, index=7)})
    public static Object __loopbody_17(Object[] __env__, Object top) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (MagikObjectUtils.is(Invoker.bootstrap("object_data", top), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))) {
                CallSite description = Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)ConstantBuilder.symbolBootstrap("symbol", "dataset_with_name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6));
                if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7) == null) {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), ConstantBuilder.symbolBootstrap("symbol", "name"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), ConstantBuilder.symbolBootstrap("symbol", "description"), description, ConstantBuilder.symbolBootstrap("symbol", "parent"), Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), ConstantBuilder.symbolBootstrap("symbol", "image"), Invoker.bootstrap("icon_scheme", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))), (Object[])__env__, (int)7);
                }
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_elements_for_hierarchy()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (Object)top));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=545193346)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=47, end=215, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=236, index=1)})
    public static Object explorer_model_datasets_plugin__explorer_elements_(Object _self) {
        Object[] __env__;
        block0: {
            __env__ = new Object[2];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
            CallSite mod_name = Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_datasets_plugin"));
            if (Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)) != null) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)ConstantBuilder.symbolBootstrap("symbol", "datasets")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_datasets"), mod_name), ConstantBuilder.symbolBootstrap("symbol", "column_headings"), VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"))), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name")), ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(100)))));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_17(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("data", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
        }
        return VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
    }

    @Parent(method="explorer_model_datasets_plugin__explorer_elements_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_18(Object[] __env__, Object dataset_info) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite name = Invoker.bootstrap("\\b]", dataset_info, ConstantBuilder.symbolBootstrap("symbol", "name"));
            CallSite dataset_managers = Invoker.bootstrap("\\b]", dataset_info, ConstantBuilder.symbolBootstrap("symbol", "datasets"));
            CallSite dataset_aliases = Invoker.bootstrap("\\b]", dataset_info, ConstantBuilder.symbolBootstrap("symbol", "aliases"));
            CallSite main_dataset_manager = Invoker.bootstrap("a_key()", dataset_managers);
            CallSite ace_controls = Invoker.bootstrap("\\b]", dataset_info, ConstantBuilder.symbolBootstrap("symbol", "ace_controls"));
            CallSite callSite = Invoker.bootstrap("\\b]", dataset_info, ConstantBuilder.symbolBootstrap("symbol", "display_all?"));
            if (main_dataset_manager != null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_elements_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)name, (Object)main_dataset_manager, (Object)dataset_managers, (Object)dataset_aliases, (Object)callSite, (Object)ace_controls));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-2044549700)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_datasets_plugin__sw_databus_data_requested(Object _self, Object data_type_name) {
        if (data_type_name == ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) {
            return VectorBuilder.bootstrap("vb", _self, Invoker.bootstrapPrivate("explorer_elements", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=629030516)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_datasets_plugin__action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        return new Boolean(MagikObjectUtils.is(action, ConstantBuilder.symbolBootstrap("symbol", "delete_records")));
    }

    @SourceHash(value=-320148921)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_datasets_plugin__start_move_action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        CallSite callSite;
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_collection?", source_element))) {
            if (action == ConstantBuilder.symbolBootstrap("symbol", "move")) {
                action = ConstantBuilder.symbolBootstrap("symbol", "copy");
            }
            callSite = TupleBuilder.bootstrap("tb", Boolean.TRUE, action);
        } else {
            callSite = TupleBuilder.bootstrap("tb", Boolean.FALSE, action);
        }
        return callSite;
    }

    @SourceHash(value=-154367551)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_datasets_plugin__database_changed(Object _self, Object database) {
        block0: {
            if (Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self) == null) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_data()", (Object)_self, null));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_element()", (Object)_self, null));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_8() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_9", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_9() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_10", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_10() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_11", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_11() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_12", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_12() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_13", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_13() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_14", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_14() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_15", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_15() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_16", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_16() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_17", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_17() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_datasets_plugin_23885.class, "__loopbody_18", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_model_datasets_plugin_23885;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_model_datasets_plugin_23884
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_model_datasets_plugin_23884() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model_plugins/explorer_model_datasets_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_model_datasets_plugin"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin_data"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "data"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_element"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_model_plugin_mixin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_model_find_source_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_datasets_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "process_plugin_data()", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__process_plugin_data", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "setup_data()", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__setup_data", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "data", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__data_", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "find_source_rwo_sets_for()", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__find_source_rwo_sets_for", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "create_group_element_for()", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__create_group_element_for", 4, 4, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "create_collection_element_for()", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__create_collection_element_for", 9, 9, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "add_elements_for_hierarchy()", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__add_elements_for_hierarchy", 9, 9, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "add_elements_for()", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__add_elements_for", 7, 7, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "explorer_elements", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__explorer_elements_", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "sw_databus_data_requested()", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__sw_databus_data_requested", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "action_allowed?()", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__action_allowed?", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "start_move_action_allowed?()", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__start_move_action_allowed?", 4, 4);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_model_datasets_plugin", "database_changed()", explorer_model_datasets_plugin_23885.class, "explorer_model_datasets_plugin__database_changed", 2, 2));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_model_themes_plugin_23920 {
    @SourceHash(value=670413737)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=126, index=2), @EnvVar(name="_self", type=Object.class, start=13, end=127, index=3)})
    public static Object explorer_model_themes_plugin__process_plugin_data(Object _self, Object plugin_data) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_ace_names()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_image_renderer()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "custom_draw_renderer"), Integer.valueOf(16), Integer.valueOf(16), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), ConstantBuilder.symbolBootstrap("symbol", "draw_image()"))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrap("elements", plugin_data)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_themes_plugin__process_plugin_data")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=36, end=64, index=1)})
    public static Object __loopbody_(Object[] __env__, Object explorer_data) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            if (Invoker.bootstrap("type", explorer_data) == ConstantBuilder.symbolBootstrap("symbol", "aces")) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrap("elements", explorer_data)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=36, end=64, index=0)})
    public static Object __loopbody_2(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (Invoker.bootstrap("type", element) == ConstantBuilder.symbolBootstrap("symbol", "ace")) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("keys_and_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrap("attributes", element)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_2")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_3(Object[] __env__, Object name, Object value) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", name, ConstantBuilder.stringBootstrap("string", "name")))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrapPrivate("$slot_get_ace_names()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object)value));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1067447154)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_themes_plugin__setup_themes_for_ace(Object _self, Object an_ace) {
        CallSite callSite = Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), ConstantBuilder.symbolBootstrap("symbol", "themes"), Invoker.bootstrap("get_user_data()", an_ace, ConstantBuilder.stringBootstrap("string", "themes")), ConstantBuilder.symbolBootstrap("symbol", "user_themes"), Invoker.bootstrap("get_user_data()", an_ace, ConstantBuilder.stringBootstrap("string", "user_themes")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_themes()", (Object)_self), (Object)callSite, (Object)Invoker.bootstrap("write_string", Invoker.bootstrap("name", an_ace))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1003595454)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_themes_plugin__post_init_plugins(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_data()", (Object)_self));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_dependent()", (Object)Invoker.bootstrap("ace_view", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "gis_program_manager")), (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1233661961)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_themes_plugin__image_styled_string_for(Object _self, Object an_explorer_element) {
        boolean bl = MagikObjectUtils.is(an_explorer_element, Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self));
        Object object = new Boolean(bl);
        if (!bl) {
            object = Invoker.bootstrap("is_collection?", an_explorer_element);
        }
        return MagikObjectUtils.should_be_boolean(object) ? Invoker.superNaturalBootstrap("image_styled_string_for()", "explorer_model_plugin_mixin", "sw", (Object)_self, (Object)an_explorer_element) : (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"), (Object)ConstantBuilder.symbolBootstrap("symbol", "custom_draw"), (Object)Invoker.bootstrapPrivate("$slot_get_image_renderer()", (Object)_self)));
    }

    @SourceHash(value=1974856639)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_themes_plugin__draw_image(Object _self, Object window, Object x, Object y, Object text_style, Object renderer, Object display_tree) {
        CallSite a_theme = Invoker.bootstrap("user_data", Invoker.bootstrap("key", display_tree));
        if (a_theme == null) {
            return ResultTuple.EMPTY_TUPLE;
        }
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrap("display_image", (Object)a_theme));
        resultTuple.pop();
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("render_on()", (Object)resultTuple.pop(), (Object)window, (Object)x, (Object)y));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1567194628)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="name", type=Object.class, start=54, end=339, index=2), @EnvVar(name="collection_for", type=Object.class, start=45, end=339, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=63, end=339, index=3), @EnvVar(name="database", type=Object.class, start=36, end=339, index=0), @EnvVar(name="__leave_catcher__", type=Object[].class, start=165, end=340, index=5), @EnvVar(name="_self", type=Object.class, start=17, end=340, index=7), @EnvVar(name="element", type=Object[].class, start=267, end=340, index=4), @EnvVar(name="ace_name", type=Object.class, start=27, end=340, index=6)})
    public static Object explorer_model_themes_plugin__add_theme(Object _self, Object ace_name, Object theme, Object parent) {
        block3: {
            Object[] __env__ = new Object[9];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)7);
            EnvAccessor.bootstrapReseter("resetEnv", (Object)ace_name, (Object[])__env__, (int)6);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("database", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7)), (Object[])__env__, (int)0);
            Object[] objectArray = new Object[5];
            objectArray[4] = __env__[0];
            EnvAccessor.bootstrapStorer("storeEnv", (Object)ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_model_themes_plugin_23920.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray), (Object[])__env__, (int)1);
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_link?", theme))) {
                theme = Invoker.bootstrap("reference", theme);
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("name", theme), (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)5);
            try {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("children()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)parent));
            }
            catch (LeaveCatcher.Leave leave) {
                ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))).getLeaveResult(leave);
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), ConstantBuilder.symbolBootstrap("symbol", "name"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "parent"), parent, ConstantBuilder.symbolBootstrap("symbol", "user_data"), theme), (Object[])__env__, (int)4);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)theme));
            if (!MagikObjectUtils.is(Invoker.bootstrap("number_of_children", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), 0)) break block3;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_themes_plugin__add_theme")
    @SourceHash(value=-481416040)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="element_table_name", type=Object.class, start=46, end=130, index=2), @EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=130, index=0), @EnvVar(name="element_ds_name", type=Object.class, start=38, end=130, index=1), @EnvVar(name="database", type=Object.class, start=46, end=133, index=4), @EnvVar(name="__return_catcher__", type=Object[].class, start=22, end=149, index=3), @EnvVar(name="database", type=Object.class, start=148, end=149, index=4)})
    public static Object proc___(Object[] __env__, Object _self, Object element) {
        ResultTuple resultTuple;
        __env__ = (Object[])__env__.clone();
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)3);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("canonical", Invoker.bootstrap("write_string", Invoker.bootstrap("dataset_name", element))), (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_symbol()", Invoker.bootstrap("canonical", Invoker.bootstrap("write_string", Invoker.bootstrap("table_name", element)))), (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("datasets()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).getReturnResult(return_);
        }
        return resultTuple;
    }

    @Parent(method="proc___")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_4(Object[] __env__, Object dn) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("canonical", Invoker.bootstrap("write_string", Invoker.bootstrap("name", dn))), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).makeReturn((ResultTuple)((Object)Invoker.tupleBootstrap("collection()", (Object)dn, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_themes_plugin__add_theme")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="name", type=Object[].class, start=78, end=96, index=2)})
    public static Object __loopbody_5(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("name", child), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)ConstantBuilder.symbolBootstrap("symbol", "theme_name_for_ace"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)), (Object[])__env__, (int)2);
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_themes_plugin__add_theme")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="collection", type=Object[].class, start=96, end=229, index=8)})
    public static Object __loopbody_6(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_theme?", child))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_theme()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), (Object)child, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
            } else if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_collection?", child))) {
                CallSite callSite = ProcInvoker.bootstrap("()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), child);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)8);
                boolean bl = MagikObjectUtils.isnt(callSite, null);
                Object object = new Boolean(bl);
                if (bl) {
                    object = Invoker.bootstrap("read_authorised?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8));
                }
                if (MagikObjectUtils.should_be_boolean(object)) {
                    CallSite collection_external_name = Invoker.bootstrap("external_name", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8));
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)collection_external_name, (Object)ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), (Object)Invoker.bootstrap("rwo_set()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8)), (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ConstantBuilder.symbolBootstrap("symbol", "ace_name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)));
                }
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=2133023242)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=220, end=261, index=0), @EnvVar(name="included_in?", type=Object.class, start=32, end=300, index=6), @EnvVar(name="__dynamic_frame__", type=Object.class, start=23, end=300, index=5), @EnvVar(name="_self", type=Object.class, start=15, end=301, index=7)})
    public static Object explorer_model_themes_plugin__setup_explorer_elements(Object _self) {
        Object[] __env__ = new Object[9];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)7);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)6);
        CallSite mod_name = Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_themes_plugin"));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)ConstantBuilder.procWithEmptyEnvBootstrap("proc", (Class<?>)explorer_model_themes_plugin_23920.class, "proc___2", "", 3, 3, 0, 0), (Object[])__env__, (int)6);
        if (Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7)) == null) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)ConstantBuilder.symbolBootstrap("symbol", "themes")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_themes"), mod_name), ConstantBuilder.symbolBootstrap("symbol", "column_headings"), VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"))), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name")), ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(100)))));
        } else {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)Invoker.bootstrap("children", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7)))));
        }
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)5);
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_themes()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_themes_plugin__setup_explorer_elements")
    @SourceHash(value=1265602763)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=35, end=62, index=0), @EnvVar(name="main_theme", type=Object.class, start=13, end=81, index=1), @EnvVar(name="__return_catcher__", type=Object[].class, start=27, end=81, index=2)})
    public static Object proc___2(Object _self, Object main_theme, Object themes) {
        Boolean bl;
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)main_theme, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)2);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_8(), (Object[])__env__, (Object)themes));
            bl = Boolean.FALSE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="proc___2")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_7(Object[] __env__, Object theme) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("name", theme), Invoker.bootstrap("name", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeReturn(Boolean.TRUE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_themes_plugin__setup_explorer_elements")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_8(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)child));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_themes_plugin__setup_explorer_elements")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="user_themes", type=Object[].class, start=68, end=71, index=8), @EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=109, index=3), @EnvVar(name="user_themes", type=Object[].class, start=82, end=115, index=8), @EnvVar(name="ace_name", type=Object.class, start=8, end=121, index=4)})
    public static Object __loopbody_9(Object[] __env__, Object ace_name, Object theme_info) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)ace_name, (Object[])__env__, (int)4);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
            if (Invoker.bootstrap("\\b]", theme_info, ConstantBuilder.symbolBootstrap("symbol", "user_themes")) != null) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("children", Invoker.bootstrap("\\b]", theme_info, ConstantBuilder.symbolBootstrap("symbol", "user_themes"))), (Object[])__env__, (int)8);
            } else {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)VectorBuilder.EMPTY_VECTOR, (Object[])__env__, (int)8);
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_9(), (Object[])__env__, (Object)theme_info));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_9")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=74, index=1), @EnvVar(name="theme_type", type=Object.class, start=8, end=86, index=2)})
    public static Object __loopbody_10(Object[] __env__, Object theme_type, Object top_theme) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)theme_type, (Object[])__env__, (int)2);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            if (top_theme == null) {
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_10(), (Object[])__env__, (Object)top_theme));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_10")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_11(Object[] __env__, Object theme) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_theme?", theme))) {
                if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2) == ConstantBuilder.symbolBootstrap("symbol", "themes") && MagikObjectUtils.should_be_boolean(ProcInvoker.bootstrap("()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), theme, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8)))) {
                    ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                    DynamicScope.interjectFrame(__iterator_frame__);
                    return resultTuple2;
                }
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_theme()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)theme, (Object)Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7))));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1837022866)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_themes_plugin__explorer_elements_(Object _self) {
        block0: {
            if (Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self) != null) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_explorer_elements()", (Object)_self));
        }
        return VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self));
    }

    @SourceHash(value=-1075010419)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_themes_plugin__sw_databus_data_requested(Object _self, Object data_type_name) {
        if (data_type_name == ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) {
            return VectorBuilder.bootstrap("vb", _self, Invoker.bootstrapPrivate("explorer_elements", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-823493287)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_themes_plugin__start_move_action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        CallSite callSite;
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_collection?", source_element))) {
            if (action == ConstantBuilder.symbolBootstrap("symbol", "move")) {
                action = ConstantBuilder.symbolBootstrap("symbol", "copy");
            }
            callSite = TupleBuilder.bootstrap("tb", Boolean.TRUE, action);
        } else {
            callSite = TupleBuilder.bootstrap("tb", Boolean.FALSE, action);
        }
        return callSite;
    }

    @SourceHash(value=-1332200797)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_themes_plugin__note_change(Object _self, Object who, Object what, Object ... args) {
        block1: {
            if (!MagikObjectUtils.is(who, Invoker.bootstrap("ace_view", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "gis_program_manager")))) break block1;
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)args)));
            Object themes = resultTuple.pop();
            Object ace_name = resultTuple.pop();
            if (Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_themes()", (Object)_self), ace_name) != null) {
                Object object = themes;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_themes()", (Object)_self), ace_name), (Object)object, (Object)what));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_explorer_elements()", (Object)_self));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), (Object)VectorBuilder.bootstrap("vb", _self, Invoker.bootstrapPrivate("explorer_elements", (Object)_self))));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-428493285)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_themes_plugin__terminate(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_dependent()", (Object)Invoker.bootstrap("ace_view", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "gis_program_manager")), (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1616361021)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_themes_plugin__action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        return new Boolean(MagikObjectUtils.is(action, ConstantBuilder.symbolBootstrap("symbol", "delete_records")));
    }

    @SourceHash(value=1331657527)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_themes_plugin__database_changed(Object _self, Object database) {
        Object object = _self;
        InterruptInfrastructure.checkAndProcessInterrupts();
        synchronized (object) {
            try {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_data()", (Object)_self));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_element()", (Object)_self, null));
            }
            catch (Throwable throwable) {
                // MONITOREXIT @DISABLED, blocks:[1, 2] lbl12 : MonitorExitStatement: MONITOREXIT : var2_2
                InterruptInfrastructure.checkAndProcessInterrupts();
                throw throwable;
            }
        }
        InterruptInfrastructure.checkAndProcessInterrupts();
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-862460680)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=139, index=1), @EnvVar(name="me", type=Object.class, start=21, end=139, index=0), @EnvVar(name="get_ace_control", type=Object.class, start=37, end=139, index=2), @EnvVar(name="_self", type=Object.class, start=13, end=140, index=4)})
    public static Object explorer_model_themes_plugin__setup_data(Object _self) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object[])__env__, (int)0);
        Object[] objectArray = new Object[2];
        objectArray[1] = __env__[0];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_model_themes_plugin_23920.class, "proc___3", "", 3, 3, 0, 0, (Object[])objectArray), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_themes()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "equality_property_list"))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_11(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_ace_names()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_themes_plugin__setup_data")
    @SourceHash(value=-810796853)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="c63b436c-dbcf-4c4b-b042-c4aeadc26344", type=Object.class, start=16, end=144, index=0), @EnvVar(name="me", type=Object.class, start=8, end=183, index=1), @EnvVar(name="c63b436c-dbcf-4c4b-b042-c4aeadc26344", type=Object.class, start=182, end=183, index=0)})
    public static Object proc___3(Object[] __env__, Object _self, Object ace_name) {
        ResultTuple resultTuple;
        block8: {
            Object object;
            __env__ = (Object[])__env__.clone();
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "does_not_understand"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_model_themes_plugin_23920.class, "proc___4", "", 3, 3, 0, 0, (Object[])objectArray));
                        ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrap("get_ace_control_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)ace_name));
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        resultTuple = resultTuple2;
                        break block8;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "does_not_understand")))) {
                resultTuple = ResultTuple.EMPTY_TUPLE;
            } else {
                throw new Error("Try block caught unexpected error.");
            }
        }
        return resultTuple;
    }

    @Parent(method="proc___3")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="c63b436c-dbcf-4c4b-b042-c4aeadc26344", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___4(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @Parent(method="explorer_model_themes_plugin__setup_data")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="ace_control", type=Object[].class, start=35, end=80, index=3)})
    public static Object __loopbody_12(Object[] __env__, Object ace_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            CallSite callSite = ProcInvoker.bootstrap("()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ace_name);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)3);
            if (callSite != null) {
                CallSite ace = Invoker.bootstrap("ace", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3));
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_themes_for_ace()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ace));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_9", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_8() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_9() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_10", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_10() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_11", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_11() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_themes_plugin_23920.class, "__loopbody_12", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_model_themes_plugin_23920;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_model_themes_plugin_23919
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_model_themes_plugin_23919() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model_plugins/explorer_model_themes_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_model_themes_plugin"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "ace_names"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "themes"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_element"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "image_renderer"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_model_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_themes_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "process_plugin_data()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__process_plugin_data", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "setup_themes_for_ace()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__setup_themes_for_ace", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "post_init_plugins()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__post_init_plugins", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "image_styled_string_for()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__image_styled_string_for", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "draw_image()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__draw_image", 7, 7);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "add_theme()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__add_theme", 4, 4, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "setup_explorer_elements()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__setup_explorer_elements", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "explorer_elements", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__explorer_elements_", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "sw_databus_data_requested()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__sw_databus_data_requested", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "start_move_action_allowed?()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__start_move_action_allowed?", 4, 4);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "note_change()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__note_change", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "terminate()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__terminate", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "action_allowed?()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__action_allowed?", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_themes_plugin", "database_changed()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__database_changed", 2, 2);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_model_themes_plugin", "setup_data()", explorer_model_themes_plugin_23920.class, "explorer_model_themes_plugin__setup_data", 1, 1, false, false, true, 0));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.LoopBodyInvoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_model_search_plugin_23986 {
    @SourceHash(value=1150048144)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__init(Object _self, Object ... args) {
        Invoker.superNaturalBootstrap("init()", "plugin", "sw", (Object)_self, (Object[])((Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)args)));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_elements()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_find_targets()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_restrictions_top_element()", (Object)_self));
        return _self;
    }

    @SourceHash(value=1565117773)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__process_xml_field(Object _self, Object element, Object collection) {
        CallSite field_name = Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", element, ConstantBuilder.symbolBootstrap("symbol", "name")));
        return (ResultTuple)((Object)Invoker.tupleBootstrap("field()", (Object)collection, (Object)field_name));
    }

    @SourceHash(value=1628643679)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=83, end=111, index=0), @EnvVar(name="col_info", type=Object.class, start=21, end=133, index=1), @EnvVar(name="collection", type=Object[].class, start=72, end=134, index=2), @EnvVar(name="_self", type=Object.class, start=13, end=134, index=4)})
    public static Object explorer_model_search_plugin__process_xml_collection(Object _self, Object element, Object dataset) {
        Object[] __env__;
        block0: {
            __env__ = new Object[5];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)4);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            CallSite col_name = Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", element, ConstantBuilder.symbolBootstrap("symbol", "name")));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)1);
            CallSite callSite = Invoker.bootstrap("collection()", dataset, col_name);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)2);
            if (callSite == null) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrap("elements", element)));
        }
        return TupleBuilder.bootstrap("tb", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
    }

    @Parent(method="explorer_model_search_plugin__process_xml_collection")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="field", type=Object[].class, start=70, end=82, index=3)})
    public static Object __loopbody_(Object[] __env__, Object collection_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            boolean bl = MagikObjectUtils.is(Invoker.bootstrap("type", collection_element), ConstantBuilder.symbolBootstrap("symbol", "field"));
            Boolean bl2 = new Boolean(bl);
            if (bl) {
                CallSite callSite = Invoker.bootstrapPrivate("process_xml_field()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)collection_element, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)3);
                bl2 = new Boolean(MagikObjectUtils.isnt(callSite, null));
            }
            if (MagikObjectUtils.should_be_boolean(bl2)) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("name", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1839066744)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=131, end=160, index=0), @EnvVar(name="dataset_info", type=Object.class, start=22, end=182, index=1), @EnvVar(name="_self", type=Object.class, start=14, end=183, index=3), @EnvVar(name="dataset", type=Object[].class, start=120, end=183, index=5)})
    public static Object explorer_model_search_plugin__process_xml_dataset(Object _self, Object element) {
        Object[] __env__;
        block0: {
            __env__ = new Object[6];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            CallSite dataset_name = Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", element, ConstantBuilder.symbolBootstrap("symbol", "name")));
            CallSite ace_name = Invoker.bootstrap("default()", Invoker.bootstrap("attribute()", element, ConstantBuilder.symbolBootstrap("symbol", "ace_name")), ConstantBuilder.stringBootstrap("string", "Default"));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), ConstantBuilder.symbolBootstrap("symbol", "ace_name"), ace_name, ConstantBuilder.symbolBootstrap("symbol", "collections"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"))), (Object[])__env__, (int)1);
            CallSite callSite = Invoker.bootstrap("cached_dataset()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "gis_program_manager"), dataset_name);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)5);
            if (callSite == null) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrap("elements", element)));
        }
        return TupleBuilder.bootstrap("tb", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
    }

    @Parent(method="explorer_model_search_plugin__process_xml_dataset")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="collection", type=Object[].class, start=79, end=139, index=2), @EnvVar(name="info", type=Object[].class, start=72, end=139, index=4)})
    public static Object __loopbody_2(Object[] __env__, Object dataset_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (Invoker.bootstrap("type", dataset_element) == ConstantBuilder.symbolBootstrap("symbol", "collection")) {
                ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("process_xml_collection()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)dataset_element, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)4);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)2);
                if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2) != null) {
                    CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4);
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "collections")), (Object)callSite, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
                }
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=728444116)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="parameter_list", type=Object.class, start=14, end=100, index=5), @EnvVar(name="__dynamic_frame__", type=Object.class, start=23, end=100, index=6)})
    public static Object explorer_model_search_plugin__process_xml_plugin(Object _self, Object element) {
        Object[] __env__ = new Object[7];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)6);
        CallSite plugin_name = Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", element, ConstantBuilder.symbolBootstrap("symbol", "plugin_name")));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)5);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)6);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrap("elements", element)));
        return TupleBuilder.bootstrap("tb", plugin_name, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5));
    }

    @Parent(method="explorer_model_search_plugin__process_xml_plugin")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=45, end=114, index=3), @EnvVar(name="parameters", type=Object.class, start=37, end=114, index=4)})
    public static Object __loopbody_3(Object[] __env__, Object plugin_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)));
        try {
            if (Invoker.bootstrap("type", plugin_element) == ConstantBuilder.symbolBootstrap("symbol", "collection")) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)4);
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object[])__env__, (int)4);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)Invoker.bootstrap("elements", plugin_element)));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_3")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=36, end=65, index=0), @EnvVar(name="fields", type=Object.class, start=90, end=176, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=98, end=176, index=2)})
    public static Object __loopbody_4(Object[] __env__, Object collection_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            if (Invoker.bootstrap("type", collection_element) == ConstantBuilder.symbolBootstrap("symbol", "parameters")) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)Invoker.bootstrap("elements", collection_element)));
            } else if (Invoker.bootstrap("type", collection_element) == ConstantBuilder.symbolBootstrap("symbol", "fields")) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)Invoker.bootstrap("elements", collection_element)));
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "fields")));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_4")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_5(Object[] __env__, Object parameter) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (Invoker.bootstrap("type", parameter) == ConstantBuilder.symbolBootstrap("symbol", "parameter")) {
                CallSite name = Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", parameter, ConstantBuilder.symbolBootstrap("symbol", "name")));
                CallSite callSite = Invoker.bootstrap("attribute()", parameter, ConstantBuilder.symbolBootstrap("symbol", "value"));
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)callSite, (Object)name));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_4")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_6(Object[] __env__, Object field) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            if (Invoker.bootstrap("type", field) == ConstantBuilder.symbolBootstrap("symbol", "field")) {
                CallSite name = Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", field, ConstantBuilder.symbolBootstrap("symbol", "name")));
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)name));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-857651912)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=136, index=1), @EnvVar(name="category_info", type=Object.class, start=22, end=136, index=0), @EnvVar(name="_self", type=Object.class, start=14, end=137, index=3)})
    public static Object explorer_model_search_plugin__process_xml_search_category(Object _self, Object element) {
        Object[] __env__ = new Object[7];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        CallSite category_name = Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", element, ConstantBuilder.symbolBootstrap("symbol", "name")));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), ConstantBuilder.symbolBootstrap("symbol", "datasets"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), ConstantBuilder.symbolBootstrap("symbol", "plugins"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"))), (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)Invoker.bootstrap("elements", element)));
        return TupleBuilder.bootstrap("tb", category_name, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0));
    }

    @Parent(method="explorer_model_search_plugin__process_xml_search_category")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="dataset", type=Object[].class, start=72, end=132, index=4), @EnvVar(name="dataset_info", type=Object[].class, start=65, end=132, index=5), @EnvVar(name="plugin_info", type=Object[].class, start=184, end=241, index=6), @EnvVar(name="plugin_name", type=Object[].class, start=191, end=241, index=2), @EnvVar(name="dataset", type=Object[].class, start=241, end=250, index=4), @EnvVar(name="dataset_info", type=Object[].class, start=241, end=250, index=5)})
    public static Object __loopbody_7(Object[] __env__, Object category_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (Invoker.bootstrap("type", category_element) == ConstantBuilder.symbolBootstrap("symbol", "dataset")) {
                ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("process_xml_dataset()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)category_element));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)5);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)4);
                if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4) != null) {
                    CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5);
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), ConstantBuilder.symbolBootstrap("symbol", "datasets")), (Object)callSite, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
                }
            } else if (Invoker.bootstrap("type", category_element) == ConstantBuilder.symbolBootstrap("symbol", "plugin")) {
                ResultTuple resultTuple3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("process_xml_plugin()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)category_element));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple3.pop(), (Object[])__env__, (int)6);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple3.pop(), (Object[])__env__, (int)2);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), ConstantBuilder.symbolBootstrap("symbol", "plugins")), (Object)callSite, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=547611361)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="elements", type=Object.class, start=30, end=102, index=2), @EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=102, index=1), @EnvVar(name="_self", type=Object.class, start=14, end=103, index=4)})
    public static Object explorer_model_search_plugin__process_plugin_data(Object _self, Object plugin_data) {
        Object[] __env__ = new Object[6];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)Invoker.bootstrap("elements", plugin_data)));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_find_targets()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_search_plugin__process_plugin_data")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=36, end=65, index=0)})
    public static Object __loopbody_8(Object[] __env__, Object explorer_data) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (Invoker.bootstrap("type", explorer_data) == ConstantBuilder.symbolBootstrap("symbol", "elements")) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_8(), (Object[])__env__, (Object)Invoker.bootstrap("elements", explorer_data)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_8")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="category_info", type=Object[].class, start=51, end=101, index=3), @EnvVar(name="category_name", type=Object[].class, start=58, end=101, index=5)})
    public static Object __loopbody_9(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("process_xml_search_category()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)element));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)3);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)5);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)callSite, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=57966257)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__category_name(Object _self, Object category) {
        return MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("has_message?()", (Object)_self, (Object)category)) ? (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("message()", (Object)_self, (Object)category)) : (ResultTuple)((Object)Invoker.tupleBootstrap("capitalise", (Object)Invoker.bootstrap("lowercase", Invoker.bootstrap("write_string", category))));
    }

    @SourceHash(value=1177493374)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=88, index=0), @EnvVar(name="items", type=Object.class, start=21, end=88, index=1), @EnvVar(name="_self", type=Object.class, start=13, end=89, index=2)})
    public static Object explorer_model_search_plugin__find_target_items(Object _self) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys()", (MethodHandle)cfr_ldc_9(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_find_targets()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))));
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
    }

    @Parent(method="explorer_model_search_plugin__find_target_items")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_10(Object[] __env__, Object k) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)VectorBuilder.bootstrap("vb", k, Invoker.bootstrapPrivate("category_name()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)k))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1320044732)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__filter_top_element_(Object _self) {
        block0: {
            CallSite mod_name = Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_search_plugin"));
            if (Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "filter")) != null) break block0;
            CallSite callSite = Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), _self, ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "filter_results")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_filter_search_results"), mod_name), ConstantBuilder.symbolBootstrap("symbol", "column_headings"), VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "name")), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "description"))), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name"), ConstantBuilder.symbolBootstrap("symbol", "description")), ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(200), Integer.valueOf(275)));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "filter")));
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "filter")));
    }

    @SourceHash(value=-1358523621)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__free_text_top_element_(Object _self) {
        block0: {
            CallSite mod_name = Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_search_plugin"));
            if (Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "free_text")) != null) break block0;
            CallSite callSite = Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), _self, ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "free_text_results")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_free_search_results"), mod_name), ConstantBuilder.symbolBootstrap("symbol", "column_headings"), VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "name")), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "description")), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "size"))), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name"), ConstantBuilder.symbolBootstrap("symbol", "description"), ConstantBuilder.symbolBootstrap("symbol", "size")), ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(200), Integer.valueOf(200), Integer.valueOf(75)));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "free_text")));
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "free_text")));
    }

    @SourceHash(value=1855479644)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__int!decomposed_search_string(Object _self, Object input_string) {
        CallSite str = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "internal_text_input_stream"), input_string);
        CallSite current_string = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "string"));
        Boolean bl = Boolean.FALSE;
        CallSite results = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "equality_property_list"));
        Boolean bl2 = Boolean.TRUE;
        while (true) {
            CallSite next;
            if ((next = Invoker.bootstrap("get()", str)) == null) {
                if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", current_string), Integer.valueOf(0)))) {
                    Boolean bl3 = bl2;
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)results, (Object)bl3, (Object)current_string));
                }
                break;
            }
            if (MagikObjectUtils.should_be_boolean(bl)) {
                if (MagikObjectUtils.is(next, Character.valueOf('\"'))) {
                    Boolean bl4;
                    bl = Boolean.FALSE;
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)results, (Object)bl4, (Object)current_string));
                    current_string = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "string"));
                    bl2 = Boolean.TRUE;
                    continue;
                }
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)current_string, (Object)next));
                continue;
            }
            if (MagikObjectUtils.is(next, Character.valueOf('\"'))) {
                bl = Boolean.TRUE;
                continue;
            }
            boolean bl5 = MagikObjectUtils.is(next, Character.valueOf('+'));
            Object object = new Boolean(bl5);
            if (bl5) {
                object = Invoker.bootstrapPrivate("allow_free_text_special_characters", (Object)_self);
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", current_string), Integer.valueOf(0)))) {
                    Boolean bl6;
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)results, (Object)bl6, (Object)current_string));
                    current_string = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "string"));
                }
                bl2 = Boolean.TRUE;
                continue;
            }
            boolean bl7 = MagikObjectUtils.is(next, Character.valueOf('-'));
            Object object2 = new Boolean(bl7);
            if (bl7) {
                object2 = Invoker.bootstrapPrivate("allow_free_text_special_characters", (Object)_self);
            }
            if (MagikObjectUtils.should_be_boolean(object2)) {
                if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", current_string), Integer.valueOf(0)))) {
                    Boolean bl8;
                    ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)results, (Object)bl8, (Object)current_string));
                    current_string = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "string"));
                }
                bl2 = Boolean.FALSE;
                continue;
            }
            if (MagikObjectUtils.is(next, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "space_char"))) {
                Boolean bl9;
                if (!MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", current_string), Integer.valueOf(0)))) continue;
                ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)results, (Object)bl9, (Object)current_string));
                current_string = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "string"));
                bl2 = Boolean.TRUE;
                continue;
            }
            ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)current_string, (Object)next));
        }
        return TupleBuilder.bootstrap("tb", BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", results), Integer.valueOf(0)), results);
    }

    @SourceHash(value=-1631812025)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="total_predicates", type=Object.class, start=52, end=264, index=3), @EnvVar(name="allowed_types", type=Object.class, start=61, end=264, index=4), @EnvVar(name="__dynamic_frame__", type=Object.class, start=70, end=264, index=5), @EnvVar(name="collection", type=Object.class, start=17, end=285, index=7), @EnvVar(name="__return_catcher__", type=Object[].class, start=43, end=285, index=8), @EnvVar(name="field_names", type=Object.class, start=27, end=285, index=6)})
    public static Object explorer_model_search_plugin__free_text_predicate_for_collection_and_fields(Object _self, Object parts, Object collection, Object field_names) {
        CallSite callSite;
        Object[] __env__ = new Object[10];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)collection, (Object[])__env__, (int)7);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)field_names, (Object[])__env__, (int)6);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)8);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)4);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)5);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "ds_charci"), ConstantBuilder.symbolBootstrap("symbol", "ds_char"), ConstantBuilder.symbolBootstrap("symbol", "ds_char16canon"), ConstantBuilder.symbolBootstrap("symbol", "ds_char16"), ConstantBuilder.symbolBootstrap("symbol", "extdb_char")), (Object[])__env__, (int)4);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)3);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)5);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_10(), (Object[])__env__, (Object)parts));
            if (MagikObjectUtils.is(Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), 0)) {
                return ResultTuple.EMPTY_TUPLE;
            }
            CallSite result_predicate = MagikObjectUtils.is(Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), 1) ? Invoker.bootstrap("an_element()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)) : Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "predicate_and"), (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
            callSite = TupleBuilder.bootstrap("tb", result_predicate, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7));
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8))).getReturnResult(return_);
        }
        return callSite;
    }

    @Parent(method="explorer_model_search_plugin__free_text_predicate_for_collection_and_fields")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="sub_predicate", type=Object[].class, start=169, end=172, index=9), @EnvVar(name="predicates", type=Object.class, start=30, end=268, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=38, end=268, index=1), @EnvVar(name="sub_predicate", type=Object[].class, start=205, end=274, index=9), @EnvVar(name="part", type=Object.class, start=8, end=280, index=2)})
    public static Object __loopbody_11(Object[] __env__, Object part, Object object) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)part, (Object[])__env__, (int)2);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_11(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)));
            if (MagikObjectUtils.is(Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), 0)) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8))).makeReturn(ResultTuple.EMPTY_TUPLE);
            }
            if (MagikObjectUtils.is(Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), 1)) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("an_element()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), (Object[])__env__, (int)9);
            } else {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "predicate_or"), (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0))), (Object[])__env__, (int)9);
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", object))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("not", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9)), (Object[])__env__, (int)9);
            }
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_11")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_12(Object[] __env__, Object field_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            CallSite field = Invoker.bootstrap("field()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), field_name);
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_physical?", field))) {
                Object object = Invoker.bootstrap("includes?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), Invoker.bootstrap("phys_type", Invoker.bootstrap("type", field)));
                if (!MagikObjectUtils.should_be_boolean(object)) {
                    object = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("enumerator", Invoker.bootstrap("type", field)), null));
                }
                if (MagikObjectUtils.should_be_boolean(object)) {
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (Object)Invoker.bootstrap("wild()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "predicate"), Invoker.bootstrap("name", field), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "ci"))));
                }
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1955176798)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=71, end=145, index=3), @EnvVar(name="__loopbody__", type=Object.class, start=17, end=152, index=10), @EnvVar(name="__loopenv__", type=Object.class, start=26, end=152, index=4), @EnvVar(name="_self", type=Object.class, start=36, end=152, index=8)})
    public static Object explorer_model_search_plugin__rwo_sets_and_fields_for_category(MethodHandle __loopbody__, Object[] __loopenv__, Object _self, Object category) {
        block0: {
            Object[] __env__ = new Object[11];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)10);
            EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)4);
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)8);
            CallSite target = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_find_targets()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8)), category);
            if (target == null) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_12(), (Object[])__env__, (Object)Invoker.bootstrap("\\b]", target, ConstantBuilder.symbolBootstrap("symbol", "datasets"))));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_13(), (Object[])__env__, (Object)Invoker.bootstrap("\\b]", target, ConstantBuilder.symbolBootstrap("symbol", "plugins"))));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_search_plugin__rwo_sets_and_fields_for_category")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=73, index=0), @EnvVar(name="collection_info", type=Object.class, start=8, end=85, index=1)})
    public static Object __loopbody_13(Object[] __env__, Object dataset, Object collection_info) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)collection_info, (Object[])__env__, (int)1);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_14(), (Object[])__env__, (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "collections"))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_13")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_14(Object[] __env__, Object collection, Object field_info) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object)collection, (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrap("rwo_set()", collection)), (Object)field_info, (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "ace_name")));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_search_plugin__rwo_sets_and_fields_for_category")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=53, end=77, index=2), @EnvVar(name="plugin", type=Object[].class, start=42, end=89, index=9)})
    public static Object __loopbody_15(Object[] __env__, Object plugin_name, Object search_list) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            CallSite callSite = Invoker.bootstrap("plugin()", Invoker.bootstrapPrivate("framework", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8)), plugin_name);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)9);
            if (callSite != null) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_15(), (Object[])__env__, (Object)search_list));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_15")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="ace_name", type=Object[].class, start=58, end=210, index=7), @EnvVar(name="field_names", type=Object[].class, start=65, end=210, index=5), @EnvVar(name="rwo_sets", type=Object[].class, start=73, end=210, index=6)})
    public static Object __loopbody_16(Object[] __env__, Object parameters) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrap("find_source_rwo_sets_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9), (Object)parameters));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)7);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)5);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)6);
            boolean bl = MagikObjectUtils.isnt(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), null);
            Object object = new Boolean(bl);
            if (bl) {
                object = Invoker.bootstrap("not", Invoker.bootstrap("empty?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                CallSite collection = Invoker.bootstrap("an_element()", Invoker.bootstrap("all_collections()", Invoker.bootstrap("an_element()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6))));
                LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object)collection, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1752593880)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="overall_size", type=Object.class, start=167, end=812, index=9), @EnvVar(name="name", type=Object.class, start=187, end=812, index=7), @EnvVar(name="new_parts", type=Object.class, start=157, end=812, index=5), @EnvVar(name="results", type=Object.class, start=130, end=812, index=8), @EnvVar(name="__dynamic_frame__", type=Object.class, start=148, end=812, index=3), @EnvVar(name="wildchars", type=Object.class, start=139, end=812, index=4), @EnvVar(name="top_result", type=Object.class, start=177, end=812, index=6), @EnvVar(name="parts", type=Object.class, start=27, end=815, index=10), @EnvVar(name="mod_name", type=Object.class, start=37, end=815, index=11), @EnvVar(name="_self", type=Object.class, start=17, end=816, index=20)})
    public static Object explorer_model_search_plugin__do_find(Object _self, Object string, Object category, Object ... keys_and_args) {
        Object[] __env__ = new Object[21];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)20);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)10);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)11);
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("int!decomposed_search_string()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), (Object)string));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple.pop(), (Object[])__env__, (int)10);
        Object object = resultTuple.pop();
        CallSite props = Invoker.bootstrap("new_from_gathered()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), keys_and_args);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_search_plugin")), (Object[])__env__, (int)11);
        if (MagikObjectUtils.should_be_boolean(object)) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)8);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)4);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)5);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)9);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)6);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)7);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)8);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)ConstantBuilder.stringBootstrap("string", "*?"), (Object[])__env__, (int)4);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "equality_property_list")), (Object[])__env__, (int)5);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_16(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10)));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object[])__env__, (int)10);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_sets_and_fields_for_category()", (MethodHandle)cfr_ldc_17(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), (Object)category));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_sorted_collection()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8), ConstantBuilder.procWithEmptyEnvBootstrap("proc", (Class<?>)explorer_model_search_plugin_23986.class, "proc___", "", 3, 3, 0, 0)), (Object[])__env__, (int)8);
            CallSite category_name = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", props, ConstantBuilder.symbolBootstrap("symbol", "category_name")), Invoker.bootstrapPrivate("category_name()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), (Object)category));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), (Object)ConstantBuilder.symbolBootstrap("symbol", "text_search_title"), (Object)category_name, (Object)string), (Object[])__env__, (int)7);
            CallSite desc = Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), (Object)ConstantBuilder.symbolBootstrap("symbol", "text_search_description"), (Object)category_name, (Object)string);
            CallSite parent = Invoker.bootstrapPrivate("free_text_top_element", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrapPrivate("get_unique_name_for_parent()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)parent), ConstantBuilder.symbolBootstrap("symbol", "description"), desc, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_free_search_results"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11)), ConstantBuilder.symbolBootstrap("symbol", "column_headings"), VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), (Object)ConstantBuilder.symbolBootstrap("symbol", "name")), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), (Object)ConstantBuilder.symbolBootstrap("symbol", "size"))), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name"), ConstantBuilder.symbolBootstrap("symbol", "size")), ConstantBuilder.symbolBootstrap("symbol", "parent"), parent, ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(300), Integer.valueOf(100))), (Object[])__env__, (int)6);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)0, (Object[])__env__, (int)9);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_18(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8)));
            if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9) != null) {
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9);
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("value", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "size")));
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), (Object)VectorBuilder.bootstrap("vb", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20)))));
            return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6);
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_search_plugin__do_find")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_17(Object[] __env__, Object part, Object value) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            Object new_part = part;
            boolean bl = MagikObjectUtils.is(Invoker.bootstrap("size", part), 0);
            Boolean bl2 = new Boolean(bl);
            if (!bl) {
                bl2 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("index_of()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), Invoker.bootstrap("first", part)), null));
            }
            if (MagikObjectUtils.should_be_boolean(bl2)) {
                new_part = ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), ConstantBuilder.stringBootstrap("string", "*"), new_part);
            }
            boolean bl3 = MagikObjectUtils.is(Invoker.bootstrap("size", new_part), 1);
            Boolean bl4 = new Boolean(bl3);
            if (!bl3) {
                bl4 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("index_of()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), Invoker.bootstrap("last", new_part)), null));
            }
            if (MagikObjectUtils.should_be_boolean(bl4)) {
                new_part = ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), new_part, ConstantBuilder.stringBootstrap("string", "*"));
            }
            Object object = value;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)object, (Object)new_part));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_search_plugin__do_find")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="predicate", type=Object[].class, start=71, end=136, index=12), @EnvVar(name="col", type=Object[].class, start=63, end=136, index=15)})
    public static Object __loopbody_18(Object[] __env__, Object collection, Object rwo_sets, Object fields, Object ace_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("free_text_predicate_for_collection_and_fields()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), (Object)collection, (Object)fields));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)15);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)12);
            if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)12) != null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8), (Object)VectorBuilder.bootstrap("vb", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)12), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)15), rwo_sets, ace_name)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_search_plugin__do_find")
    @SourceHash(value=2137424282)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    public static Object proc___(Object _self, Object a, Object b) {
        return BinaryDispatcher.bootstrap("cf", Invoker.bootstrap("external_name", Invoker.bootstrap("\\b]", a, Integer.valueOf(2))), Invoker.bootstrap("external_name", Invoker.bootstrap("\\b]", b, Integer.valueOf(2))));
    }

    @Parent(method="explorer_model_search_plugin__do_find")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="image", type=Object[].class, start=176, end=188, index=18), @EnvVar(name="this_top_result", type=Object[].class, start=185, end=188, index=13), @EnvVar(name="overall_size", type=Object[].class, start=334, end=337, index=9), @EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=349, index=1), @EnvVar(name="total_size", type=Object.class, start=22, end=349, index=0), @EnvVar(name="sub_parts?", type=Object.class, start=38, end=349, index=2), @EnvVar(name="predicate", type=Object[].class, start=108, end=355, index=12), @EnvVar(name="rwo_sets", type=Object[].class, start=92, end=355, index=14), @EnvVar(name="overall_size", type=Object[].class, start=346, end=355, index=9), @EnvVar(name="image", type=Object[].class, start=197, end=355, index=18), @EnvVar(name="collection", type=Object[].class, start=100, end=355, index=19), @EnvVar(name="this_top_result", type=Object[].class, start=213, end=355, index=13), @EnvVar(name="ace_name", type=Object[].class, start=84, end=355, index=17)})
    public static Object __loopbody_19(Object[] __env__, Object info) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
            ResultTuple resultTuple2 = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)info)));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)17);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)14);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)19);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)12);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)14)), Integer.valueOf(1)), (Object[])__env__, (int)2);
            if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "collection_part"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11)), (Object[])__env__, (int)18);
                EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)13);
            } else {
                EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)18);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), (Object[])__env__, (int)13);
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)0, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_19(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)14)));
            boolean bl = MagikObjectUtils.isnt(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9), null);
            Boolean bl2 = new Boolean(bl);
            if (bl) {
                bl2 = new Boolean(MagikObjectUtils.isnt(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), null));
            }
            if (MagikObjectUtils.should_be_boolean(bl2)) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("+", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), (Object[])__env__, (int)9);
            } else {
                EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)9);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_19")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="this_top_result", type=Object[].class, start=171, end=174, index=13), @EnvVar(name="name", type=Object[].class, start=196, end=199, index=7), @EnvVar(name="total_size", type=Object[].class, start=285, end=288, index=0), @EnvVar(name="size", type=Object[].class, start=258, end=288, index=16), @EnvVar(name="total_size", type=Object[].class, start=305, end=308, index=0), @EnvVar(name="size", type=Object[].class, start=297, end=308, index=16), @EnvVar(name="name", type=Object[].class, start=220, end=410, index=7)})
    public static Object __loopbody_20(Object[] __env__, Object check_rwo_set_name, Object check_rwo_set) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            CallSite result = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "lazy_record_collection"), Invoker.bootstrap("select()", check_rwo_set, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)12)));
            Object object = Invoker.bootstrap("not", Invoker.bootstrap("size_is_fast?", result));
            if (!MagikObjectUtils.should_be_boolean(object)) {
                object = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("an_element()", result), null));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13) == null) {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrap("external_name", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)19)), ConstantBuilder.symbolBootstrap("symbol", "ace_name"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)17), ConstantBuilder.symbolBootstrap("symbol", "parent"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)), (Object[])__env__, (int)13);
                }
                if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))) {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)check_rwo_set_name, (Object[])__env__, (int)7);
                } else {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("external_name", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)19)), (Object[])__env__, (int)7);
                }
                if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0) != null) {
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("size_is_fast?", result))) {
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("size", result), (Object[])__env__, (int)16);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("+", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)16)), (Object[])__env__, (int)0);
                    } else {
                        EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)16);
                        EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)0);
                    }
                }
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)20), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)ConstantBuilder.symbolBootstrap("symbol", "size"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)16), (Object)ConstantBuilder.symbolBootstrap("symbol", "ace_name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)17), (Object)ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), (Object)result, (Object)ConstantBuilder.symbolBootstrap("symbol", "image"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)18), (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1600082532)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__int!filter_search(Object _self, Object source_element, Object parent_element, Object predicate) {
        CallSite name;
        CallSite rwo_set;
        block2: {
            rwo_set = Invoker.bootstrap("rwo_set", source_element);
            name = Invoker.bootstrap("name", source_element);
            CallSite result_description = Invoker.bootstrap("description", parent_element);
            if (result_description != null) {
                name = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "search_result_name"), (Object)name, (Object)result_description);
            }
            if (predicate == null) break block2;
            rwo_set = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "lazy_record_collection"), Invoker.bootstrap("select()", rwo_set, predicate));
            if (MagikObjectUtils.is(result_description, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "unset"))) {
                name = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "search_result_name"), (Object)name, (Object)Invoker.bootstrap("write_string", predicate));
            }
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)name, (Object)ConstantBuilder.symbolBootstrap("symbol", "ace_name"), (Object)Invoker.bootstrap("ace_name", source_element), (Object)ConstantBuilder.symbolBootstrap("symbol", "image"), (Object)Invoker.bootstrap("\\b]", Invoker.bootstrap("value", source_element), ConstantBuilder.symbolBootstrap("symbol", "image")), (Object)ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), (Object)Invoker.bootstrap("visible_field_names", source_element), (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)parent_element, (Object)ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), (Object)rwo_set));
    }

    @SourceHash(value=-1673940378)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="current_result", type=Object[].class, start=404, end=407, index=3), @EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=492, index=1), @EnvVar(name="predicate", type=Object.class, start=22, end=492, index=0), @EnvVar(name="new_result", type=Object[].class, start=307, end=493, index=5), @EnvVar(name="_self", type=Object.class, start=14, end=493, index=2)})
    public static Object explorer_model_search_plugin__filter_search(Object _self, Object explorer_element, Object ... keys_and_args) {
        CallSite source_elements;
        Object[] __env__ = new Object[6];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        CallSite properties = Invoker.bootstrap("new_from_gathered()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), keys_and_args);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("\\b]", properties, ConstantBuilder.symbolBootstrap("symbol", "predicate")), (Object[])__env__, (int)0);
        CallSite name = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", properties, ConstantBuilder.symbolBootstrap("symbol", "name")), Invoker.bootstrap("name", explorer_element));
        CallSite description = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", properties, ConstantBuilder.symbolBootstrap("symbol", "description")), Invoker.bootstrap("write_string", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        CallSite mod_name = Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_search_plugin"));
        CallSite image = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", properties, ConstantBuilder.symbolBootstrap("symbol", "image")), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_filter_search_results"), mod_name));
        CallSite parent = Invoker.bootstrapPrivate("filter_top_element", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2));
        name = Invoker.bootstrapPrivate("get_unique_name_for_parent()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)name, (Object)parent);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "name"), name, ConstantBuilder.symbolBootstrap("symbol", "description"), description, ConstantBuilder.symbolBootstrap("symbol", "image"), image, ConstantBuilder.symbolBootstrap("symbol", "column_headings"), VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"))), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name")), ConstantBuilder.symbolBootstrap("symbol", "parent"), parent, ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(100))), (Object[])__env__, (int)5);
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("has_collection_parts?", explorer_element))) {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrap("total_name", explorer_element), ConstantBuilder.symbolBootstrap("symbol", "parent"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), ConstantBuilder.symbolBootstrap("symbol", "ace_name"), Invoker.bootstrap("ace_name", explorer_element)), (Object[])__env__, (int)5);
            source_elements = Invoker.bootstrap("children", explorer_element);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object[])__env__, (int)3);
        } else {
            source_elements = VectorBuilder.bootstrap("vb", explorer_element);
        }
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_20(), (Object[])__env__, (Object)source_elements));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), (Object)VectorBuilder.bootstrap("vb", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)))));
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
    }

    @Parent(method="explorer_model_search_plugin__filter_search")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="current_result", type=Object[].class, start=72, end=75, index=3), @EnvVar(name="this_result", type=Object[].class, start=48, end=84, index=4)})
    public static Object __loopbody_21(Object[] __env__, Object sub_result) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("int!filter_search()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)sub_result, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), (Object[])__env__, (int)4);
            if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3) == null) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object[])__env__, (int)3);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-303821837)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__note_change(Object _self, Object who, Object what, Object ... args) {
        return Invoker.superNaturalBootstrap("note_change()", "plugin", "sw", (Object)_self, (Object)who, (Object)what, (Object[])((Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)args)));
    }

    @SourceHash(value=73737414)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__sw_databus_data_requested(Object _self, Object data_type_name) {
        if (data_type_name == ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) {
            return VectorBuilder.bootstrap("vb", _self, Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1824485446)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        Object object;
        boolean bl = MagikObjectUtils.is(action, ConstantBuilder.symbolBootstrap("symbol", "delete"));
        Boolean bl2 = new Boolean(bl);
        if (!bl) {
            bl2 = new Boolean(MagikObjectUtils.is(action, ConstantBuilder.symbolBootstrap("symbol", "rename")));
        }
        if (MagikObjectUtils.should_be_boolean(bl2)) {
            object = (ResultTuple)((Object)Invoker.tupleBootstrap("includes?()", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), (Object)Invoker.bootstrap("parent", source_element)));
        } else {
            if (action == ConstantBuilder.symbolBootstrap("symbol", "delete_all")) {
                boolean bl3 = MagikObjectUtils.is(source_element, Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "filter")));
                Boolean bl4 = new Boolean(bl3);
                if (!bl3) {
                    bl4 = new Boolean(MagikObjectUtils.is(source_element, Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "free_text"))));
                }
                if (MagikObjectUtils.should_be_boolean(bl4)) {
                    return BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", Invoker.bootstrap("children", source_element)), Integer.valueOf(0));
                }
                return Boolean.FALSE;
            }
            object = action == ConstantBuilder.symbolBootstrap("symbol", "delete_records") ? Boolean.TRUE : Boolean.FALSE;
        }
        return object;
    }

    @SourceHash(value=1135705116)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__start_move_action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        block0: {
            if (action != ConstantBuilder.symbolBootstrap("symbol", "move")) break block0;
            action = ConstantBuilder.symbolBootstrap("symbol", "copy");
        }
        return TupleBuilder.bootstrap("tb", Boolean.TRUE, action);
    }

    @SourceHash(value=620890420)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__show_on(Object _self, Object a_stream) {
        return Invoker.superNaturalBootstrap("show_on()", "plugin", "sw", (Object)_self, (Object)a_stream);
    }

    @SourceHash(value=363958104)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="new_group", type=Object[].class, start=80, end=144, index=3), @EnvVar(name="mod_name", type=Object.class, start=24, end=287, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=33, end=287, index=1), @EnvVar(name="_self", type=Object.class, start=15, end=288, index=2), @EnvVar(name="new_group", type=Object[].class, start=171, end=288, index=3)})
    public static Object explorer_model_search_plugin__do_move_action(Object _self, Object action, Object source_element, Object target_element) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_search_plugin")), (Object[])__env__, (int)0);
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_group?", source_element))) {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("deep_copy()", source_element, Boolean.TRUE), (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("rename()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)Invoker.bootstrapPrivate("get_unique_name_for_parent()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("name", source_element), (Object)target_element)));
            Object object = target_element;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("parent\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)object));
        } else {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("new_restriction_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("name", source_element)), (Object[])__env__, (int)3);
            CallSite new_element = Invoker.bootstrap("deep_copy()", source_element, Boolean.TRUE);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("parent\\l\\l", (Object)new_element, (Object)callSite));
        }
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_depth_first()", (MethodHandle)cfr_ldc_21(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_changed_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "restrictions")));
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
    }

    @Parent(method="explorer_model_search_plugin__do_move_action")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_22(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("owner\\l\\l", (Object)element, (Object)callSite));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_group?", element))) {
                CallSite callSite2 = VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_filter_restrictions"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("image\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)callSite2));
                callSite2 = null;
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("value", element), (Object)callSite2, (Object)ConstantBuilder.symbolBootstrap("symbol", "own_styled_string")));
                callSite2 = null;
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("value", element), (Object)callSite2, (Object)ConstantBuilder.symbolBootstrap("symbol", "child_styled_string")));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1094717715)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__do_action(Object _self, Object action, Object source_element, Object argument) {
        block0: {
            Boolean bl = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("parent", source_element), Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "restrictions"))));
            Invoker.superNaturalBootstrap("do_action()", "explorer_model_plugin_mixin", "sw", (Object)_self, (Object)action, (Object)source_element, (Object)argument);
            if (!MagikObjectUtils.should_be_boolean(bl)) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "restrictions")));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-137074442)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__end_move_action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        CallSite source_plugin = Invoker.bootstrap("owner", source_element);
        return MagikObjectUtils.is(target_element, Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "restrictions"))) ? TupleBuilder.bootstrap("tb", new Boolean(MagikObjectUtils.isnt(source_plugin, _self)), ConstantBuilder.symbolBootstrap("symbol", "copy")) : TupleBuilder.bootstrap("tb", Boolean.FALSE, action);
    }

    @SourceHash(value=-1297111305)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__new_restriction_element(Object _self, Object name) {
        CallSite top_element = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "restrictions"));
        CallSite mod_name = Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_search_plugin"));
        return (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)Invoker.bootstrapPrivate("get_unique_name_for_parent()", (Object)_self, (Object)name, (Object)top_element), (Object)ConstantBuilder.symbolBootstrap("symbol", "image"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_filter_restrictions"), mod_name), (Object)ConstantBuilder.symbolBootstrap("symbol", "column_headings"), (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "name"))), (Object)ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name")), (Object)ConstantBuilder.symbolBootstrap("symbol", "column_widths"), (Object)VectorBuilder.bootstrap("vb", Integer.valueOf(475)), (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)top_element));
    }

    @SourceHash(value=-10796707)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="restrictions", type=Object.class, start=21, end=84, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=84, index=0)})
    public static Object explorer_model_search_plugin__restricting_rwo_sets(Object _self) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_22(), (Object[])__env__, (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "restrictions"))));
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
    }

    @Parent(method="explorer_model_search_plugin__restricting_rwo_sets")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_23(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("rwo_set", element);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)callSite, (Object)Invoker.bootstrap("name", element)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1779820335)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_search_plugin__setup_restrictions_top_element(Object _self) {
        block0: {
            CallSite mod_name = Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_search_plugin"));
            if (Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "restrictions")) != null) break block0;
            CallSite callSite = Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), _self, ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "filter_restrictions")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_filter_restrictions"), mod_name), ConstantBuilder.symbolBootstrap("symbol", "column_headings"), VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "name"))), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name")), ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(475)));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "restrictions")));
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "restrictions")));
    }

    @SourceHash(value=-1957390053)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=42, end=167, index=0), @EnvVar(name="new_parent", type=Object.class, start=51, end=167, index=1), @EnvVar(name="ace_name", type=Object.class, start=33, end=168, index=3), @EnvVar(name="rwo_set", type=Object.class, start=24, end=168, index=2), @EnvVar(name="_self", type=Object.class, start=15, end=168, index=4)})
    public static Object explorer_model_search_plugin__add_restricting_rwo_set(Object _self, Object name, Object rwo_set, Object ace_name) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)rwo_set, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)ace_name, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("new_restriction_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)name), (Object[])__env__, (int)1);
        CallSite all_collections = Invoker.bootstrap("as_sorted_collection()", Invoker.bootstrap("all_collections()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), ConstantBuilder.procWithEmptyEnvBootstrap("proc", (Class<?>)explorer_model_search_plugin_23986.class, "proc___2", "", 3, 3, 0, 0));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_23(), (Object[])__env__, (Object)all_collections));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_changed_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ConstantBuilder.symbolBootstrap("symbol", "restrictions")));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_search_plugin__add_restricting_rwo_set")
    @SourceHash(value=-445455372)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    public static Object proc___2(Object _self, Object a, Object b) {
        return BinaryDispatcher.bootstrap("cf", Invoker.bootstrap("external_name", a), Invoker.bootstrap("external_name", b));
    }

    @Parent(method="explorer_model_search_plugin__add_restricting_rwo_set")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_24(Object[] __env__, Object collection) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite col_rwo_set = Invoker.bootstrap("select()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "collection"), VectorBuilder.bootstrap("vb", Invoker.bootstrap("name", collection)));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)Invoker.bootstrap("external_name", collection), (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)ConstantBuilder.symbolBootstrap("symbol", "ace_name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), (Object)col_rwo_set));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1621007224)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=75, index=1), @EnvVar(name="_self", type=Object.class, start=13, end=76, index=2), @EnvVar(name="database", type=Object.class, start=21, end=76, index=3)})
    public static Object explorer_model_search_plugin__database_changed(Object _self, Object database) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)database, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_24(), (Object[])__env__, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "filter"), ConstantBuilder.symbolBootstrap("symbol", "free_text"), ConstantBuilder.symbolBootstrap("symbol", "restrictions"))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_search_plugin__database_changed")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=51, end=81, index=0), @EnvVar(name="top", type=Object[].class, start=40, end=93, index=4)})
    public static Object __loopbody_25(Object[] __env__, Object name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            CallSite callSite = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), name);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)4);
            if (callSite != null) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("breadth_first()", (MethodHandle)cfr_ldc_25(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_25")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_26(Object[] __env__, Object col_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("is_collection?", col_element);
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("not", Invoker.bootstrap("is_valid_collection?()", col_element, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                if (MagikObjectUtils.is(Invoker.bootstrap("number_of_children", Invoker.bootstrap("parent", col_element)), 1)) {
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)Invoker.bootstrap("parent", col_element)));
                }
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)col_element));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_8() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_9", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_9() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_10", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_10() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_11", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_11() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_12", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_12() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_13", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_13() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_15", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_14() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_14", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_15() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_16", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_16() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_17", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_17() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_18", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_18() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_19", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_19() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_20", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_20() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_21", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_21() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_22", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_22() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_23", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_23() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_24", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_24() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_25", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_25() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_search_plugin_23986.class, "__loopbody_26", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_model_search_plugin_23986;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_model_search_plugin_23985
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_model_search_plugin_23985() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model_plugins/explorer_model_search_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_model_search_plugin"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "find_targets"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_model_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_search_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_search_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "allow_free_text_special_characters"), (Object)ConstantBuilder.symbolBootstrap("symbol", "boolean"), (Object)ConstantBuilder.stringBootstrap("string", "Do we want the special characters (+, -) to be available in free text search"), null, null, (Object)Boolean.TRUE));
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "init()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__init", 2, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "process_xml_field()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__process_xml_field", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "process_xml_collection()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__process_xml_collection", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "process_xml_dataset()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__process_xml_dataset", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "process_xml_plugin()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__process_xml_plugin", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "process_xml_search_category()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__process_xml_search_category", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "process_plugin_data()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__process_plugin_data", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "category_name()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__category_name", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "find_target_items()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__find_target_items", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "filter_top_element", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__filter_top_element_", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "free_text_top_element", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__free_text_top_element_", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "int!decomposed_search_string()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__int!decomposed_search_string", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "free_text_predicate_for_collection_and_fields()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__free_text_predicate_for_collection_and_fields", 4, 4, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "rwo_sets_and_fields_for_category()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__rwo_sets_and_fields_for_category", 4, 4, true, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "do_find()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__do_find", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "int!filter_search()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__int!filter_search", 4, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "filter_search()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__filter_search", 3, 2);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "note_change()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__note_change", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "sw_databus_data_requested()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__sw_databus_data_requested", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "action_allowed?()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__action_allowed?", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "start_move_action_allowed?()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__start_move_action_allowed?", 4, 4);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "show_on()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__show_on", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "do_move_action()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__do_move_action", 4, 4);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "do_action()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__do_action", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "end_move_action_allowed?()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__end_move_action_allowed?", 4, 4);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "new_restriction_element()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__new_restriction_element", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "restricting_rwo_sets()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__restricting_rwo_sets", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "setup_restrictions_top_element()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__setup_restrictions_top_element", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_search_plugin", "add_restricting_rwo_set()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__add_restricting_rwo_set", 4, 3);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_model_search_plugin", "database_changed()", explorer_model_search_plugin_23986.class, "explorer_model_search_plugin__database_changed", 2, 2));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_model_scrapbook_plugin_24021 {
    @SourceHash(value=1186537259)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_scrapbook_plugin__post_init_plugins(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_scrapbook()", (Object)_self, (Object)Invoker.bootstrap("scrapbook()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "gis_program_manager"), Invoker.bootstrap("spatial_object_controller", Invoker.bootstrapPrivate("application", (Object)_self)))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_dependent()", (Object)Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self), (Object)_self));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_writing_to_scrapbook?()", (Object)_self, (Object)Boolean.FALSE));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_explorer_elements()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=875758087)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_scrapbook_plugin__current_set_element_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "current_set")));
    }

    @SourceHash(value=-914149796)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_scrapbook_plugin__saved_sets_element_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "saved_sets")));
    }

    @SourceHash(value=1801694655)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_scrapbook_plugin__explorer_element_for(Object _self, Object current_result, Object result_rec, Object object, Object current_set_element) {
        CallSite source = result_rec != null ? Invoker.bootstrap("write_string", Invoker.bootstrap("source", result_rec)) : ConstantBuilder.stringBootstrap("string", "-");
        CallSite name = result_rec != null ? Invoker.bootstrap("write_string", Invoker.bootstrap("name", result_rec)) : null;
        CallSite key = MagikObjectUtils.should_be_boolean(object) ? ConstantBuilder.symbolBootstrap("symbol", "current_set") : name;
        CallSite image = MagikObjectUtils.should_be_boolean(object) ? ConstantBuilder.symbolBootstrap("symbol", "my_scrapbook_current_element") : ConstantBuilder.symbolBootstrap("symbol", "my_scrapbook_element");
        Object user_data = current_result;
        CallSite num_records = result_rec != null ? Invoker.bootstrap("records", result_rec) : null;
        CallSite mod_name = Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_scrapbook_plugin"));
        boolean bl = MagikObjectUtils.is(num_records, 0);
        Boolean bl2 = new Boolean(bl);
        if (bl) {
            bl2 = new Boolean(MagikObjectUtils.is(object, Boolean.TRUE));
        }
        if (MagikObjectUtils.should_be_boolean(bl2)) {
            num_records = null;
        }
        CallSite total_name = name;
        if (MagikObjectUtils.should_be_boolean(object)) {
            name = result_rec != null ? Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "named_current_set"), (Object)name) : Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "current_set"));
            if (current_set_element != null) {
                Object object2 = name;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("name\\l\\l", (Object)current_set_element, (Object)object2));
                object2 = total_name;
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("value", current_set_element), (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "total_name")));
                object2 = user_data;
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("value", current_set_element), (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "user_data")));
                object2 = num_records;
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("value", current_set_element), (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "size")));
                object2 = source;
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("value", current_set_element), (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "description")));
                object2 = Boolean.TRUE;
                ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("lazy_children?\\l\\l", (Object)current_set_element, (Object)object2));
                return current_set_element;
            }
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "key"), (Object)key, (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)name, (Object)ConstantBuilder.symbolBootstrap("symbol", "total_name"), (Object)total_name, (Object)ConstantBuilder.symbolBootstrap("symbol", "user_data"), (Object)user_data, (Object)ConstantBuilder.symbolBootstrap("symbol", "lazy_children?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "size"), (Object)num_records, (Object)ConstantBuilder.symbolBootstrap("symbol", "description"), (Object)source, (Object)ConstantBuilder.symbolBootstrap("symbol", "image"), (Object)VectorBuilder.bootstrap("vb", image, mod_name), (Object)ConstantBuilder.symbolBootstrap("symbol", "column_headings"), (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "name")), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "size"))), (Object)ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name"), ConstantBuilder.symbolBootstrap("symbol", "size")), (Object)ConstantBuilder.symbolBootstrap("symbol", "column_widths"), (Object)VectorBuilder.bootstrap("vb", Integer.valueOf(330), Integer.valueOf(145))));
    }

    @SourceHash(value=-450003196)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=128, end=152, index=4), @EnvVar(name="children", type=Object.class, start=32, end=162, index=5), @EnvVar(name="ace_name", type=Object.class, start=41, end=162, index=6), @EnvVar(name="_self", type=Object.class, start=15, end=163, index=13), @EnvVar(name="an_explorer_element", type=Object.class, start=24, end=163, index=7)})
    public static Object explorer_model_scrapbook_plugin__children_for_explorer_element(Object _self, Object an_explorer_element) {
        Object[] __env__;
        block0: {
            __env__ = new Object[14];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)13);
            EnvAccessor.bootstrapReseter("resetEnv", (Object)an_explorer_element, (Object[])__env__, (int)7);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)5);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)6);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)5);
            CallSite current_result = Invoker.bootstrap("default()", Invoker.bootstrap("user_data", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7)), Invoker.bootstrap("current_result", Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13))));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("default_ace_name()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13)), (Object[])__env__, (int)6);
            if (current_result == null) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)4);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)4);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)current_result));
        }
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5);
    }

    @Parent(method="explorer_model_scrapbook_plugin__children_for_explorer_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="internal_names", type=Object[].class, start=161, end=186, index=12), @EnvVar(name="tables", type=Object[].class, start=177, end=186, index=8), @EnvVar(name="external_names", type=Object[].class, start=169, end=186, index=9), @EnvVar(name="3bde5096-0b6d-460d-8f1e-373a526fffe3", type=Object.class, start=38, end=211, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=307, index=2), @EnvVar(name="3bde5096-0b6d-460d-8f1e-373a526fffe3", type=Object.class, start=273, end=313, index=0), @EnvVar(name="internal_names", type=Object[].class, start=273, end=313, index=12), @EnvVar(name="tables", type=Object[].class, start=273, end=313, index=8), @EnvVar(name="external_names", type=Object[].class, start=273, end=313, index=9), @EnvVar(name="a_record_set", type=Object.class, start=8, end=319, index=3)})
    public static Object __loopbody_(Object[] __env__, Object a_record_set) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)a_record_set, (Object[])__env__, (int)3);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
        try {
            block10: {
                block12: {
                    block11: {
                        Object object;
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                        DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                        CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                        DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                        try {
                            try {
                                DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                try {
                                    Object[] objectArray = new Object[]{__env__[0]};
                                    CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_model_scrapbook_plugin_24021.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray);
                                    ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "scrapbook_unknown_dataset"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "scrapbook_cant_find_table"), callSite2);
                                    ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrap("sources()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
                                    EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)12);
                                    EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)9);
                                    EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)8);
                                    DynamicScope.destroyFrame();
                                    DynamicScope.destroyFrame();
                                    break block10;
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                            }
                            catch (Thrower.Throw throw_) {
                                Object object2;
                                object = object2 = Thrower.checkTag(throw_, callSite).peek();
                                DynamicScope.destroyFrame();
                            }
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                        Object object3 = object;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "scrapbook_unknown_dataset")))) break block11;
                        object3 = object3;
                        if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "scrapbook_cant_find_table")))) break block12;
                    }
                    ResultTuple resultTuple3 = ResultTuple.EMPTY_TUPLE;
                    DynamicScope.interjectFrame(__iterator_frame__);
                    return resultTuple3;
                }
                throw new Error("Try block caught unexpected error.");
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="3bde5096-0b6d-460d-8f1e-373a526fffe3", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @Parent(method="__loopbody_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="records", type=Object[].class, start=117, end=126, index=11), @EnvVar(name="a06ebfaf-a598-43b7-ada0-2be0ae60004c", type=Object.class, start=22, end=151, index=1), @EnvVar(name="records", type=Object[].class, start=190, end=193, index=11), @EnvVar(name="a06ebfaf-a598-43b7-ada0-2be0ae60004c", type=Object.class, start=204, end=421, index=1), @EnvVar(name="records", type=Object[].class, start=204, end=421, index=11), @EnvVar(name="size", type=Object[].class, start=213, end=421, index=10)})
    public static Object __loopbody_2(Object[] __env__, Object c) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            CallSite callSite;
            block13: {
                Object object;
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)1);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite2);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[1]};
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "scrapbook_unretrievable_records"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_model_scrapbook_plugin_24021.class, "proc___2", "", 3, 3, 0, 0, (Object[])objectArray));
                            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_lazy_record_collection()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), c), (Object[])__env__, (int)11);
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            break block13;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object2;
                        object = object2 = Thrower.checkTag(throw_, callSite2).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "scrapbook_unretrievable_records")))) {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rwo_set")), (Object[])__env__, (int)11);
                } else {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)10);
            CallSite callSite3 = Invoker.bootstrap("responds_to?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11), ConstantBuilder.symbolBootstrap("symbol", "size_is_fast?"));
            if (MagikObjectUtils.should_be_boolean(callSite3)) {
                callSite3 = callSite = Invoker.bootstrap("size_is_fast?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11));
            }
            if (MagikObjectUtils.should_be_boolean(callSite3)) {
                CallSite callSite4 = Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite4, (Object[])__env__, (int)10);
                callSite = BinaryDispatcher.bootstrap("=", callSite4, Integer.valueOf(0));
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13), ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrap("external_name", c), ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11), ConstantBuilder.symbolBootstrap("symbol", "size"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), ConstantBuilder.symbolBootstrap("symbol", "ace_name"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), ConstantBuilder.symbolBootstrap("symbol", "parent"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_2")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="a06ebfaf-a598-43b7-ada0-2be0ae60004c", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___2(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=2045972603)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="current_set_element", type=Object.class, start=22, end=704, index=0), @EnvVar(name="existing_result_records", type=Object.class, start=46, end=704, index=3), @EnvVar(name="__dynamic_frame__", type=Object.class, start=38, end=704, index=2), @EnvVar(name="new_result_records", type=Object.class, start=30, end=704, index=1), @EnvVar(name="_self", type=Object.class, start=14, end=705, index=5)})
    public static Object explorer_model_scrapbook_plugin__setup_explorer_elements(Object _self) {
        Object[] __env__ = new Object[8];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
        CallSite mod_name = Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_scrapbook_plugin"));
        if (Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)) == null) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "scrapbook")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_scrapbook_results"), mod_name), ConstantBuilder.symbolBootstrap("symbol", "column_headings"), VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "name")), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "source")), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "size"))), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name"), ConstantBuilder.symbolBootstrap("symbol", "description"), ConstantBuilder.symbolBootstrap("symbol", "size")), ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(165), Integer.valueOf(165), Integer.valueOf(145)))));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "key"), (Object)ConstantBuilder.symbolBootstrap("symbol", "saved_sets"), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "saved_sets")), (Object)ConstantBuilder.symbolBootstrap("symbol", "image"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_scrapbook_element"), mod_name), (Object)ConstantBuilder.symbolBootstrap("symbol", "column_headings"), (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "name")), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "source")), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "size"))), (Object)ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name"), ConstantBuilder.symbolBootstrap("symbol", "description"), ConstantBuilder.symbolBootstrap("symbol", "size")), (Object)ConstantBuilder.symbolBootstrap("symbol", "column_widths"), (Object)VectorBuilder.bootstrap("vb", Integer.valueOf(165), Integer.valueOf(165), Integer.valueOf(145)), (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))));
        }
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "equality_property_list")), (Object[])__env__, (int)3);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("current_set_element", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object[])__env__, (int)0);
        CallSite check_elements = Invoker.bootstrap("new_appending()", VectorBuilder.bootstrap("vb", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("children", Invoker.bootstrapPrivate("saved_sets_element", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)check_elements));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrap("current_result", Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))), Boolean.TRUE)));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)Invoker.bootstrap("result_names()", Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_scrapbook_plugin__setup_explorer_elements")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="index", type=Object[].class, start=73, end=78, index=7), @EnvVar(name="result", type=Object[].class, start=33, end=129, index=6)})
    public static Object __loopbody_3(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            if (child != null) {
                CallSite callSite = Invoker.bootstrap("user_data", child);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)6);
                boolean bl = MagikObjectUtils.isnt(callSite, null);
                Object object = new Boolean(bl);
                if (bl) {
                    CallSite callSite2 = Invoker.bootstrap("index_record", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6));
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite2, (Object[])__env__, (int)7);
                    object = Invoker.bootstrap("is_valid?", callSite2);
                }
                if (MagikObjectUtils.should_be_boolean(object)) {
                    Object object2 = child;
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)object2, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7)));
                }
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)child));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_scrapbook_plugin__setup_explorer_elements")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_4(Object[] __env__, Object a_result_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrap("get_result()", Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), a_result_name), Boolean.FALSE)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_scrapbook_plugin__setup_explorer_elements")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="element", type=Object[].class, start=94, end=106, index=4), @EnvVar(name="element", type=Object[].class, start=143, end=146, index=4), @EnvVar(name="element", type=Object[].class, start=219, end=247, index=4)})
    public static Object __loopbody_5(Object[] __env__, Object new_result_record) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            ResultTuple resultTuple2 = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)new_result_record)));
            Object object = resultTuple2.pop();
            Object result_record = resultTuple2.pop();
            CallSite index_record = result_record != null ? Invoker.bootstrap("index_record", result_record) : null;
            Object object2 = object;
            if (!MagikObjectUtils.should_be_boolean(object2)) {
                CallSite callSite = Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), index_record);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)4);
                object2 = new Boolean(MagikObjectUtils.is(callSite, null));
            }
            if (MagikObjectUtils.should_be_boolean(object2)) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("explorer_element_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)result_record, (Object)index_record, (Object)object, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), (Object[])__env__, (int)4);
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_child()", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)1));
            } else {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("explorer_element_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)result_record, (Object)index_record, (Object)object, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), (Object[])__env__, (int)4);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_child()", (Object)Invoker.bootstrapPrivate("saved_sets_element", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=987847487)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_scrapbook_plugin__note_change(Object _self, Object who, Object what, Object ... args) {
        block2: {
            Object object;
            boolean bl = MagikObjectUtils.is(who, Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self));
            Object object2 = new Boolean(bl);
            if (bl) {
                object2 = object = new Boolean(MagikObjectUtils.is(what, ConstantBuilder.symbolBootstrap("symbol", "result_names")));
            }
            if (MagikObjectUtils.should_be_boolean(object2)) {
                object = Invoker.bootstrap("not", Invoker.bootstrapPrivate("$slot_get_writing_to_scrapbook?()", (Object)_self));
            }
            if (!MagikObjectUtils.should_be_boolean(object)) break block2;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_explorer_elements()", (Object)_self));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), (Object)VectorBuilder.bootstrap("vb", _self, VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self)))));
        }
        return Invoker.superNaturalBootstrap("note_change()", "plugin", "sw", (Object)_self, (Object)who, (Object)what, (Object[])((Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)args)));
    }

    @SourceHash(value=1425181341)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_scrapbook_plugin__sw_databus_data_requested(Object _self, Object data_type_name) {
        if (data_type_name == ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) {
            return VectorBuilder.bootstrap("vb", _self, VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-546732473)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_scrapbook_plugin__action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        boolean bl = MagikObjectUtils.is(action, ConstantBuilder.symbolBootstrap("symbol", "delete"));
        Boolean bl2 = new Boolean(bl);
        if (!bl) {
            bl2 = new Boolean(MagikObjectUtils.is(action, ConstantBuilder.symbolBootstrap("symbol", "rename")));
        }
        return MagikObjectUtils.should_be_boolean(bl2) ? new Boolean(MagikObjectUtils.is(Invoker.bootstrap("parent", source_element), Invoker.bootstrapPrivate("saved_sets_element", (Object)_self))) : Boolean.FALSE;
    }

    @SourceHash(value=152171065)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_scrapbook_plugin__do_action(Object _self, Object action, Object source_element, Object argument) {
        if (action == ConstantBuilder.symbolBootstrap("symbol", "delete")) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("delete()", (Object)Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self), (Object)Invoker.bootstrap("name", source_element)));
        } else if (action == ConstantBuilder.symbolBootstrap("symbol", "rename")) {
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_writing_to_scrapbook?()", (Object)_self, (Object)Boolean.TRUE));
            try {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("rename()", (Object)Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self), (Object)Invoker.bootstrap("name", source_element), (Object)argument));
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_explorer_elements()", (Object)_self));
                Invoker.superNaturalBootstrap("do_action()", "explorer_model_plugin_mixin", "sw", (Object)_self, (Object)action, (Object)source_element, (Object)argument);
            }
            finally {
                InterruptInfrastructure.disableInterrupts();
                try {
                    ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_writing_to_scrapbook?()", (Object)_self, (Object)Boolean.FALSE));
                }
                finally {
                    InterruptInfrastructure.enableInterrupts();
                }
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1041438164)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_scrapbook_plugin__start_move_action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        CallSite current_set = Invoker.bootstrapPrivate("current_set_element", (Object)_self);
        CallSite saved_sets = Invoker.bootstrapPrivate("saved_sets_element", (Object)_self);
        return MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_collection?", source_element)) ? TupleBuilder.bootstrap("tb", Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "copy")) : (MagikObjectUtils.is(source_element, Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self)) ? Boolean.FALSE : (MagikObjectUtils.is(source_element, current_set) ? TupleBuilder.bootstrap("tb", Invoker.bootstrap("children?", current_set), ConstantBuilder.symbolBootstrap("symbol", "copy")) : (MagikObjectUtils.is(Invoker.bootstrap("parent", source_element), saved_sets) ? TupleBuilder.bootstrap("tb", Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "copy")) : Boolean.FALSE)));
    }

    @SourceHash(value=-1728288812)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_scrapbook_plugin__end_move_action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        CallSite callSite;
        CallSite current_set = Invoker.bootstrapPrivate("current_set_element", (Object)_self);
        CallSite saved_sets = Invoker.bootstrapPrivate("saved_sets_element", (Object)_self);
        if (MagikObjectUtils.is(target_element, current_set)) {
            callSite = TupleBuilder.bootstrap("tb", new Boolean(MagikObjectUtils.isnt(source_element, current_set)), ConstantBuilder.symbolBootstrap("symbol", "copy"));
        } else if (MagikObjectUtils.is(target_element, saved_sets)) {
            Object object;
            CallSite callSite2 = Invoker.bootstrap("writable?", Invoker.bootstrap("scrapbook_view", Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self)));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", callSite2))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("switch()", (Object)Invoker.bootstrap("scrapbook_view", Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self)), (Object)ConstantBuilder.symbolBootstrap("symbol", "write")));
                callSite2 = Invoker.bootstrap("writable?", Invoker.bootstrap("scrapbook_view", Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self)));
            }
            if (MagikObjectUtils.should_be_boolean(object = callSite2)) {
                object = new Boolean(MagikObjectUtils.isnt(source_element, saved_sets));
            }
            callSite = TupleBuilder.bootstrap("tb", object, ConstantBuilder.symbolBootstrap("symbol", "copy"));
        } else {
            callSite = TupleBuilder.bootstrap("tb", Boolean.FALSE, action);
        }
        return callSite;
    }

    @SourceHash(value=286443402)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=154, end=240, index=0), @EnvVar(name="d58f8f37-ff32-4d62-8aec-c71898a06f6d", type=Object.class, start=390, end=524, index=1), @EnvVar(name="d58f8f37-ff32-4d62-8aec-c71898a06f6d", type=Object.class, start=559, end=562, index=1), @EnvVar(name="existing_names", type=Object.class, start=15, end=717, index=2)})
    public static Object explorer_model_scrapbook_plugin__do_move_action(Object _self, Object action, Object source_element, Object target_element) {
        block20: {
            Object[] __env__ = new Object[3];
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
            Boolean bl = Boolean.TRUE;
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "equality_set")), (Object[])__env__, (int)2);
            CallSite current_set_element = Invoker.bootstrapPrivate("current_set_element", (Object)_self);
            CallSite saved_sets_element = Invoker.bootstrapPrivate("saved_sets_element", (Object)_self);
            Boolean bl2 = new Boolean(MagikObjectUtils.is(source_element, current_set_element));
            Boolean bl3 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("parent", source_element), saved_sets_element));
            CallSite description = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_source"));
            CallSite name = Invoker.bootstrap("write_string", Invoker.bootstrap("name", source_element));
            if (MagikObjectUtils.should_be_boolean(bl3)) {
                description = Invoker.bootstrap("description", source_element);
            }
            if (MagikObjectUtils.is(target_element, saved_sets_element)) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                if (MagikObjectUtils.should_be_boolean(bl2)) {
                    name = Invoker.bootstrap("write_string", Invoker.bootstrap("total_name", source_element));
                    description = Invoker.bootstrap("description", source_element);
                }
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)Invoker.bootstrap("result_names()", Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self))));
                name = Invoker.bootstrapPrivate("get_unique_name()", (Object)_self, (Object)name, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2));
            }
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_writing_to_scrapbook?()", (Object)_self, (Object)Boolean.TRUE));
            try {
                Object object;
                boolean bl4 = MagikObjectUtils.is(target_element, current_set_element);
                Boolean bl5 = new Boolean(bl4);
                if (!bl4) {
                    bl5 = new Boolean(MagikObjectUtils.is(target_element, Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self)));
                }
                if (MagikObjectUtils.should_be_boolean(bl5)) {
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_current_result()", (Object)Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self), (Object)name, (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrap("rwo_set", source_element)), (Object)description));
                    break block20;
                }
                if (!MagikObjectUtils.is(target_element, saved_sets_element)) break block20;
                CallSite stored_result = Invoker.bootstrap("new_non_persistent()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "query_result"), VectorBuilder.bootstrap("vb", Invoker.bootstrap("rwo_set", source_element)), Invoker.bootstrap("scrapbook_view", Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self)), name, null, description);
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)1);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[1]};
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "scrapbook_read_only"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_model_scrapbook_plugin_24021.class, "proc___3", "", 3, 3, 0, 0, (Object[])objectArray));
                            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("store()", (Object)Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self), (Object)name, (Object)bl, (Object)stored_result));
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            break block20;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object2;
                        object = object2 = Thrower.checkTag(throw_, callSite).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "scrapbook_read_only")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            finally {
                InterruptInfrastructure.disableInterrupts();
                try {
                    ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_writing_to_scrapbook?()", (Object)_self, (Object)Boolean.FALSE));
                    ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_explorer_elements()", (Object)_self));
                    ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), (Object)VectorBuilder.bootstrap("vb", _self, VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self)))));
                }
                finally {
                    InterruptInfrastructure.enableInterrupts();
                }
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_scrapbook_plugin__do_move_action")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_6(Object[] __env__, Object i_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("write_string", i_name)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_scrapbook_plugin__do_move_action")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="d58f8f37-ff32-4d62-8aec-c71898a06f6d", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___3(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=1100886231)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_scrapbook_plugin__terminate(Object _self) {
        Invoker.superNaturalBootstrap("terminate()", "plugin", "sw", (Object)_self);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_dependent()", (Object)Invoker.bootstrapPrivate("$slot_get_scrapbook()", (Object)_self), (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=583638102)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=43, end=67, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=100, end=125, index=4), @EnvVar(name="database", type=Object.class, start=14, end=132, index=5)})
    public static Object explorer_model_scrapbook_plugin__database_changed(Object _self, Object database) {
        block1: {
            CallSite saved_sets;
            Object[] __env__ = new Object[7];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)database, (Object[])__env__, (int)5);
            CallSite current = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "current_set"));
            if (current != null) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("breadth_first()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)current));
            }
            if ((saved_sets = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "saved_sets"))) == null) break block1;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)4);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)4);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("children()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)saved_sets));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_scrapbook_plugin__database_changed")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_7(Object[] __env__, Object col_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("is_collection?", col_element);
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("not", Invoker.bootstrap("is_valid_collection?()", col_element, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)));
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)col_element));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_scrapbook_plugin__database_changed")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=101, end=165, index=2), @EnvVar(name="__leave_catcher__", type=Object[].class, start=116, end=165, index=6), @EnvVar(name="saved_set", type=Object.class, start=8, end=183, index=3)})
    public static Object __loopbody_8(Object[] __env__, Object saved_set) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)saved_set, (Object[])__env__, (int)3);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("lazy_children?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))))) {
                if (MagikObjectUtils.is(Invoker.bootstrap("number_of_children", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), 0)) {
                    Boolean bl = Boolean.TRUE;
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("lazy_children?\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)bl));
                } else {
                    EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)6);
                    try {
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("breadth_first()", (MethodHandle)cfr_ldc_8(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
                    }
                    catch (LeaveCatcher.Leave leave) {
                        ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6))).getLeaveResult(leave);
                    }
                }
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_8")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=60, end=132, index=1)})
    public static Object __loopbody_9(Object[] __env__, Object col_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            CallSite callSite = Invoker.bootstrap("is_collection?", col_element);
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("not", Invoker.bootstrap("is_valid_collection?()", col_element, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)));
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("children()", (MethodHandle)cfr_ldc_9(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
                Boolean bl = Boolean.TRUE;
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("lazy_children?\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)bl));
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_9")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_10(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)child));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_scrapbook_plugin_24021.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_scrapbook_plugin_24021.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_scrapbook_plugin_24021.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_scrapbook_plugin_24021.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_scrapbook_plugin_24021.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_scrapbook_plugin_24021.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_scrapbook_plugin_24021.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_scrapbook_plugin_24021.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_8() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_scrapbook_plugin_24021.class, "__loopbody_9", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_9() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_scrapbook_plugin_24021.class, "__loopbody_10", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_model_scrapbook_plugin_24021;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_model_scrapbook_plugin_24020
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_model_scrapbook_plugin_24020() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model_plugins/explorer_model_scrapbook_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_model_scrapbook_plugin"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "scrapbook"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_element"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "writing_to_scrapbook?"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_model_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_scrapbook_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "post_init_plugins()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__post_init_plugins", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "current_set_element", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__current_set_element_", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "saved_sets_element", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__saved_sets_element_", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "explorer_element_for()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__explorer_element_for", 5, 5, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "children_for_explorer_element()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__children_for_explorer_element", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "setup_explorer_elements()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__setup_explorer_elements", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "note_change()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__note_change", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "sw_databus_data_requested()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__sw_databus_data_requested", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "action_allowed?()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__action_allowed?", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "do_action()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__do_action", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "start_move_action_allowed?()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__start_move_action_allowed?", 4, 4);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "end_move_action_allowed?()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__end_move_action_allowed?", 4, 4);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "do_move_action()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__do_move_action", 4, 4);
        MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "terminate()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__terminate", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_model_scrapbook_plugin", "database_changed()", explorer_model_scrapbook_plugin_24021.class, "explorer_model_scrapbook_plugin__database_changed", 2, 2));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_model_application_rwo_sets_plugin_24047 {
    @SourceHash(value=-272104110)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_application_rwo_sets_plugin__post_init_plugins(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_elements()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sorted_collection"), Integer.valueOf(5), ConstantBuilder.procWithEmptyEnvBootstrap("proc", (Class<?>)explorer_model_application_rwo_sets_plugin_24047.class, "proc___", "", 3, 3, 0, 0))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_application_rwo_sets_plugin__post_init_plugins")
    @SourceHash(value=1386792948)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    public static Object proc___(Object _self, Object a, Object b) {
        return BinaryDispatcher.bootstrap("cf", Invoker.bootstrap("lowercase", Invoker.bootstrap("name", a)), Invoker.bootstrap("lowercase", Invoker.bootstrap("name", b)));
    }

    @SourceHash(value=-1868102916)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_application_rwo_sets_plugin__rwo_set_info(Object _self, Object data) {
        ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
        Object[] info = resultTuple.remainder(2);
        Object rwo_set = resultTuple.pop();
        Object owner = resultTuple.pop();
        CallSite props = Invoker.bootstrap("new_from_gathered()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), info);
        CallSite name = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", props, ConstantBuilder.symbolBootstrap("symbol", "name")), Invoker.bootstrap("write_string", owner));
        CallSite group_name = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", props, ConstantBuilder.symbolBootstrap("symbol", "group_name")), name);
        CallSite mod_name = Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_application_rwo_sets_plugin"));
        CallSite image = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", props, ConstantBuilder.symbolBootstrap("symbol", "image")), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_explorer"), mod_name));
        CallSite group_image = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", props, ConstantBuilder.symbolBootstrap("symbol", "group_image")), image);
        CallSite keep = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", props, ConstantBuilder.symbolBootstrap("symbol", "keep")), Integer.valueOf(0));
        CallSite ace_name = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", props, ConstantBuilder.symbolBootstrap("symbol", "ace_name")), Invoker.bootstrapPrivate("default_ace_name()", (Object)_self));
        return TupleBuilder.bootstrap("tb", owner, rwo_set, group_name, group_image, name, image, keep, ace_name);
    }

    @SourceHash(value=-2044298706)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=44, end=149, index=0), @EnvVar(name="existing_names", type=Object.class, start=53, end=149, index=1), @EnvVar(name="owner", type=Object.class, start=15, end=311, index=2), @EnvVar(name="__return_catcher__", type=Object[].class, start=30, end=311, index=3)})
    public static Object explorer_model_application_rwo_sets_plugin__add_group_element(Object _self, Object owner, Object name, Object image, Object parent) {
        CallSite callSite;
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)owner, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)3);
        try {
            if (parent == null) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self)));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "equality_set")), (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self)));
                name = Invoker.bootstrapPrivate("get_unique_name()", (Object)_self, (Object)name, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
            } else {
                name = Invoker.bootstrapPrivate("get_unique_name_for_parent()", (Object)_self, (Object)name, (Object)parent);
            }
            CallSite new_element = Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), _self, ConstantBuilder.symbolBootstrap("symbol", "name"), name, ConstantBuilder.symbolBootstrap("symbol", "image"), image, ConstantBuilder.symbolBootstrap("symbol", "user_data"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "parent"), parent, ConstantBuilder.symbolBootstrap("symbol", "column_headings"), VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "name"))), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name")), ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(475)));
            if (parent == null) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), (Object)new_element));
            }
            callSite = new_element;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).getReturnResult(return_);
        }
        return callSite;
    }

    @Parent(method="explorer_model_application_rwo_sets_plugin__add_group_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("user_data", element), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).makeReturn(element);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_application_rwo_sets_plugin__add_group_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("name", element)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-364995532)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=234, end=301, index=0), @EnvVar(name="owner_element", type=Object.class, start=46, end=449, index=4), @EnvVar(name="rwo_set", type=Object.class, start=38, end=449, index=3), @EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=449, index=2), @EnvVar(name="ace_name", type=Object.class, start=22, end=449, index=1), @EnvVar(name="_self", type=Object.class, start=14, end=450, index=5)})
    public static Object explorer_model_application_rwo_sets_plugin__add_rwo_set(Object _self, Object data) {
        Object[] __env__ = new Object[7];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)4);
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_set_info()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)data));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple.pop(), (Object[])__env__, (int)1);
        Object keep = resultTuple.pop();
        Object image = resultTuple.pop();
        Object name = resultTuple.pop();
        Object group_image = resultTuple.pop();
        Object group_name = resultTuple.pop();
        EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple.pop(), (Object[])__env__, (int)3);
        Object owner = resultTuple.pop();
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("add_group_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)owner, (Object)group_name, (Object)group_image), (Object[])__env__, (int)4);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("upto()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)1, (Object)BinaryDispatcher.bootstrap("+", BinaryDispatcher.bootstrap("-", Invoker.bootstrap("number_of_children", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), keep), Integer.valueOf(1))));
        if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", keep, Integer.valueOf(1)))) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)Invoker.bootstrap("children", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("add_group_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)owner, (Object)name, (Object)image, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object[])__env__, (int)4);
        } else {
            Object object = group_name;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("name\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)object));
            object = group_image;
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("image\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)object));
        }
        CallSite all_collections = Invoker.bootstrap("as_sorted_collection()", Invoker.bootstrap("all_collections()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), ConstantBuilder.procWithEmptyEnvBootstrap("proc", (Class<?>)explorer_model_application_rwo_sets_plugin_24047.class, "proc___2", "", 3, 3, 0, 0));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)all_collections));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), (Object)VectorBuilder.bootstrap("vb", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_application_rwo_sets_plugin__add_rwo_set")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="a_child", type=Object[].class, start=40, end=72, index=6)})
    public static Object __loopbody_3(Object[] __env__) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            CallSite callSite = Invoker.bootstrap("an_element()", Invoker.bootstrap("children", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)6);
            if (callSite != null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_application_rwo_sets_plugin__add_rwo_set")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_4(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_collection?", child))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)child));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_application_rwo_sets_plugin__add_rwo_set")
    @SourceHash(value=-445455372)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    public static Object proc___2(Object _self, Object a, Object b) {
        return BinaryDispatcher.bootstrap("cf", Invoker.bootstrap("external_name", a), Invoker.bootstrap("external_name", b));
    }

    @Parent(method="explorer_model_application_rwo_sets_plugin__add_rwo_set")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_5(Object[] __env__, Object collection) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            CallSite col_rwo_set = Invoker.bootstrap("select()", Invoker.bootstrap("select()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), ConstantBuilder.symbolBootstrap("symbol", "collection"), VectorBuilder.bootstrap("vb", Invoker.bootstrap("name", collection))), ConstantBuilder.symbolBootstrap("symbol", "dataset"), VectorBuilder.bootstrap("vb", Invoker.bootstrap("dataset", collection)));
            CallSite external_name = Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "add_dataset_name"), (Object)Invoker.bootstrap("external_name", collection), (Object)Invoker.bootstrap("external_name", Invoker.bootstrap("dataset", collection)));
            if (Invoker.bootstrap("name", collection) == null) {
                external_name = Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "transient_external_name"));
            }
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)external_name, (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ConstantBuilder.symbolBootstrap("symbol", "ace_name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "lazy_record_collection"), col_rwo_set)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=2107415513)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_application_rwo_sets_plugin__sw_databus_data_requested(Object _self, Object data_type_name) {
        if (data_type_name == ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) {
            return VectorBuilder.bootstrap("vb", _self, Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=2049015234)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_application_rwo_sets_plugin__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block0: {
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "application_rwo_set")) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_rwo_set()", (Object)_self, (Object)data));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1088804441)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_application_rwo_sets_plugin__show_on(Object _self, Object a_stream) {
        return Invoker.superNaturalBootstrap("show_on()", "plugin", "sw", (Object)_self, (Object)a_stream);
    }

    @SourceHash(value=1054193774)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=210, end=240, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=21, end=309, index=1)})
    public static Object explorer_model_application_rwo_sets_plugin__action_allowed?(Object _self, Object action, Object source_element, Object records) {
        Object object;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            boolean bl = MagikObjectUtils.is(action, ConstantBuilder.symbolBootstrap("symbol", "delete"));
            Boolean bl2 = new Boolean(bl);
            if (!bl) {
                bl2 = new Boolean(MagikObjectUtils.is(action, ConstantBuilder.symbolBootstrap("symbol", "rename")));
            }
            if (MagikObjectUtils.should_be_boolean(bl2)) {
                boolean bl3 = MagikObjectUtils.isnt(Invoker.bootstrap("index_of()", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), Invoker.bootstrap("parent", source_element)), null);
                object = new Boolean(bl3);
                if (bl3) {
                    object = BinaryDispatcher.bootstrap("or", Invoker.bootstrap("is_group?", source_element), Invoker.bootstrap("is_collection?", source_element));
                }
            } else {
                if (action == ConstantBuilder.symbolBootstrap("symbol", "delete_all")) {
                    Object object2;
                    boolean bl4 = MagikObjectUtils.isnt(Invoker.bootstrap("index_of()", Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)_self), source_element), null);
                    Object object3 = new Boolean(bl4);
                    if (bl4) {
                        object3 = object2 = Invoker.bootstrap("is_group?", source_element);
                    }
                    if (MagikObjectUtils.should_be_boolean(object3)) {
                        object2 = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", Invoker.bootstrap("children", source_element)), Integer.valueOf(0));
                    }
                    if (MagikObjectUtils.should_be_boolean(object2)) {
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("children()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)source_element));
                        return Boolean.TRUE;
                    }
                    return Boolean.FALSE;
                }
                if (action == ConstantBuilder.symbolBootstrap("symbol", "delete_records")) {
                    boolean bl5 = MagikObjectUtils.isnt(records, null);
                    object = new Boolean(bl5);
                    if (bl5) {
                        object = Invoker.bootstrap("not", Invoker.bootstrap("empty?", records));
                    }
                } else {
                    object = Boolean.FALSE;
                }
            }
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return object;
    }

    @Parent(method="explorer_model_application_rwo_sets_plugin__action_allowed?")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_6(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("not", Invoker.bootstrap("is_group?", child));
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("not", Invoker.bootstrap("is_collection?", child));
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(Boolean.FALSE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1025068490)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_application_rwo_sets_plugin__start_move_action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        block0: {
            if (action != ConstantBuilder.symbolBootstrap("symbol", "move")) break block0;
            action = ConstantBuilder.symbolBootstrap("symbol", "copy");
        }
        return TupleBuilder.bootstrap("tb", Boolean.TRUE, action);
    }

    @SourceHash(value=1848884727)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=67, index=1), @EnvVar(name="_self", type=Object.class, start=13, end=68, index=3), @EnvVar(name="database", type=Object.class, start=21, end=68, index=2)})
    public static Object explorer_model_application_rwo_sets_plugin__database_changed(Object _self, Object database) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)database, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_application_rwo_sets_plugin__database_changed")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=90, index=0)})
    public static Object __loopbody_7(Object[] __env__, Object top) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("breadth_first()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)top));
            if (MagikObjectUtils.is(Invoker.bootstrap("number_of_children", top), 0)) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove()", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object)top));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_7")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_8(Object[] __env__, Object col_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("is_collection?", col_element);
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("not", Invoker.bootstrap("is_valid_collection?()", col_element, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                if (MagikObjectUtils.is(Invoker.bootstrap("number_of_children", Invoker.bootstrap("parent", col_element)), 1)) {
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)Invoker.bootstrap("parent", col_element)));
                }
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)col_element));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_application_rwo_sets_plugin_24047.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_application_rwo_sets_plugin_24047.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_application_rwo_sets_plugin_24047.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_application_rwo_sets_plugin_24047.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_application_rwo_sets_plugin_24047.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_application_rwo_sets_plugin_24047.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_application_rwo_sets_plugin_24047.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_application_rwo_sets_plugin_24047.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_model_application_rwo_sets_plugin_24047;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_model_application_rwo_sets_plugin_24046
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_model_application_rwo_sets_plugin_24046() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model_plugins/explorer_model_application_rwo_sets_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_model_application_rwo_sets_plugin"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_model_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_application_rwo_sets_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_application_rwo_sets_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "application_rwo_set")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_model_application_rwo_sets_plugin", "post_init_plugins()", explorer_model_application_rwo_sets_plugin_24047.class, "explorer_model_application_rwo_sets_plugin__post_init_plugins", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_application_rwo_sets_plugin", "rwo_set_info()", explorer_model_application_rwo_sets_plugin_24047.class, "explorer_model_application_rwo_sets_plugin__rwo_set_info", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_application_rwo_sets_plugin", "add_group_element()", explorer_model_application_rwo_sets_plugin_24047.class, "explorer_model_application_rwo_sets_plugin__add_group_element", 5, 4, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_application_rwo_sets_plugin", "add_rwo_set()", explorer_model_application_rwo_sets_plugin_24047.class, "explorer_model_application_rwo_sets_plugin__add_rwo_set", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_application_rwo_sets_plugin", "sw_databus_data_requested()", explorer_model_application_rwo_sets_plugin_24047.class, "explorer_model_application_rwo_sets_plugin__sw_databus_data_requested", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_application_rwo_sets_plugin", "sw_databus_data_available()", explorer_model_application_rwo_sets_plugin_24047.class, "explorer_model_application_rwo_sets_plugin__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_model_application_rwo_sets_plugin", "show_on()", explorer_model_application_rwo_sets_plugin_24047.class, "explorer_model_application_rwo_sets_plugin__show_on", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_application_rwo_sets_plugin", "action_allowed?()", explorer_model_application_rwo_sets_plugin_24047.class, "explorer_model_application_rwo_sets_plugin__action_allowed?", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_application_rwo_sets_plugin", "start_move_action_allowed?()", explorer_model_application_rwo_sets_plugin_24047.class, "explorer_model_application_rwo_sets_plugin__start_move_action_allowed?", 4, 4);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_model_application_rwo_sets_plugin", "database_changed()", explorer_model_application_rwo_sets_plugin_24047.class, "explorer_model_application_rwo_sets_plugin__database_changed", 2, 2));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_model_map_selection_plugin_24076 {
    @SourceHash(value=148413270)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_map_selection_plugin__post_init_plugins(Object _self) {
        block0: {
            CallSite mod_name = Invoker.bootstrap("module_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_map_selection_plugin"));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_top_element()", (Object)_self, (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), _self, ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "map_selection")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_map_selection"), mod_name), ConstantBuilder.symbolBootstrap("symbol", "column_headings"), VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "name"))), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name")), ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(475)))));
            if (!MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrapPrivate("keep", (Object)_self), Integer.valueOf(0)))) break block0;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)Invoker.bootstrapPrivate("$slot_get_top_element()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "key"), (Object)ConstantBuilder.symbolBootstrap("symbol", "current"), (Object)ConstantBuilder.symbolBootstrap("symbol", "user_data"), (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "date_time_now")), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "current_name")), (Object)ConstantBuilder.symbolBootstrap("symbol", "image"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_map_selection"), mod_name), (Object)ConstantBuilder.symbolBootstrap("symbol", "column_headings"), (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "name"))), (Object)ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name")), (Object)ConstantBuilder.symbolBootstrap("symbol", "column_widths"), (Object)VectorBuilder.bootstrap("vb", Integer.valueOf(475))));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-653093810)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_map_selection_plugin__sw_databus_data_requested(Object _self, Object data_type_name) {
        if (data_type_name == ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) {
            return VectorBuilder.bootstrap("vb", _self, VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("$slot_get_top_element()", (Object)_self)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1619456589)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=114, end=351, index=0), @EnvVar(name="stored_element", type=Object[].class, start=286, end=354, index=9), @EnvVar(name="current_element", type=Object[].class, start=87, end=474, index=10), @EnvVar(name="__dynamic_frame__", type=Object.class, start=538, end=647, index=5), @EnvVar(name="ace_name", type=Object.class, start=556, end=647, index=7), @EnvVar(name="rwo_set", type=Object.class, start=547, end=647, index=6), @EnvVar(name="__dynamic_frame__", type=Object.class, start=24, end=685, index=8), @EnvVar(name="previous_children", type=Object[].class, start=526, end=686, index=13), @EnvVar(name="_self", type=Object.class, start=15, end=686, index=11), @EnvVar(name="current_element", type=Object[].class, start=495, end=686, index=10)})
    public static Object explorer_model_map_selection_plugin__add_group_for_map_selection(Object _self, Object geometry_set) {
        Object[] __env__ = new Object[15];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)11);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)8);
        if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrapPrivate("keep", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11)), Integer.valueOf(0)))) {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrap("children", Invoker.bootstrapPrivate("$slot_get_top_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11))), Integer.valueOf(1)), (Object[])__env__, (int)10);
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("children?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10)))) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"), ConstantBuilder.symbolBootstrap("symbol", "owner"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11), ConstantBuilder.symbolBootstrap("symbol", "key"), Invoker.bootstrap("user_data", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10)), ConstantBuilder.symbolBootstrap("symbol", "name"), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11), (Object)ConstantBuilder.symbolBootstrap("symbol", "stored_name"), (Object)Invoker.bootstrap("user_data", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10))), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_stored_map_selection"), Invoker.bootstrapPrivate("module_name", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11))), ConstantBuilder.symbolBootstrap("symbol", "column_headings"), VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"))), ConstantBuilder.symbolBootstrap("symbol", "visible_field_names"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "name")), ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(475))), (Object[])__env__, (int)9);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_child()", (Object)Invoker.bootstrapPrivate("$slot_get_top_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9), (Object)2));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10)));
            }
            CallSite callSite = ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "date_time_now"));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("user_data\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), (Object)callSite));
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("number_of_children", Invoker.bootstrapPrivate("$slot_get_top_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11))), BinaryDispatcher.bootstrap("+", Invoker.bootstrapPrivate("keep", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11)), Integer.valueOf(1))))) {
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)Invoker.bootstrap("last", Invoker.bootstrap("children", Invoker.bootstrapPrivate("$slot_get_top_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11))))));
            }
        } else {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("$slot_get_top_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11)), (Object[])__env__, (int)10);
        }
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new_from()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "set"), Invoker.bootstrap("children", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10))), (Object[])__env__, (int)13);
        if (geometry_set != null) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)5);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)6);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)7);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("source_records_rwo_set()", geometry_set), (Object[])__env__, (int)6);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("write_string", Invoker.bootstrap("name", Invoker.bootstrap("ace", Invoker.bootstrap("ace_control", Invoker.bootstrapPrivate("framework", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11)))))), (Object[])__env__, (int)7);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)5);
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrap("all_collections()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6))));
        }
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)8);
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_map_selection_plugin__add_group_for_map_selection")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11), (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)9), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)Invoker.bootstrap("name", child), (Object)ConstantBuilder.symbolBootstrap("symbol", "ace_name"), (Object)Invoker.bootstrap("ace_name", child), (Object)ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), (Object)Invoker.bootstrap("rwo_set", child)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_model_map_selection_plugin__add_group_for_map_selection")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="this_rwo_set", type=Object.class, start=30, end=230, index=2), @EnvVar(name="__dynamic_frame__", type=Object.class, start=38, end=230, index=3), @EnvVar(name="__leave_catcher__", type=Object[].class, start=95, end=236, index=14), @EnvVar(name="collection", type=Object.class, start=8, end=242, index=4)})
    public static Object __loopbody_2(Object[] __env__, Object collection) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)collection, (Object[])__env__, (int)4);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("select()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), ConstantBuilder.symbolBootstrap("symbol", "collection"), VectorBuilder.bootstrap("vb", Invoker.bootstrap("name", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)))), (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)14);
            try {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13)));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_collection_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)Invoker.bootstrap("external_name", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object)ConstantBuilder.symbolBootstrap("symbol", "parent"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)10), (Object)ConstantBuilder.symbolBootstrap("symbol", "ace_name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), (Object)ConstantBuilder.symbolBootstrap("symbol", "rwo_set"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            }
            catch (LeaveCatcher.Leave leave) {
                ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)14))).getLeaveResult(leave);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_2")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=231, index=1), @EnvVar(name="previous_collection", type=Object[].class, start=88, end=237, index=12), @EnvVar(name="__leave_catcher__", type=Object[].class, start=37, end=237, index=14)})
    public static Object __loopbody_3(Object[] __env__, Object previous_child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            Object object;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)14);
            try {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
                object = Invoker.bootstrap("collections()", cfr_ldc_4(), __env__, previous_child);
            }
            catch (LeaveCatcher.Leave leave) {
                Object object2;
                object = object2 = ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)14))).getLeaveResult(leave).pop();
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)object, (Object[])__env__, (int)12);
            if (MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)12), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))) {
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("ace_name\\l\\l", (Object)previous_child, (Object)callSite));
                callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("rwo_set\\l\\l", (Object)previous_child, (Object)callSite));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)13), (Object)previous_child));
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11), (Object)ConstantBuilder.symbolBootstrap("symbol", "refresh"), (Object)Invoker.bootstrapPrivate("$slot_get_top_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)11))));
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)14))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_3")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_4(Object[] __env__, Object pc) {
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)14))).makeLeave(TupleBuilder.bootstrap("tb", pc));
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
    }

    @Parent(method="explorer_model_map_selection_plugin__add_group_for_map_selection")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_5(Object[] __env__, Object previous_child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)8)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)previous_child));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1856537942)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_map_selection_plugin__add_map_selection(Object _self, Object geometry_set) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_group_for_map_selection()", (Object)_self, (Object)geometry_set));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_changed_explorer_elements()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=248843627)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="gs", type=Object.class, start=34, end=90, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=42, end=90, index=0)})
    public static Object explorer_model_map_selection_plugin__geometry_set_for(Object _self, Object data) {
        Object object;
        Object[] __env__ = new Object[2];
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_kind_of?()", data, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "geometry_set_mixin")))) {
            object = data;
        } else {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "geometry_set")), (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)data));
            object = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
        }
        return object;
    }

    @Parent(method="explorer_model_map_selection_plugin__geometry_set_for")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_6(Object[] __env__, Object geometry) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)geometry));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-887176673)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_map_selection_plugin__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block1: {
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "application_map_selection")) break block1;
            if (Invoker.bootstrapPrivate("$slot_get_map_selection_owner()", (Object)_self) != null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_dependent()", (Object)Invoker.bootstrapPrivate("$slot_get_map_selection_owner()", (Object)_self), (Object)_self));
            }
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
            Object a_geom_set = resultTuple.pop();
            Object object = resultTuple.pop();
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_map_selection_owner()", (Object)_self, (Object)object));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_map_selection()", (Object)_self, (Object)Invoker.bootstrapPrivate("geometry_set_for()", (Object)_self, (Object)a_geom_set)));
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_dependent()", (Object)Invoker.bootstrapPrivate("$slot_get_map_selection_owner()", (Object)_self), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "selection_content")));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-217364383)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_map_selection_plugin__show_on(Object _self, Object a_stream) {
        return Invoker.superNaturalBootstrap("show_on()", "plugin", "sw", (Object)_self, (Object)a_stream);
    }

    @SourceHash(value=-571348649)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_map_selection_plugin__action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        Boolean bl;
        boolean bl2 = MagikObjectUtils.is(action, ConstantBuilder.symbolBootstrap("symbol", "delete"));
        Boolean bl3 = new Boolean(bl2);
        if (!bl2) {
            bl3 = new Boolean(MagikObjectUtils.is(action, ConstantBuilder.symbolBootstrap("symbol", "rename")));
        }
        if (MagikObjectUtils.should_be_boolean(bl3)) {
            boolean bl4 = MagikObjectUtils.is(Invoker.bootstrap("parent", source_element), Invoker.bootstrapPrivate("$slot_get_top_element()", (Object)_self));
            Object object = new Boolean(bl4);
            if (bl4) {
                object = bl = Invoker.bootstrap("is_group?", source_element);
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                bl = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("index_of_child()", Invoker.bootstrapPrivate("$slot_get_top_element()", (Object)_self), source_element), 1));
            }
        } else {
            bl = action == ConstantBuilder.symbolBootstrap("symbol", "delete_records") ? Boolean.TRUE : Boolean.FALSE;
        }
        return bl;
    }

    @SourceHash(value=2013579566)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_map_selection_plugin__start_move_action_allowed?(Object _self, Object action, Object source_element, Object target_element) {
        block0: {
            if (action != ConstantBuilder.symbolBootstrap("symbol", "move")) break block0;
            action = ConstantBuilder.symbolBootstrap("symbol", "copy");
        }
        return TupleBuilder.bootstrap("tb", Boolean.TRUE, action);
    }

    @SourceHash(value=1916592274)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=53, index=1), @EnvVar(name="database", type=Object.class, start=13, end=54, index=2)})
    public static Object explorer_model_map_selection_plugin__database_changed(Object _self, Object database) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)database, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("children()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_top_element()", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_model_map_selection_plugin__database_changed")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=49, index=0)})
    public static Object __loopbody_7(Object[] __env__, Object top) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("breadth_first()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)top));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_7")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_8(Object[] __env__, Object col_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("is_collection?", col_element);
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("not", Invoker.bootstrap("is_valid_collection?()", col_element, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("detach()", (Object)col_element));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1253693343)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_model_map_selection_plugin__note_change(Object _self, Object who, Object what, Object ... data) {
        block0: {
            if (what != ConstantBuilder.symbolBootstrap("symbol", "selection_content")) break block0;
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
            resultTuple.pop();
            Object geom_set = resultTuple.pop();
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_map_selection()", (Object)_self, (Object)Invoker.bootstrapPrivate("geometry_set_for()", (Object)_self, (Object)geom_set)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_map_selection_plugin_24076.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_map_selection_plugin_24076.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_map_selection_plugin_24076.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_map_selection_plugin_24076.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_map_selection_plugin_24076.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_map_selection_plugin_24076.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_map_selection_plugin_24076.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_model_map_selection_plugin_24076.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_model_map_selection_plugin_24076;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_model_map_selection_plugin_24075
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_model_map_selection_plugin_24075() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/model_plugins/explorer_model_map_selection_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_model_map_selection_plugin"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "top_element"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "map_selection_owner"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_model_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_map_selection_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "keep"), (Object)ConstantBuilder.symbolBootstrap("symbol", "integer"), (Object)ConstantBuilder.stringBootstrap("string", "indicates how many selections to keep"), null, null, (Object)0));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_map_selection_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), ConstantBuilder.symbolBootstrap("symbol", "refresh")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_model_map_selection_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "application_map_selection")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_model_map_selection_plugin", "post_init_plugins()", explorer_model_map_selection_plugin_24076.class, "explorer_model_map_selection_plugin__post_init_plugins", 1, 1);
        MagikObjectUtils.createMethod("explorer_model_map_selection_plugin", "sw_databus_data_requested()", explorer_model_map_selection_plugin_24076.class, "explorer_model_map_selection_plugin__sw_databus_data_requested", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_map_selection_plugin", "add_group_for_map_selection()", explorer_model_map_selection_plugin_24076.class, "explorer_model_map_selection_plugin__add_group_for_map_selection", 2, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_map_selection_plugin", "add_map_selection()", explorer_model_map_selection_plugin_24076.class, "explorer_model_map_selection_plugin__add_map_selection", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_map_selection_plugin", "geometry_set_for()", explorer_model_map_selection_plugin_24076.class, "explorer_model_map_selection_plugin__geometry_set_for", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_model_map_selection_plugin", "sw_databus_data_available()", explorer_model_map_selection_plugin_24076.class, "explorer_model_map_selection_plugin__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_model_map_selection_plugin", "show_on()", explorer_model_map_selection_plugin_24076.class, "explorer_model_map_selection_plugin__show_on", 2, 2);
        MagikObjectUtils.createMethod("explorer_model_map_selection_plugin", "action_allowed?()", explorer_model_map_selection_plugin_24076.class, "explorer_model_map_selection_plugin__action_allowed?", 4, 3);
        MagikObjectUtils.createMethod("explorer_model_map_selection_plugin", "start_move_action_allowed?()", explorer_model_map_selection_plugin_24076.class, "explorer_model_map_selection_plugin__start_move_action_allowed?", 4, 4);
        MagikObjectUtils.createMethod("explorer_model_map_selection_plugin", "database_changed()", explorer_model_map_selection_plugin_24076.class, "explorer_model_map_selection_plugin__database_changed", 2, 2);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_model_map_selection_plugin", "note_change()", explorer_model_map_selection_plugin_24076.class, "explorer_model_map_selection_plugin__note_change", 4, 3));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.Cloner;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.LoopBodyInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_selection_24129 {
    @SourceHash(value=-1751576073)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_selection__new(Object _self, Object explorer_elements, Object object, Object records) {
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("init()", (Object)Cloner.makeClone(Cloner.makeClone(_self)), (Object)explorer_elements, (Object)object, (Object)records));
    }

    @SourceHash(value=2020938051)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_selection__init(Object _self, Object explorer_elements, Object object, Object records) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_elements()", (Object)_self, (Object)explorer_elements));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_activated?()", (Object)_self, (Object)object));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_records()", (Object)_self, (Object)records));
        return _self;
    }

    @SourceHash(value=-1651826376)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_selection__owner_(Object _self) {
        CallSite element = Invoker.bootstrapPrivate("an_explorer_element()", (Object)_self);
        return element != null ? (ResultTuple)((Object)Invoker.tupleBootstrap("owner", (Object)element)) : null;
    }

    @SourceHash(value=1850537584)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_selection__is_empty?_(Object _self) {
        Boolean bl;
        boolean bl2 = MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self), null);
        Boolean bl3 = new Boolean(bl2);
        if (!bl2) {
            bl3 = bl = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)), 0));
        }
        if (!MagikObjectUtils.should_be_boolean(bl3)) {
            boolean bl4 = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self), null);
            bl = new Boolean(bl4);
            if (bl4) {
                bl = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self)), 0));
            }
        }
        return bl;
    }

    @SourceHash(value=1596876480)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_selection__is_groups?_(Object _self) {
        boolean bl = MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self), null);
        Object object = new Boolean(bl);
        if (bl && !MagikObjectUtils.should_be_boolean(object = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)), Integer.valueOf(1)))) {
            object = Invoker.bootstrap("is_group?", Invoker.bootstrap("an_element()", Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)));
        }
        return object;
    }

    @SourceHash(value=2117529821)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_selection__is_group?_(Object _self) {
        boolean bl = MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self), null);
        Object object = new Boolean(bl);
        if (bl) {
            boolean bl2 = MagikObjectUtils.is(Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)), 1);
            object = new Boolean(bl2);
            if (bl2) {
                object = Invoker.bootstrap("is_group?", Invoker.bootstrap("an_element()", Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)));
            }
        }
        return object;
    }

    @SourceHash(value=836414852)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_selection__is_collection?_(Object _self) {
        boolean bl = MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self), null);
        Object object = new Boolean(bl);
        if (bl) {
            boolean bl2 = MagikObjectUtils.is(Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)), 1);
            object = new Boolean(bl2);
            if (bl2) {
                object = Invoker.bootstrap("is_collection?", Invoker.bootstrap("an_element()", Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)));
            }
        }
        return object;
    }

    @SourceHash(value=-156094434)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_selection__is_records?_(Object _self) {
        boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self), null);
        Object object = new Boolean(bl);
        if (bl) {
            object = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self)), Integer.valueOf(0));
        }
        return object;
    }

    @SourceHash(value=-234031874)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_selection__is_record?_(Object _self) {
        boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self), null);
        Boolean bl2 = new Boolean(bl);
        if (bl) {
            bl2 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self)), 1));
        }
        return bl2;
    }

    @SourceHash(value=1817881147)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=58, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=77, index=1)})
    public static Object explorer_selection__has_geometry?_(Object _self) {
        Boolean bl;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)));
            bl = Boolean.FALSE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_selection__has_geometry?_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("has_geometry?", element))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(Boolean.TRUE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=858581171)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_selection__notify_input?_(Object _self) {
        CallSite callSite = Invoker.bootstrapPrivate("is_group?", (Object)_self);
        if (!MagikObjectUtils.should_be_boolean(callSite)) {
            callSite = Invoker.bootstrapPrivate("is_collection?", (Object)_self);
        }
        return callSite;
    }

    @SourceHash(value=-759318448)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=58, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=77, index=1)})
    public static Object explorer_selection__has_bounds?_(Object _self) {
        Boolean bl;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)));
            bl = Boolean.FALSE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_selection__has_bounds?_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("has_bounds?", element))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(Boolean.TRUE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1095559987)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=61, index=0), @EnvVar(name="__loopbody__", type=Object.class, start=13, end=62, index=1), @EnvVar(name="__loopenv__", type=Object.class, start=21, end=62, index=2)})
    public static Object explorer_selection__explorer_elements(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_selection__explorer_elements")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_3(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)element);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1582054329)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=54, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=73, index=1)})
    public static Object explorer_selection__an_explorer_element(Object _self) {
        ResultTuple resultTuple;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("explorer_elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)_self));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return resultTuple;
    }

    @Parent(method="explorer_selection__an_explorer_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_4(Object[] __env__, Object element) {
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(element);
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
    }

    @SourceHash(value=-1696198210)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="result_collections", type=Object.class, start=37, end=116, index=2), @EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=116, index=1), @EnvVar(name="__loopbody__", type=Object.class, start=13, end=117, index=4), @EnvVar(name="__loopenv__", type=Object.class, start=21, end=117, index=3)})
    public static Object explorer_selection__collections(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_selection__collections")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=49, index=0)})
    public static Object __loopbody_5(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("collections()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)element));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_5")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_6(Object[] __env__, Object collection, Object result_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            Object object = result_element;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)object, (Object)collection));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_selection__collections")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_7(Object[] __env__, Object collection, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object)collection, (Object)element);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=179805240)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=54, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=73, index=1)})
    public static Object explorer_selection__a_collection(Object _self) {
        ResultTuple resultTuple;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("collections()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)_self));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return resultTuple;
    }

    @Parent(method="explorer_selection__a_collection")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_8(Object[] __env__, Object collection) {
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(collection);
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
    }

    @SourceHash(value=65089806)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=174, end=205, index=1), @EnvVar(name="__loopbody__", type=Object.class, start=15, end=209, index=2), @EnvVar(name="collections", type=Object.class, start=33, end=209, index=4), @EnvVar(name="__loopenv__", type=Object.class, start=24, end=209, index=3)})
    public static Object explorer_selection__rwo_sets(MethodHandle __loopbody__, Object[] __loopenv__, Object _self, Object collections) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)collections, (Object[])__env__, (int)4);
        if (Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self) != null) {
            ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_set", (Object)_self));
            Object col = resultTuple.pop();
            Object rs = resultTuple.pop();
            boolean bl = MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), null);
            Object object = new Boolean(bl);
            if (!bl) {
                object = Invoker.bootstrap("includes?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), col);
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object)rs, (Object)col, (Object)Invoker.bootstrap("an_element()", Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)));
            }
        } else {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_8(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_selection__rwo_sets")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=49, index=0)})
    public static Object __loopbody_9(Object[] __env__, Object el) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("valid_rwo_sets()", (MethodHandle)cfr_ldc_9(), (Object[])__env__, (Object)el));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_9")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_10(Object[] __env__, Object rwo_set, Object collection, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            boolean bl = MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), null);
            Object object = new Boolean(bl);
            if (!bl) {
                object = Invoker.bootstrap("includes?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), collection);
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object)rwo_set, (Object)collection, (Object)element);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1793423251)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=301, end=508, index=0), @EnvVar(name="rwo_sets", type=Object.class, start=309, end=508, index=1), @EnvVar(name="_self", type=Object.class, start=13, end=563, index=2)})
    public static Object explorer_selection__rwo_set_(Object _self) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        CallSite result_element = null;
        if (Invoker.bootstrapPrivate("$slot_get_total_rwo_set()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)) == null) {
            boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_records()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), null);
            Boolean bl2 = new Boolean(bl);
            if (!bl) {
                bl2 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))), 1));
            }
            if (MagikObjectUtils.should_be_boolean(bl2)) {
                result_element = Invoker.bootstrap("an_element()", Invoker.bootstrapPrivate("$slot_get_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
                if (Invoker.bootstrapPrivate("$slot_get_records()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)) != null) {
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_rwo_set()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("new_from()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rwo_set"), Invoker.bootstrapPrivate("$slot_get_records()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)))));
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_invalid_elements()", (Object)Invoker.bootstrapPrivate("$slot_get_total_rwo_set()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))));
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_rwo_set_collection()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("an_element()", Invoker.bootstrap("all_collections()", Invoker.bootstrapPrivate("$slot_get_total_rwo_set()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))))));
                } else {
                    ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrap("rwo_set", (Object)result_element));
                    Object object = resultTuple.pop();
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_rwo_set_collection()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)object));
                    object = resultTuple.pop();
                    ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_rwo_set()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)object));
                }
            } else {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_10(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_elements()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))));
                if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), Integer.valueOf(0)))) {
                    ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_rwo_set()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rwo_set"))));
                } else if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), Integer.valueOf(1)))) {
                    ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_rwo_set()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("an_element()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
                } else {
                    ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_rwo_set()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "composite_rwo_set"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
                }
            }
        } else {
            ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_invalid_elements()", (Object)Invoker.bootstrapPrivate("$slot_get_total_rwo_set()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))));
        }
        return TupleBuilder.bootstrap("tb", Invoker.bootstrapPrivate("$slot_get_total_rwo_set()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), Invoker.bootstrapPrivate("$slot_get_total_rwo_set_collection()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), result_element);
    }

    @Parent(method="explorer_selection__rwo_set_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="element_collection", type=Object[].class, start=44, end=137, index=4), @EnvVar(name="element_rwo_set", type=Object[].class, start=51, end=137, index=3)})
    public static Object __loopbody_11(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrap("rwo_set", (Object)element));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)4);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)3);
            if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3) != null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
                if (Invoker.bootstrapPrivate("$slot_get_total_rwo_set_collection()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)) == null) {
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_rwo_set_collection()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
                }
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1761820006)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=43, end=72, index=2), @EnvVar(name="collections", type=Object.class, start=34, end=73, index=5), @EnvVar(name="__loopenv__", type=Object.class, start=25, end=73, index=4), @EnvVar(name="__loopbody__", type=Object.class, start=16, end=73, index=3)})
    public static Object explorer_selection__fast_elements(MethodHandle __loopbody__, Object[] __loopenv__, Object _self, Object collections) {
        Object[] __env__ = new Object[6];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)collections, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_sets()", (MethodHandle)cfr_ldc_11(), (Object[])__env__, (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_selection__fast_elements")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=80, end=104, index=0), @EnvVar(name="collection", type=Object.class, start=8, end=122, index=1)})
    public static Object __loopbody_12(Object[] __env__, Object rs, Object collection) {
        ResultTuple resultTuple;
        EnvAccessor.bootstrapReseter("resetEnv", (Object)collection, (Object[])__env__, (int)1);
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            boolean bl = MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), null);
            Object object = new Boolean(bl);
            if (!bl) {
                object = Invoker.bootstrap("includes?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_12(), (Object[])__env__, (Object)rs));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_12")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_13(Object[] __env__, Object rwo) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object)rwo, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-748415608)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=55, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=74, index=1)})
    public static Object explorer_selection__an_element(Object _self, Object collections) {
        ResultTuple resultTuple;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("fast_elements()", (MethodHandle)cfr_ldc_13(), (Object[])__env__, (Object)_self, (Object)collections));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return resultTuple;
    }

    @Parent(method="explorer_selection__an_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_14(Object[] __env__, Object rwo, Object collection) {
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(TupleBuilder.bootstrap("tb", rwo, collection));
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
    }

    @SourceHash(value=1242792691)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=115, end=202, index=0), @EnvVar(name="total_size", type=Object.class, start=123, end=202, index=1), @EnvVar(name="__leave_catcher__", type=Object[].class, start=148, end=202, index=4), @EnvVar(name="force?", type=Object.class, start=13, end=203, index=2)})
    public static Object explorer_selection__calculated_size(Object _self, Object object, Object object2) {
        Object object3;
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)object, (Object[])__env__, (int)2);
        boolean bl = MagikObjectUtils.is(object2, Boolean.TRUE);
        Boolean bl2 = new Boolean(bl);
        if (bl) {
            boolean bl3 = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self), null);
            bl2 = new Boolean(bl3);
            if (bl3) {
                bl2 = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self)), 0));
            }
        }
        if (MagikObjectUtils.should_be_boolean(bl2)) {
            object3 = (ResultTuple)((Object)Invoker.tupleBootstrap("size", (Object)Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self)));
        } else {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)0, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)4);
            try {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_14(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)));
            }
            catch (LeaveCatcher.Leave leave) {
                ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).getLeaveResult(leave);
            }
            object3 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
        }
        return object3;
    }

    @Parent(method="explorer_selection__calculated_size")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="total_size", type=Object[].class, start=46, end=64, index=1), @EnvVar(name="element_size", type=Object[].class, start=35, end=99, index=3), @EnvVar(name="total_size", type=Object[].class, start=90, end=99, index=1)})
    public static Object __loopbody_15(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("calculated_size()", element, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)3);
            if (callSite == null) {
                EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)1);
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("+", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object[])__env__, (int)1);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1898952230)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=69, index=0), @EnvVar(name="__loopbody__", type=Object.class, start=13, end=70, index=1), @EnvVar(name="__loopenv__", type=Object.class, start=21, end=70, index=2)})
    public static Object explorer_selection__records(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_15(), (Object[])__env__, (Object)Invoker.bootstrap("default()", Invoker.bootstrapPrivate("$slot_get_records()", (Object)_self), VectorBuilder.EMPTY_VECTOR)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_selection__records")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_16(Object[] __env__, Object record) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)record);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1301096319)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=54, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=73, index=1)})
    public static Object explorer_selection__definitely_empty?_(Object _self) {
        Boolean bl;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("rwo_sets()", (MethodHandle)cfr_ldc_16(), (Object[])__env__, (Object)_self));
            bl = Boolean.TRUE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_selection__definitely_empty?_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_17(Object[] __env__, Object rwo_set) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("not", Invoker.bootstrap("size_is_fast?", rwo_set));
            if (!MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", rwo_set), Integer.valueOf(0));
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(Boolean.FALSE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1672680858)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=59, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=78, index=1)})
    public static Object explorer_selection__anonymous_collection?_(Object _self) {
        Boolean bl;
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_17(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_elements()", (Object)_self)));
            bl = Boolean.FALSE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_selection__anonymous_collection?_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_18(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("anonymous_collection?", element))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(Boolean.TRUE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_8() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_9", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_9() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_10", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_10() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_11", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_11() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_12", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_12() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_13", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_13() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_14", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_14() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_15", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_15() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_16", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_16() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_17", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_17() {
        try {
            return MethodHandles.lookup().findStatic(explorer_selection_24129.class, "__loopbody_18", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_selection_24129;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_selection_24128
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_selection_24128() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view/explorer_selection.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_selection"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "elements"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "records"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "activated?"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "total_rwo_set"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "total_rwo_set_collection"), null)));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_selection"), (Object)ConstantBuilder.symbolBootstrap("symbol", "activated?"), (Object)ConstantBuilder.symbolBootstrap("symbol", "read"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_selection", "new()", explorer_selection_24129.class, "explorer_selection__new", 4, 3);
        MagikObjectUtils.createMethod("explorer_selection", "init()", explorer_selection_24129.class, "explorer_selection__init", 4, 4, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_selection", "owner", explorer_selection_24129.class, "explorer_selection__owner_", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "is_empty?", explorer_selection_24129.class, "explorer_selection__is_empty?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "is_groups?", explorer_selection_24129.class, "explorer_selection__is_groups?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "is_group?", explorer_selection_24129.class, "explorer_selection__is_group?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "is_collection?", explorer_selection_24129.class, "explorer_selection__is_collection?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "is_records?", explorer_selection_24129.class, "explorer_selection__is_records?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "is_record?", explorer_selection_24129.class, "explorer_selection__is_record?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "has_geometry?", explorer_selection_24129.class, "explorer_selection__has_geometry?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "notify_input?", explorer_selection_24129.class, "explorer_selection__notify_input?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "has_bounds?", explorer_selection_24129.class, "explorer_selection__has_bounds?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "explorer_elements()", explorer_selection_24129.class, "explorer_selection__explorer_elements", 3, 3, true, false, false, 0);
        MagikObjectUtils.createMethod("explorer_selection", "an_explorer_element()", explorer_selection_24129.class, "explorer_selection__an_explorer_element", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "collections()", explorer_selection_24129.class, "explorer_selection__collections", 3, 3, true, false, false, 0);
        MagikObjectUtils.createMethod("explorer_selection", "a_collection()", explorer_selection_24129.class, "explorer_selection__a_collection", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "rwo_sets()", explorer_selection_24129.class, "explorer_selection__rwo_sets", 4, 3, true, false, false, 0);
        MagikObjectUtils.createMethod("explorer_selection", "rwo_set", explorer_selection_24129.class, "explorer_selection__rwo_set_", 1, 1);
        MagikObjectUtils.createMethod("explorer_selection", "fast_elements()", explorer_selection_24129.class, "explorer_selection__fast_elements", 4, 3, true, false, false, 0);
        MagikObjectUtils.createMethod("explorer_selection", "an_element()", explorer_selection_24129.class, "explorer_selection__an_element", 2, 1);
        MagikObjectUtils.createMethod("explorer_selection", "calculated_size()", explorer_selection_24129.class, "explorer_selection__calculated_size", 3, 3);
        MagikObjectUtils.createMethod("explorer_selection", "records()", explorer_selection_24129.class, "explorer_selection__records", 3, 3, true, false, false, 0);
        MagikObjectUtils.createMethod("explorer_selection", "definitely_empty?", explorer_selection_24129.class, "explorer_selection__definitely_empty?_", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_selection", "anonymous_collection?", explorer_selection_24129.class, "explorer_selection__anonymous_collection?_", 1, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_view_plugin_mixin_24165 {
    @SourceHash(value=-1755585089)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__current_explorer_element_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("current_explorer_element", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    /*
     * WARNING - void declaration
     */
    @SourceHash(value=-1058981868)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__explorer_selection_(Object _self) {
        void var1_1;
        ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrapPrivate("databus_request_data()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
        resultTuple.pop();
        Object selection = resultTuple.pop();
        return var1_1;
    }

    @SourceHash(value=400965894)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__editor_manager_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("editor_manager", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=1479105562)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__ace_control_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("ace_control", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=1962676020)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__map_trail_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("map_trail", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=-1247635921)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__map_selection_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("map_selection", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=305932361)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__map_world_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("map_world", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=-1831200399)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__notify_selection(Object _self, Object explorer_elements, Object explorer_records) {
        CallSite selection = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_selection"), explorer_elements, Boolean.FALSE, explorer_records);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_pre_selection"), (Object)VectorBuilder.bootstrap("vb", _self, selection)));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_selection"), (Object)VectorBuilder.bootstrap("vb", _self, selection)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1871842796)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__notify_double_click(Object _self, Object an_explorer_element, Object explorer_record) {
        block1: {
            CallSite records = explorer_record != null ? VectorBuilder.bootstrap("vb", explorer_record) : null;
            CallSite selection = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_selection"), VectorBuilder.bootstrap("vb", an_explorer_element), Boolean.TRUE, records);
            CallSite callSite = Invoker.bootstrap("not", Invoker.bootstrap("is_records?", selection));
            if (!MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("not", Invoker.bootstrap("anonymous_collection?", selection));
            }
            if (!MagikObjectUtils.should_be_boolean(callSite)) break block1;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_pre_selection"), (Object)VectorBuilder.bootstrap("vb", _self, selection)));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_selection"), (Object)VectorBuilder.bootstrap("vb", _self, selection)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-295792313)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__model_plugin_with_name(Object _self, Object name) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("model_plugin_with_name()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)name));
    }

    @SourceHash(value=915611802)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=55, end=86, index=0), @EnvVar(name="height", type=Object.class, start=24, end=110, index=2), @EnvVar(name="width", type=Object.class, start=15, end=110, index=1)})
    public static Object explorer_view_plugin_mixin__process_xml_width_height(Object _self, Object xml_element, Object default_width, Object default_height) {
        Object[] __env__;
        block0: {
            __env__ = new Object[3];
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)default_width, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)default_height, (Object[])__env__, (int)2);
            if (xml_element == null) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrap("attributes", xml_element)));
        }
        return TupleBuilder.bootstrap("tb", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2));
    }

    @Parent(method="explorer_view_plugin_mixin__process_xml_width_height")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="width", type=Object[].class, start=44, end=47, index=1), @EnvVar(name="height", type=Object[].class, start=77, end=80, index=2), @EnvVar(name="width", type=Object[].class, start=80, end=89, index=1)})
    public static Object __loopbody_(Object[] __env__, Object key, Object val) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", key, ConstantBuilder.stringBootstrap("string", "width")))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_number()", val), (Object[])__env__, (int)1);
            } else if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", key, ConstantBuilder.stringBootstrap("string", "height")))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_number()", val), (Object[])__env__, (int)2);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=67111504)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=242, index=0), @EnvVar(name="p", type=Object.class, start=21, end=242, index=1)})
    public static Object explorer_view_plugin_mixin__build_panel(Object _self, Object container, Object ... keys_and_args) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "panel"), container), (Object[])__env__, (int)1);
        Comparable<Boolean> comparable = Boolean.TRUE;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("resize_x?\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)comparable));
        comparable = Boolean.TRUE;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("resize_y?\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)comparable));
        comparable = 0;
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("border_width\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)comparable));
        comparable = 0;
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("border_height\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)comparable));
        comparable = 0;
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("width_spacing\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)comparable));
        comparable = 0;
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("height_spacing\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)comparable));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)keys_and_args))));
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
    }

    @Parent(method="explorer_view_plugin_mixin__build_panel")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object key, Object value) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("perform()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("with_chevron", key), (Object)value));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-987101996)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__application_make_data_available(Object _self, Object data_type_name, Object data) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("make_data_available()", (Object)Invoker.bootstrap("databus", Invoker.bootstrapPrivate("application", (Object)_self)), (Object)data_type_name, (Object)data, (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1416374718)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_plugin_mixin__defined_popup_menu_for(Object _self, Object name, Object window) {
        CallSite popup_name = ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), name, ConstantBuilder.stringBootstrap("string", "_popup"));
        return (ResultTuple)((Object)Invoker.tupleBootstrap("popup_for()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)popup_name, (Object)window));
    }

    @SourceHash(value=1731124522)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="4c413ce2-57d4-45f3-9628-4e4fa24d5ae8", type=Object.class, start=41, end=172, index=0), @EnvVar(name="4c413ce2-57d4-45f3-9628-4e4fa24d5ae8", type=Object.class, start=231, end=275, index=0), @EnvVar(name="4c413ce2-57d4-45f3-9628-4e4fa24d5ae8", type=Object.class, start=321, end=323, index=0)})
    public static Object explorer_view_plugin_mixin__run_transaction(Object _self, Object a_transaction) {
        Boolean bl;
        block17: {
            Object[] __env__ = new Object[1];
            bl = Boolean.FALSE;
            try {
                Object object;
                Boolean bl2 = Boolean.TRUE;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("busy?\\l\\l", (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)bl2));
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[0]};
                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_view_plugin_mixin_24165.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray);
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "db_thing_readonly"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "db_prim_error"), callSite2);
                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("run()", (Object)a_transaction));
                            bl = Boolean.TRUE;
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            break block17;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object2;
                        object = object2 = Thrower.checkTag(throw_, callSite).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "db_thing_readonly")))) {
                } else if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "db_prim_error")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            finally {
                InterruptInfrastructure.disableInterrupts();
                try {
                    Boolean bl3 = Boolean.FALSE;
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("busy?\\l\\l", (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)bl3));
                }
                finally {
                    InterruptInfrastructure.enableInterrupts();
                }
            }
        }
        return bl;
    }

    @Parent(method="explorer_view_plugin_mixin__run_transaction")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="4c413ce2-57d4-45f3-9628-4e4fa24d5ae8", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=-1507714829)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=35, end=75, index=1), @EnvVar(name="application", type=Object.class, start=27, end=75, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=94, index=2)})
    public static Object explorer_view_plugin_mixin__has_spatial_contexts_for_selection?(Object _self, Object selection) {
        Boolean bl;
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)2);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("application", (Object)_self), (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)selection));
            bl = Boolean.FALSE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_view_plugin_mixin__has_spatial_contexts_for_selection?")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_3(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("has_spatial_contexts_for?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), element))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeReturn(Boolean.TRUE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_view_plugin_mixin_24165.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_view_plugin_mixin_24165.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_view_plugin_mixin_24165.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_view_plugin_mixin_24165;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_view_plugin_mixin_24164
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_view_plugin_mixin_24164() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view/explorer_view_plugin_mixin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_mixin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_view_plugin_mixin"));
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "current_explorer_element", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__current_explorer_element_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "explorer_selection", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__explorer_selection_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "editor_manager", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__editor_manager_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "ace_control", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__ace_control_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "map_trail", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__map_trail_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "map_selection", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__map_selection_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "map_world", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__map_world_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "notify_selection()", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__notify_selection", 3, 2);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "notify_double_click()", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__notify_double_click", 3, 2);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "model_plugin_with_name()", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__model_plugin_with_name", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "process_xml_width_height()", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__process_xml_width_height", 4, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "build_panel()", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__build_panel", 3, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "application_make_data_available()", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__application_make_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "defined_popup_menu_for()", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__defined_popup_menu_for", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "run_transaction()", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__run_transaction", 2, 2, false, false, true, 0);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_view_plugin_mixin", "has_spatial_contexts_for_selection?()", explorer_view_plugin_mixin_24165.class, "explorer_view_plugin_mixin__has_spatial_contexts_for_selection?", 2, 2, false, false, true, 0));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.LoopBodyInvoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_view_framework_24242 {
    @SourceHash(value=1523357558)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__init_actions(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "refresh"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "refresh")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "refresh_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "refresh_sh")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "refresh"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "refresh()"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "help"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "help")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "help_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "help_sh")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "help"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "help()"))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "exit"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "close")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "close_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "close_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "close()"))));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("init_proxy_actions()", (Object)_self));
        Invoker.superNaturalBootstrap("init_actions()", "gui_framework", "sw", (Object)_self);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-2030861579)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=80, index=1), @EnvVar(name="_self", type=Object.class, start=13, end=81, index=2)})
    public static Object explorer_view_framework__init_proxy_actions(Object _self) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_proxy_action_names()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "set"))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("plugins()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_view_framework__init_proxy_actions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=49, index=0)})
    public static Object __loopbody_(Object[] __env__, Object plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("actions()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)plugin));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object action) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite action_name = Invoker.bootstrap("name", action);
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("includes?()", Invoker.bootstrapPrivate("$slot_get_proxy_action_names()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), action_name)))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "action_proxy"), action)));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrapPrivate("$slot_get_proxy_action_names()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)action_name));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-49095786)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=117, end=152, index=1), @EnvVar(name="plugin", type=Object.class, start=21, end=159, index=2), @EnvVar(name="_self", type=Object.class, start=13, end=159, index=3)})
    public static Object explorer_view_framework__refresh_proxy_actions(Object _self, Object plugin) {
        block2: {
            Boolean bl;
            Object[] __env__ = new Object[4];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
            EnvAccessor.bootstrapReseter("resetEnv", (Object)plugin, (Object[])__env__, (int)2);
            boolean bl2 = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_proxy_action_names()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), null);
            Boolean bl3 = new Boolean(bl2);
            if (bl2) {
                bl3 = bl = new Boolean(MagikObjectUtils.isnt(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
            }
            if (MagikObjectUtils.should_be_boolean(bl3)) {
                bl = new Boolean(MagikObjectUtils.isnt(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), null));
            }
            if (!MagikObjectUtils.should_be_boolean(bl)) break block2;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_proxy_action_names()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_view_framework__refresh_proxy_actions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="07dfd693-bb0a-40b5-b308-c6620d6f45fd", type=Object.class, start=22, end=171, index=0), @EnvVar(name="07dfd693-bb0a-40b5-b308-c6620d6f45fd", type=Object.class, start=206, end=215, index=0)})
    public static Object __loopbody_3(Object[] __env__, Object name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            block9: {
                Object object;
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[0]};
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "warning"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_view_framework_24242.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray));
                            CallSite callSite2 = Invoker.bootstrap("action()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), name);
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("real_subject\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)name), (Object)callSite2));
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            break block9;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object2;
                        object = object2 = Thrower.checkTag(throw_, callSite).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_3")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="07dfd693-bb0a-40b5-b308-c6620d6f45fd", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=-855030303)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__manage(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("make_visible()", (Object)Invoker.bootstrapPrivate("container", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=822638631)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__unmanage(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("unmanage()", (Object)Invoker.bootstrapPrivate("container", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1258447744)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__model\l\l_(Object _self, Object a_model) {
        block2: {
            if (MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_model()", (Object)_self), a_model)) {
                return ResultTuple.EMPTY_TUPLE;
            }
            if (Invoker.bootstrapPrivate("$slot_get_model()", (Object)_self) != null) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_dependent()", (Object)Invoker.bootstrapPrivate("$slot_get_model()", (Object)_self), (Object)_self));
            }
            if (Invoker.bootstrapPrivate("$slot_set_model()", (Object)_self, (Object)a_model) == null) break block2;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_dependent()", (Object)Invoker.bootstrapPrivate("$slot_get_model()", (Object)_self), (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=977918683)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__editor_manager_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("editor_manager", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=-1574575409)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__ace_control_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("ace_control", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=1787846431)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__map_trail_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("map_trail", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=-580730214)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__map_selection_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("map_selection", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=-1424429132)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__map_world_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("map_world", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
    }

    @SourceHash(value=1668718170)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__goto_explorer_element(Object _self, Object explorer_element, Object object) {
        Boolean bl;
        boolean bl2 = MagikObjectUtils.is(object, Boolean.TRUE);
        Object object2 = new Boolean(bl2);
        if (bl2) {
            object2 = bl = Invoker.bootstrap("is_group?", explorer_element);
        }
        if (MagikObjectUtils.should_be_boolean(object2)) {
            bl = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("number_of_children", explorer_element), 1));
        }
        if (MagikObjectUtils.should_be_boolean(bl)) {
            explorer_element = Invoker.bootstrap("an_element()", Invoker.bootstrap("children", explorer_element));
        }
        CallSite selection = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_selection"), VectorBuilder.bootstrap("vb", explorer_element), Boolean.TRUE);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_pre_selection"), (Object)VectorBuilder.bootstrap("vb", _self, selection)));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_selection"), (Object)VectorBuilder.bootstrap("vb", _self, selection)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1060642342)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__post_build_gui(Object _self) {
        block1: {
            CallSite top_element = Invoker.bootstrap("explorer_elements", Invoker.bootstrapPrivate("$slot_get_model()", (Object)_self));
            Invoker.superNaturalBootstrap("post_build_gui()", "gui_framework", "sw", (Object)_self);
            if (top_element == null) break block1;
            CallSite children = Invoker.bootstrap("children", top_element);
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", children), Integer.valueOf(0)))) {
                top_element = Invoker.bootstrap("an_element()", children);
            }
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("goto_explorer_element()", (Object)_self, (Object)top_element));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=2117108193)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__model_plugin_with_name(Object _self, Object name) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("plugin()", (Object)Invoker.bootstrapPrivate("$slot_get_model()", (Object)_self), (Object)name));
    }

    @SourceHash(value=1160778286)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__terminate_on_close?_(Object _self) {
        CallSite callSite = Invoker.bootstrapPrivate("floating?", (Object)_self);
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            callSite = Invoker.bootstrap("not", Invoker.bootstrapPrivate("main?", (Object)_self));
        }
        return callSite;
    }

    @SourceHash(value=1792612676)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__refresh(Object _self) {
        block0: {
            if (Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)_self) == null) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("uncache()", (Object)Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)_self)));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "refresh"), (Object)Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)_self)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1124432304)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__manage_actions(Object _self) {
        Boolean bl = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)_self), null));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "refresh")), (Object)bl));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=302632955)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=75, end=99, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=124, index=1), @EnvVar(name="__return_catcher__", type=Object[].class, start=27, end=124, index=2)})
    public static Object explorer_view_framework__current_element_still_available?(Object _self, Object tree) {
        Boolean bl;
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)2);
        try {
            if (MagikObjectUtils.is(tree, Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)))) {
                return Boolean.TRUE;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("lazy_children?", tree)))) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)tree));
            }
            bl = Boolean.FALSE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_view_framework__current_element_still_available?")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_4(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("current_element_still_available?()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)child))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeReturn(Boolean.TRUE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-134974969)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__sw_databus_data_requested(Object _self, Object data_type_name) {
        if (data_type_name == ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")) {
            return Invoker.bootstrapPrivate("$slot_get_explorer_selection()", (Object)_self);
        }
        if (data_type_name == ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) {
            return (ResultTuple)((Object)Invoker.tupleBootstrap("explorer_elements", (Object)Invoker.bootstrapPrivate("$slot_get_model()", (Object)_self)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-634604622)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block3: {
            block2: {
                if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")) break block2;
                CallSite selection = Invoker.bootstrap("\\b]", data, Integer.valueOf(2));
                CallSite callSite = Invoker.bootstrap("activated?", selection);
                if (MagikObjectUtils.should_be_boolean(callSite)) {
                    callSite = Invoker.bootstrap("not", Invoker.bootstrap("is_records?", selection));
                }
                if (MagikObjectUtils.should_be_boolean(callSite)) {
                    CallSite callSite2 = Invoker.bootstrap("an_explorer_element()", selection);
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("current_explorer_element\\l\\l", (Object)_self, (Object)callSite2));
                }
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_explorer_selection()", (Object)_self, (Object)Invoker.bootstrap("\\b]", data, Integer.valueOf(1)), (Object)Invoker.bootstrap("\\b]", data, Integer.valueOf(2))));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self));
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("refresh_proxy_actions()", (Object)_self, (Object)Invoker.bootstrap("\\b]", data, Integer.valueOf(1))));
                break block3;
            }
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_number_of_records") || !MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("floating?", (Object)_self))) break block3;
            CallSite size = Invoker.bootstrap("\\b]", data, Integer.valueOf(2));
            CallSite size_text = size != null ? Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "status_size_string"), (Object)size) : Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "status_unknown_size"));
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "size_info"), (Object)ConstantBuilder.symbolBootstrap("symbol", "text"), (Object)size_text));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1602569316)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__note_change(Object _self, Object who, Object what, Object data) {
        if (what == ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), (Object)data));
            if (Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)_self) != null && MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrapPrivate("current_element_still_available?()", (Object)_self, (Object)data)))) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_current_explorer_element()", (Object)_self, null));
            }
        } else {
            Boolean bl;
            Boolean bl2;
            boolean bl3 = MagikObjectUtils.is(what, ConstantBuilder.symbolBootstrap("symbol", "refresh"));
            Boolean bl4 = new Boolean(bl3);
            if (bl3) {
                bl4 = bl2 = new Boolean(MagikObjectUtils.isnt(data, null));
            }
            if (MagikObjectUtils.should_be_boolean(bl4)) {
                bl2 = bl = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)_self), null));
            }
            if (MagikObjectUtils.should_be_boolean(bl2)) {
                bl = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("owner", data), Invoker.bootstrap("owner", Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)_self))));
            }
            if (MagikObjectUtils.should_be_boolean(bl)) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("refresh()", (Object)_self));
            } else if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_kind_of?()", who, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "dataset_notification_mixin")))) {
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_explorer_selection_content_changed()", (Object)_self));
            }
        }
        Invoker.superNaturalBootstrap("note_change()", "gui_framework", "sw", (Object)_self, (Object)who, (Object)what, (Object)data);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=902005766)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__terminate(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("remove_selection_observers()", (Object)_self));
        Object var1_1 = null;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("model\\l\\l", (Object)_self, var1_1));
        Invoker.superNaturalBootstrap("terminate()", "gui_framework", "sw", (Object)_self);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1445031522)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="711757bd-ddae-4094-bd55-d905bdd8fb4f", type=Object.class, start=16, end=146, index=0), @EnvVar(name="711757bd-ddae-4094-bd55-d905bdd8fb4f", type=Object.class, start=181, end=184, index=0)})
    public static Object explorer_view_framework__popup_for(Object _self, Object name, Object list_view) {
        CallSite popup;
        block7: {
            Object object;
            Object[] __env__ = new Object[1];
            popup = null;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "action_gui_manager_no_such_menu_def"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_view_framework_24242.class, "proc___2", "", 3, 3, 0, 0, (Object[])objectArray));
                        popup = Invoker.bootstrap("popup_menu()", Invoker.bootstrapPrivate("gui_manager", (Object)_self), list_view, Invoker.bootstrap("lowercase", name));
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        break block7;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "action_gui_manager_no_such_menu_def")))) {
                throw new Error("Try block caught unexpected error.");
            }
        }
        return popup;
    }

    @Parent(method="explorer_view_framework__popup_for")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="711757bd-ddae-4094-bd55-d905bdd8fb4f", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___2(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=-644199343)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__set_title_for_selection(Object _self) {
        block6: {
            CallSite selection = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_selection()", (Object)_self), Integer.valueOf(2));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("activated?", selection))) {
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("floating?", (Object)_self))) {
                    boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)_self), null);
                    Object object = new Boolean(bl);
                    if (bl) {
                        object = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("level", Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)_self)), Integer.valueOf(1));
                    }
                    if (MagikObjectUtils.should_be_boolean(object)) {
                        CallSite callSite = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "title_with_address"), (Object)Invoker.bootstrap("path_name", Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)_self)));
                        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("title\\l\\l", (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)callSite));
                    } else {
                        CallSite callSite = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "title"));
                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("title\\l\\l", (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)callSite));
                    }
                } else {
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "title"), (Object)ConstantBuilder.symbolBootstrap("symbol", "label"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "title_bar_address"), (Object)Invoker.bootstrap("path_name", Invoker.bootstrapPrivate("$slot_get_current_explorer_element()", (Object)_self)))));
                }
            }
            if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("floating?", (Object)_self))) break block6;
            CallSite status_info = Invoker.bootstrapPrivate("status_info_for_selection()", (Object)_self, (Object)selection);
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "status_info"), (Object)ConstantBuilder.symbolBootstrap("symbol", "text"), (Object)status_info));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=810778540)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__explore(Object _self, Object an_explorer_element) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("explore()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)an_explorer_element, (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)25, (Object)25));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1814927228)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__copy_to_scrapbook(Object _self) {
        block1: {
            CallSite selection = null;
            CallSite selection_info = Invoker.bootstrapPrivate("$slot_get_explorer_selection()", (Object)_self);
            boolean bl = MagikObjectUtils.isnt(selection_info, null);
            Boolean bl2 = new Boolean(bl);
            if (bl) {
                selection = Invoker.bootstrap("\\b]", selection_info, Integer.valueOf(2));
                bl2 = new Boolean(MagikObjectUtils.isnt(selection, null));
            }
            if (!MagikObjectUtils.should_be_boolean(bl2)) break block1;
            CallSite scrapbook = Invoker.bootstrap("scrapbook()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "gis_program_manager"), Invoker.bootstrap("spatial_object_controller", Invoker.bootstrapPrivate("application", (Object)_self)));
            CallSite name = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook_name"));
            CallSite description = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook_description"));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_current_result()", (Object)scrapbook, (Object)name, (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrap("rwo_set", selection)), (Object)description));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1845934766)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=54, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=55, index=1)})
    public static Object explorer_view_framework__remove_selection_observers(Object _self) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("observed_collections()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_view_framework__remove_selection_observers")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_5(Object[] __env__, Object collection) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_observer()", (Object)Invoker.bootstrap("dataset", collection), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "post_delete"), ConstantBuilder.symbolBootstrap("symbol", "suppressed_data_changes")), (Object)collection));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=171862684)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__notify_explorer_selection_content_changed(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("explorer_selection_content_changed()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)_self, (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_selection()", (Object)_self), Integer.valueOf(2))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1434208744)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=91, end=116, index=0), @EnvVar(name="__loopenv__", type=Object.class, start=21, end=123, index=2), @EnvVar(name="__loopbody__", type=Object.class, start=13, end=123, index=1)})
    public static Object explorer_view_framework__collections_to_observe(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        block1: {
            Object[] __env__ = new Object[3];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)2);
            CallSite content = null;
            CallSite selection_info = Invoker.bootstrapPrivate("$slot_get_explorer_selection()", (Object)_self);
            boolean bl = MagikObjectUtils.isnt(selection_info, null);
            Boolean bl2 = new Boolean(bl);
            if (bl) {
                content = Invoker.bootstrap("\\b]", selection_info, Integer.valueOf(2));
                bl2 = new Boolean(MagikObjectUtils.isnt(content, null));
            }
            if (!MagikObjectUtils.should_be_boolean(bl2)) break block1;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("collections()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)content));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_view_framework__collections_to_observe")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_6(Object[] __env__, Object collection) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            boolean bl = MagikObjectUtils.isnt(collection, null);
            Boolean bl2 = new Boolean(bl);
            if (bl) {
                bl2 = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("dataset", collection), null));
            }
            if (MagikObjectUtils.should_be_boolean(bl2)) {
                LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)collection);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-2058250881)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__notify_explorer_selection_changed(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("explorer_selection_changed()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)_self, (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_explorer_selection()", (Object)_self), Integer.valueOf(2))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1264392340)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=56, index=0), @EnvVar(name="__loopbody__", type=Object.class, start=13, end=57, index=1), @EnvVar(name="__loopenv__", type=Object.class, start=21, end=57, index=2)})
    public static Object explorer_view_framework__observed_collections(MethodHandle __loopbody__, Object[] __loopenv__, Object _self) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopbody__, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)__loopenv__, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("collections_to_observe()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_view_framework__observed_collections")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_7(Object[] __env__, Object collection) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            LoopBodyInvoker.naturalBootstrap("_loopbody", (MethodHandle)((MethodHandle)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))), (Object[])((Object[])EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)collection);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-55814865)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__set_explorer_selection(Object _self, Object owner, Object content) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("remove_selection_observers()", (Object)_self));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_selection()", (Object)_self, (Object)VectorBuilder.bootstrap("vb", owner, content)));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_selection_observers()", (Object)_self));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_title_for_selection()", (Object)_self));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_explorer_selection_changed()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1248417511)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=54, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=55, index=1)})
    public static Object explorer_view_framework__add_selection_observers(Object _self) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("collections_to_observe()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_view_framework__add_selection_observers")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_8(Object[] __env__, Object collection) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_observer()", (Object)Invoker.bootstrap("dataset", collection), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "post_delete"), ConstantBuilder.symbolBootstrap("symbol", "suppressed_data_changes")), (Object)collection));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1303176898)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_view_framework__status_info_for_selection(Object _self, Object selection) {
        CallSite size;
        CallSite nr;
        CallSite nr_selected = null;
        CallSite current_element = Invoker.bootstrapPrivate("current_explorer_element", (Object)_self);
        if (current_element == null) {
            current_element = Invoker.bootstrap("an_explorer_element()", selection);
        }
        CallSite name = Invoker.bootstrap("name", current_element);
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("activated?", selection)))) {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_group?", current_element))) {
                if (MagikObjectUtils.isnt(Invoker.bootstrap("an_explorer_element()", selection), current_element)) {
                    nr_selected = Invoker.bootstrap("size", Invoker.bootstrap("new_from_iter()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"), selection, ConstantBuilder.symbolBootstrap("symbol", "explorer_elements()")));
                }
            } else {
                nr_selected = Invoker.bootstrap("size", Invoker.bootstrap("new_from_iter()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"), selection, ConstantBuilder.symbolBootstrap("symbol", "records()")));
            }
        }
        boolean bl = MagikObjectUtils.isnt(nr_selected, null);
        Object object = new Boolean(bl);
        if (bl) {
            object = BinaryDispatcher.bootstrap("\\g", nr_selected, Integer.valueOf(0));
        }
        CallSite callSite = MagikObjectUtils.should_be_boolean(object) ? (MagikObjectUtils.is(nr_selected, 1) ? Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "status_selected_size_1"), (Object)name) : Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "status_selected"), (Object)name, (Object)nr_selected)) : (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_group?", current_element)) ? (MagikObjectUtils.is(nr = Invoker.bootstrap("number_of_children", current_element), 1) ? Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "status_group_selected_size_1"), (Object)name) : Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "status_group_selected"), (Object)name, (Object)nr)) : (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_collection?", current_element)) ? (MagikObjectUtils.is(size = Invoker.bootstrap("calculated_size()", selection, Boolean.FALSE, Boolean.TRUE), 1) ? Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "status_collection_selected_size_1"), (Object)name) : (size != null ? Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "status_collection_selected_size"), (Object)name, (Object)size) : Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "status_collection_selected"), (Object)name))) : null));
        return callSite;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_view_framework_24242.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_view_framework_24242.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_view_framework_24242.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_view_framework_24242.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_view_framework_24242.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_view_framework_24242.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_view_framework_24242.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_view_framework_24242.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_view_framework_24242;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_view_framework_24241
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_view_framework_24241() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view/explorer_view_framework.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_view_framework"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "model"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_selection"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "current_explorer_element"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "floating?"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "main?"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "proxy_action_names"), null)), (Object)ConstantBuilder.symbolBootstrap("symbol", "gui_framework"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_view_framework"), (Object)ConstantBuilder.symbolBootstrap("symbol", "floating?"), (Object)ConstantBuilder.symbolBootstrap("symbol", "write"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_view_framework"), (Object)ConstantBuilder.symbolBootstrap("symbol", "main?"), (Object)ConstantBuilder.symbolBootstrap("symbol", "write"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_view_framework"), (Object)ConstantBuilder.symbolBootstrap("symbol", "current_explorer_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "write"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_view_framework"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_view_framework"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_selection"), ConstantBuilder.symbolBootstrap("symbol", "explorer_number_of_records")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_view_framework", "init_actions()", explorer_view_framework_24242.class, "explorer_view_framework__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "init_proxy_actions()", explorer_view_framework_24242.class, "explorer_view_framework__init_proxy_actions", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_framework", "refresh_proxy_actions()", explorer_view_framework_24242.class, "explorer_view_framework__refresh_proxy_actions", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_framework", "manage()", explorer_view_framework_24242.class, "explorer_view_framework__manage", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "unmanage()", explorer_view_framework_24242.class, "explorer_view_framework__unmanage", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "model<<", explorer_view_framework_24242.class, "explorer_view_framework__model\\l\\l_", 2, 2);
        MagikObjectUtils.createMethod("explorer_view_framework", "editor_manager", explorer_view_framework_24242.class, "explorer_view_framework__editor_manager_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "ace_control", explorer_view_framework_24242.class, "explorer_view_framework__ace_control_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "map_trail", explorer_view_framework_24242.class, "explorer_view_framework__map_trail_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "map_selection", explorer_view_framework_24242.class, "explorer_view_framework__map_selection_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "map_world", explorer_view_framework_24242.class, "explorer_view_framework__map_world_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "goto_explorer_element()", explorer_view_framework_24242.class, "explorer_view_framework__goto_explorer_element", 3, 2);
        MagikObjectUtils.createMethod("explorer_view_framework", "post_build_gui()", explorer_view_framework_24242.class, "explorer_view_framework__post_build_gui", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "model_plugin_with_name()", explorer_view_framework_24242.class, "explorer_view_framework__model_plugin_with_name", 2, 2);
        MagikObjectUtils.createMethod("explorer_view_framework", "terminate_on_close?", explorer_view_framework_24242.class, "explorer_view_framework__terminate_on_close?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "refresh()", explorer_view_framework_24242.class, "explorer_view_framework__refresh", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "manage_actions()", explorer_view_framework_24242.class, "explorer_view_framework__manage_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "current_element_still_available?()", explorer_view_framework_24242.class, "explorer_view_framework__current_element_still_available?", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_framework", "sw_databus_data_requested()", explorer_view_framework_24242.class, "explorer_view_framework__sw_databus_data_requested", 2, 2);
        MagikObjectUtils.createMethod("explorer_view_framework", "sw_databus_data_available()", explorer_view_framework_24242.class, "explorer_view_framework__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_view_framework", "note_change()", explorer_view_framework_24242.class, "explorer_view_framework__note_change", 4, 4);
        MagikObjectUtils.createMethod("explorer_view_framework", "terminate()", explorer_view_framework_24242.class, "explorer_view_framework__terminate", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "popup_for()", explorer_view_framework_24242.class, "explorer_view_framework__popup_for", 3, 3);
        MagikObjectUtils.createMethod("explorer_view_framework", "set_title_for_selection()", explorer_view_framework_24242.class, "explorer_view_framework__set_title_for_selection", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_framework", "explore()", explorer_view_framework_24242.class, "explorer_view_framework__explore", 2, 2);
        MagikObjectUtils.createMethod("explorer_view_framework", "copy_to_scrapbook()", explorer_view_framework_24242.class, "explorer_view_framework__copy_to_scrapbook", 1, 1);
        MagikObjectUtils.createMethod("explorer_view_framework", "remove_selection_observers()", explorer_view_framework_24242.class, "explorer_view_framework__remove_selection_observers", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_framework", "notify_explorer_selection_content_changed()", explorer_view_framework_24242.class, "explorer_view_framework__notify_explorer_selection_content_changed", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_framework", "collections_to_observe()", explorer_view_framework_24242.class, "explorer_view_framework__collections_to_observe", 3, 3, true, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_framework", "notify_explorer_selection_changed()", explorer_view_framework_24242.class, "explorer_view_framework__notify_explorer_selection_changed", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_framework", "observed_collections()", explorer_view_framework_24242.class, "explorer_view_framework__observed_collections", 3, 3, true, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_framework", "set_explorer_selection()", explorer_view_framework_24242.class, "explorer_view_framework__set_explorer_selection", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_view_framework", "add_selection_observers()", explorer_view_framework_24242.class, "explorer_view_framework__add_selection_observers", 1, 1, false, false, true, 0);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_view_framework", "status_info_for_selection()", explorer_view_framework_24242.class, "explorer_view_framework__status_info_for_selection", 2, 2, false, false, true, 0));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.Cloner;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_popup_navigation_component_24298 {
    @SourceHash(value=945069272)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__new(Object _self, Object name, Object framework, Object ... keys_and_args) {
        CallSite properties = Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)keys_and_args));
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("init()", (Object)Cloner.makeClone(Cloner.makeClone(_self)), (Object)name, (Object)framework, (Object)properties));
    }

    @SourceHash(value=1536481217)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=24, end=102, index=0), @EnvVar(name="_self", type=Object.class, start=15, end=103, index=1)})
    public static Object explorer_popup_navigation_component__init(Object _self, Object name, Object framework, Object properties) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        Invoker.superNaturalBootstrap("init()", "sw_component", "sw", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)name, (Object)framework);
        CallSite callSite = Invoker.bootstrap("databus", framework);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)callSite));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)properties));
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
    }

    @Parent(method="explorer_popup_navigation_component__init")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object key, Object value) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("perform_private()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("with_chevron", key), (Object)value));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=958230060)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__build_gui(Object _self, Object container) {
        CallSite rc = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), container, Integer.valueOf(1), null, null, ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "outer_spacing"), Invoker.bootstrapPrivate("outer_spacing", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "right_spacing"), BinaryDispatcher.bootstrap("+", Invoker.bootstrapPrivate("outer_spacing", (Object)_self), Integer.valueOf(1)), ConstantBuilder.symbolBootstrap("symbol", "border?"), Invoker.bootstrapPrivate("border?", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "col_resize_values"), VectorBuilder.bootstrap("vb", Integer.valueOf(100), Integer.valueOf(0)));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_text_item()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "key_text_item"), rc, ConstantBuilder.stringBootstrap("string", ""), ConstantBuilder.symbolBootstrap("symbol", "model"), _self, ConstantBuilder.symbolBootstrap("symbol", "handle_all_keys?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "activate_selector"), ConstantBuilder.symbolBootstrap("symbol", "text_activate()"), ConstantBuilder.symbolBootstrap("symbol", "cancel_selector"), ConstantBuilder.symbolBootstrap("symbol", "text_cancel()"), ConstantBuilder.symbolBootstrap("symbol", "focus_change_selector"), ConstantBuilder.symbolBootstrap("symbol", "text_focus_change()"), ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "centre"), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "balloon_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "address_tt")), ConstantBuilder.symbolBootstrap("symbol", "identifier"), Invoker.bootstrap("as_symbol()", ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), Invoker.bootstrapPrivate("name", (Object)_self), ConstantBuilder.stringBootstrap("string", "_navigation_popup_text"))), ConstantBuilder.symbolBootstrap("symbol", "special_key_handler"), ConstantBuilder.symbolBootstrap("symbol", "invoke_from_text_item()"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_button_item()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "popup_button_item"), rc, Invoker.bootstrap("get_raster_image()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "smallworld_product"), ConstantBuilder.symbolBootstrap("symbol", "down_12x12"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), _self, ConstantBuilder.symbolBootstrap("symbol", "popup_from_button_item()"), ConstantBuilder.symbolBootstrap("symbol", "popdown_notifier"), ConstantBuilder.symbolBootstrap("symbol", "button_caused_popdown()"), ConstantBuilder.symbolBootstrap("symbol", "balloon_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "address_list_tt")), ConstantBuilder.symbolBootstrap("symbol", "allow_keyboard_navigation?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "identifier"), Invoker.bootstrap("as_symbol()", ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), Invoker.bootstrapPrivate("name", (Object)_self), ConstantBuilder.stringBootstrap("string", "_navigation_popup_button"))), ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "centre"))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1763893330)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=347, index=0), @EnvVar(name="text", type=Object.class, start=21, end=347, index=1), @EnvVar(name="__leave_catcher__", type=Object[].class, start=286, end=348, index=2), @EnvVar(name="_self", type=Object.class, start=13, end=348, index=3)})
    public static Object explorer_popup_navigation_component__text_activate(Object _self) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("lowercase", Invoker.bootstrap("value", Invoker.bootstrapPrivate("$slot_get_text_item()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)))), (Object[])__env__, (int)1);
        CallSite explorer_elements = Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"));
        boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), null);
        Object object = new Boolean(bl);
        if (bl) {
            object = BinaryDispatcher.bootstrap("=", Invoker.bootstrap("lowercase", Invoker.bootstrap("perform()", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), Invoker.bootstrapPrivate("representation_message", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)))), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
        }
        if (MagikObjectUtils.should_be_boolean(object)) {
            return ResultTuple.EMPTY_TUPLE;
        }
        CallSite callSite = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), Integer.valueOf(0));
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            callSite = BinaryDispatcher.bootstrap("=", Invoker.bootstrap("last", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), Character.valueOf('\\'));
        }
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("slice()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), Integer.valueOf(1), BinaryDispatcher.bootstrap("-", Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), Integer.valueOf(1))), (Object[])__env__, (int)1);
        }
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)2);
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_breadth_first()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)explorer_elements));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("text_cancel()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        }
        catch (LeaveCatcher.Leave leave) {
            ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getLeaveResult(leave);
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_popup_navigation_component__text_activate")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("lowercase", Invoker.bootstrap("perform()", element, Invoker.bootstrapPrivate("representation_message", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)))), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)))) {
                Object object = element;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("current_element\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)object));
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1557785615)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__text_cancel(Object _self) {
        CallSite callSite = Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_current_element()", (Object)_self, null));
        callSite = callSite;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("current_element\\l\\l", (Object)_self, (Object)callSite));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1286938669)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__text_focus_change(Object _self, Object object, Object window) {
        block1: {
            boolean bl = MagikObjectUtils.is(object, Boolean.FALSE);
            Boolean bl2 = new Boolean(bl);
            if (bl) {
                bl2 = new Boolean(MagikObjectUtils.isnt(window, Invoker.bootstrapPrivate("$slot_get_button_item()", (Object)_self)));
            }
            if (!MagikObjectUtils.should_be_boolean(bl2)) break block1;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("text_activate()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=307398484)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__inactive(Object _self, Object window, Object to) {
        CallSite focus_to = to != null ? Invoker.bootstrap("ref", to) : null;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("popup_lost_focus_to()", (Object)Invoker.bootstrapPrivate("$slot_get_button_item()", (Object)_self), (Object)focus_to));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("deactivate()", (Object)Invoker.bootstrapPrivate("$slot_get_popup_frame()", (Object)_self)));
        return Boolean.TRUE;
    }

    @SourceHash(value=-2057884259)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__button_caused_popdown(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_focus()", (Object)Invoker.bootstrapPrivate("$slot_get_text_item()", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1767281882)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__current_element\l\l_(Object _self, Object an_element) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_current_element()", (Object)_self, (Object)an_element, (Object)Boolean.TRUE));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=412563558)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__set_current_element(Object _self, Object an_element, Object object) {
        block8: {
            Boolean bl;
            CallSite top_tree = null;
            CallSite dt = null;
            boolean bl2 = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), an_element);
            Boolean bl3 = new Boolean(bl2);
            if (bl2) {
                bl3 = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_set_current_element()", (Object)_self, (Object)an_element), null));
            }
            if (!MagikObjectUtils.should_be_boolean(bl3)) break block8;
            CallSite string = Invoker.bootstrap("trim_spaces()", Invoker.bootstrap("perform()", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), Invoker.bootstrapPrivate("representation_message", (Object)_self)));
            if (MagikObjectUtils.is(Invoker.bootstrap("size", string), 0)) {
                string = ConstantBuilder.stringBootstrap("string", "\\");
            }
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("~=", Invoker.bootstrap("value", Invoker.bootstrapPrivate("$slot_get_text_item()", (Object)_self)), string))) {
                CallSite callSite = string;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("value\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_text_item()", (Object)_self), (Object)callSite));
            }
            boolean bl4 = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("selection_message", (Object)_self), null);
            Boolean bl5 = new Boolean(bl4);
            if (bl4) {
                bl5 = new Boolean(MagikObjectUtils.is(object, Boolean.TRUE));
            }
            if (MagikObjectUtils.should_be_boolean(bl5)) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("send_to()", (Object)Invoker.bootstrapPrivate("selection_message", (Object)_self), (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self)));
            }
            boolean bl6 = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_display_trees()", (Object)_self), null);
            Boolean bl7 = new Boolean(bl6);
            if (bl6) {
                top_tree = Invoker.bootstrap("an_element()", Invoker.bootstrapPrivate("$slot_get_display_trees()", (Object)_self));
                bl7 = bl = new Boolean(MagikObjectUtils.isnt(top_tree, null));
            }
            if (MagikObjectUtils.should_be_boolean(bl7)) {
                dt = Invoker.bootstrap("\\b]", top_tree, Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self));
                bl = new Boolean(MagikObjectUtils.isnt(dt, null));
            }
            if (MagikObjectUtils.should_be_boolean(bl) && MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("selected?", dt)))) {
                Boolean bl8 = Boolean.TRUE;
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("selected?\\l\\l", (Object)dt, (Object)bl8));
                bl8 = Boolean.TRUE;
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("expanded?\\l\\l", (Object)dt, (Object)bl8));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=167541917)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__invoke_from_text_item(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("invoke()", (Object)Invoker.bootstrapPrivate("$slot_get_button_item()", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1696964383)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__popup_from_button_item(Object _self) {
        boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_popup_frame()", (Object)_self), null);
        Object object = new Boolean(bl);
        if (bl) {
            object = Invoker.bootstrap("active?", Invoker.bootstrapPrivate("$slot_get_popup_frame()", (Object)_self));
        }
        if (MagikObjectUtils.should_be_boolean(object)) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("deactivate()", (Object)Invoker.bootstrapPrivate("$slot_get_popup_frame()", (Object)_self)));
        } else {
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("int!popup_from_button_item()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1012228285)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__int!popup_from_button_item(Object _self) {
        CallSite ti_width = BinaryDispatcher.bootstrap("+", BinaryDispatcher.bootstrap("+", BinaryDispatcher.bootstrap("-", Invoker.bootstrap("width", Invoker.bootstrapPrivate("$slot_get_text_item()", (Object)_self)), Integer.valueOf(5)), Invoker.bootstrap("width", Invoker.bootstrapPrivate("$slot_get_button_item()", (Object)_self))), BinaryDispatcher.bootstrap("*", Integer.valueOf(2), Invoker.bootstrapPrivate("outer_spacing", (Object)_self)));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("build_display_trees()", (Object)_self));
        Integer rows = MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("simple_hierarchy?", (Object)_self)) ? Invoker.bootstrap("min()", Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_simple_hierarchy_display_trees()", (Object)_self)), Integer.valueOf(10)) : Integer.valueOf(10);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_popup_frame()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_popup_menu"), ConstantBuilder.symbolBootstrap("symbol", "parent"), Invoker.bootstrapPrivate("top_frame", (Object)_self))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_tree_item()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "tree_item"), Invoker.bootstrapPrivate("$slot_get_popup_frame()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "model"), _self, ConstantBuilder.symbolBootstrap("symbol", "visible_rows"), rows, ConstantBuilder.symbolBootstrap("symbol", "mode"), ConstantBuilder.symbolBootstrap("symbol", "one"), ConstantBuilder.symbolBootstrap("symbol", "message_on_no_data?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "module_name"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources"), ConstantBuilder.symbolBootstrap("symbol", "aspect"), ConstantBuilder.symbolBootstrap("symbol", "display_trees"), ConstantBuilder.symbolBootstrap("symbol", "data_selector"), ConstantBuilder.symbolBootstrap("symbol", "display_trees_for_tree_item"), ConstantBuilder.symbolBootstrap("symbol", "select_notifier"), ConstantBuilder.symbolBootstrap("symbol", "select_popup_element()"), ConstantBuilder.symbolBootstrap("symbol", "min_width"), ti_width, ConstantBuilder.symbolBootstrap("symbol", "identifier"), Invoker.bootstrap("as_symbol()", ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), Invoker.bootstrapPrivate("name", (Object)_self), ConstantBuilder.stringBootstrap("string", "_tree_item"))), ConstantBuilder.symbolBootstrap("symbol", "resize_x?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "resize_y?"), Boolean.TRUE)));
        Boolean bl = Boolean.FALSE;
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("show_border?\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)bl));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_property()", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "button_item"), Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), ConstantBuilder.stringBootstrap("string", ""), _self, ConstantBuilder.symbolBootstrap("symbol", "cancel_popup()")), (Object)ConstantBuilder.symbolBootstrap("symbol", "form_for_cancel"), (Object)_self));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("text_activate()", (Object)_self));
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("ensure_selection_visibility()", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)));
        ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate()", (Object)Invoker.bootstrapPrivate("$slot_get_popup_frame()", (Object)_self), (Object)Invoker.bootstrapPrivate("$slot_get_text_item()", (Object)_self), (Object)Invoker.bootstrap("negated", BinaryDispatcher.bootstrap("+", Invoker.bootstrapPrivate("outer_spacing", (Object)_self), Integer.valueOf(1))), (Object)0));
        ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "display_trees"), (Object)ConstantBuilder.symbolBootstrap("symbol", "renew")));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1937770498)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__display_trees_for_tree_item_(Object _self) {
        return MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("simple_hierarchy?", (Object)_self)) ? (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_get_simple_hierarchy_display_trees()", (Object)_self)) : (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_get_display_trees()", (Object)_self));
    }

    @SourceHash(value=-1500015989)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__cancel_popup(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("deactivate()", (Object)Invoker.bootstrapPrivate("$slot_get_popup_frame()", (Object)_self)));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_focus()", (Object)Invoker.bootstrapPrivate("$slot_get_text_item()", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-648626633)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=97, end=145, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=170, index=3), @EnvVar(name="an_explorer_element", type=Object.class, start=21, end=170, index=2), @EnvVar(name="__return_catcher__", type=Object[].class, start=35, end=170, index=4)})
    public static Object explorer_popup_navigation_component__display_tree_for_explorer_element(Object _self, Object an_explorer_element, Object from_tree) {
        ResultTuple resultTuple;
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)an_explorer_element, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)4);
        try {
            from_tree = Invoker.bootstrap("default()", from_tree, Invoker.bootstrap("an_element()", Invoker.bootstrapPrivate("$slot_get_display_trees()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))));
            if (from_tree == null) {
                return ResultTuple.EMPTY_TUPLE;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("lazy_children?", Invoker.bootstrap("key", from_tree))))) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)from_tree));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)from_tree));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).getReturnResult(return_);
        }
        return resultTuple;
    }

    @Parent(method="explorer_popup_navigation_component__display_tree_for_explorer_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_3(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.is(Invoker.bootstrap("key", child), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).makeReturn(child);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_popup_navigation_component__display_tree_for_explorer_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="display_tree", type=Object[].class, start=42, end=76, index=1)})
    public static Object __loopbody_4(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrapPrivate("display_tree_for_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)child);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)1);
            if (callSite != null) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).makeReturn(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=324197166)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__build_display_trees(Object _self, Object explorer_elements) {
        block5: {
            boolean bl = MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_display_trees()", (Object)_self), null);
            Boolean bl2 = new Boolean(bl);
            if (!bl) {
                bl2 = new Boolean(MagikObjectUtils.isnt(explorer_elements, null));
            }
            if (MagikObjectUtils.should_be_boolean(bl2)) {
                CallSite current_dt;
                Invoker.bootstrapPrivate("$slot_set_display_trees()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")));
                if (explorer_elements == null) {
                    explorer_elements = Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"));
                }
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrapPrivate("$slot_get_display_trees()", (Object)_self), (Object)Invoker.bootstrap("as_display_tree()", explorer_elements, null, Boolean.TRUE)));
                if (Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self) == null) {
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_current_element()", (Object)_self, (Object)explorer_elements));
                }
                if ((current_dt = Invoker.bootstrapPrivate("display_tree_for_explorer_element()", (Object)_self, (Object)Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self))) != null) {
                    Boolean bl3 = Boolean.TRUE;
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("selected?\\l\\l", (Object)current_dt, (Object)bl3));
                    bl3 = Boolean.TRUE;
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("expanded?\\l\\l", (Object)current_dt, (Object)bl3));
                }
            }
            if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("simple_hierarchy?", (Object)_self))) break block5;
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("build_simple_hierarchy_display_trees()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1876158907)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="indent", type=Object.class, start=29, end=176, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=176, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=177, index=4), @EnvVar(name="branch_to_root", type=Object[].class, start=98, end=177, index=2)})
    public static Object explorer_popup_navigation_component__build_simple_hierarchy_display_trees(Object _self) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("simple_hierarchy_indent", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_simple_hierarchy_display_trees()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("branch_to_root", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))), (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_visible_trees()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)Invoker.bootstrap("an_element()", Invoker.bootstrapPrivate("$slot_get_display_trees()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_simple_hierarchy_display_trees()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_popup_navigation_component__build_simple_hierarchy_display_trees")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_5(Object[] __env__, Object i_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = BinaryDispatcher.bootstrap("\\l", Invoker.bootstrap("level", i_element), Integer.valueOf(3));
            if (!MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("includes?()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), Invoker.bootstrap("key", i_element));
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                CallSite new_element = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "display_tree"), Invoker.bootstrap("key", i_element));
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_value_method()", (Object)new_element, (Object)i_element, (Object)ConstantBuilder.symbolBootstrap("symbol", "value()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "set_value()")));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrapPrivate("$slot_get_simple_hierarchy_display_trees()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object)new_element));
                CallSite callSite2 = Invoker.bootstrap("new_with()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"), ConstantBuilder.symbolBootstrap("symbol", "move"), VectorBuilder.bootstrap("vb", BinaryDispatcher.bootstrap("*", BinaryDispatcher.bootstrap("-", Invoker.bootstrap("level", i_element), Integer.valueOf(1)), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), Integer.valueOf(0)), (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("as_simple_vector()", Invoker.bootstrap("styled_string", i_element))));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("styled_string\\l\\l", (Object)new_element, (Object)callSite2));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_popup_navigation_component__build_simple_hierarchy_display_trees")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="current_dt", type=Object[].class, start=40, end=101, index=3)})
    public static Object __loopbody_6(Object[] __env__, Object i_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("\\b]", i_element, Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)3);
            if (callSite != null) {
                Boolean bl = Boolean.TRUE;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("selected?\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)bl));
                bl = Boolean.TRUE;
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("expanded?\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)bl));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1493345324)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__select_popup_element(Object _self, Object selection, Object object) {
        block1: {
            Object object2 = object;
            if (MagikObjectUtils.should_be_boolean(object2)) {
                object2 = Invoker.bootstrap("not", Invoker.bootstrap("empty?", selection));
            }
            if (!MagikObjectUtils.should_be_boolean(object2)) break block1;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("do_work_at_priority()", (Object)Invoker.bootstrapPrivate("application", (Object)_self), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "int!selection_proc()"), (Object)BinaryDispatcher.bootstrap("-", Invoker.bootstrap("vm_priority", Thread.currentThread()), Integer.valueOf(1)), (Object)selection));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1210130744)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__int!selection_proc(Object _self, Object selection) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("sleep()", (Object)Thread.currentThread(), (Object)5));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("deactivate()", (Object)Invoker.bootstrapPrivate("popup_frame", (Object)_self)));
        CallSite callSite = Invoker.bootstrap("key", Invoker.bootstrap("an_element()", selection));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("current_element\\l\\l", (Object)_self, (Object)callSite));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1479310569)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_popup_navigation_component__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block0: {
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("build_display_trees()", (Object)_self, (Object)data));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "display_trees"), (Object)ConstantBuilder.symbolBootstrap("symbol", "renew")));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_popup_navigation_component_24298.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_popup_navigation_component_24298.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_popup_navigation_component_24298.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_popup_navigation_component_24298.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_popup_navigation_component_24298.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_popup_navigation_component_24298.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_popup_navigation_component_24298;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_popup_navigation_component_24297
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_popup_navigation_component_24297() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_popup_navigation_component.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_popup_navigation_component"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "text_item"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "button_item"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "tree_item"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "popup_frame"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "display_trees"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "simple_hierarchy_display_trees"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "current_element"), null)), (Object)ConstantBuilder.symbolBootstrap("symbol", "sw_component"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_popup_navigation_component"), (Object)ConstantBuilder.symbolBootstrap("symbol", "popup_frame"), (Object)ConstantBuilder.symbolBootstrap("symbol", "read"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_popup_navigation_component"), (Object)ConstantBuilder.symbolBootstrap("symbol", "current_element"), (Object)ConstantBuilder.symbolBootstrap("symbol", "read"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_popup_navigation_component"), (Object)ConstantBuilder.symbolBootstrap("symbol", "border?"), (Object)ConstantBuilder.symbolBootstrap("symbol", "boolean"), (Object)ConstantBuilder.stringBootstrap("string", "indicates whether a border must be displayed"), (Object)Boolean.TRUE, (Object)Boolean.FALSE, (Object)Boolean.FALSE));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_popup_navigation_component"), (Object)ConstantBuilder.symbolBootstrap("symbol", "outer_spacing"), (Object)ConstantBuilder.symbolBootstrap("symbol", "integer"), (Object)ConstantBuilder.stringBootstrap("string", "indicates the outer_spacing to be used"), (Object)Boolean.TRUE, (Object)Boolean.FALSE, (Object)0));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_popup_navigation_component"), (Object)ConstantBuilder.symbolBootstrap("symbol", "selection_message"), (Object)ConstantBuilder.symbolBootstrap("symbol", "object"), (Object)ConstantBuilder.stringBootstrap("string", "indicates the message to be sent to the framework upon selection"), (Object)Boolean.TRUE, (Object)Boolean.FALSE, null));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_popup_navigation_component"), (Object)ConstantBuilder.symbolBootstrap("symbol", "representation_message"), (Object)ConstantBuilder.symbolBootstrap("symbol", "object"), (Object)ConstantBuilder.stringBootstrap("string", "indicates the message to be sent to each element for text presentation"), (Object)Boolean.TRUE, (Object)Boolean.FALSE, (Object)ConstantBuilder.symbolBootstrap("symbol", "name")));
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_popup_navigation_component"), (Object)ConstantBuilder.symbolBootstrap("symbol", "simple_hierarchy?"), (Object)ConstantBuilder.symbolBootstrap("symbol", "boolean"), (Object)ConstantBuilder.stringBootstrap("string", "indicates that only a simple hierarchy must be displayed"), (Object)Boolean.TRUE, (Object)Boolean.FALSE, (Object)Boolean.FALSE));
        ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_popup_navigation_component"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_popup_navigation_component"), (Object)ConstantBuilder.symbolBootstrap("symbol", "simple_hierarchy_indent"), (Object)10, (Object)ConstantBuilder.symbolBootstrap("symbol", "private")));
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "new()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__new", 4, 3);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "init()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__init", 4, 4, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "build_gui()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__build_gui", 2, 2);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "text_activate()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__text_activate", 1, 1);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "text_cancel()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__text_cancel", 1, 1);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "text_focus_change()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__text_focus_change", 3, 3);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "inactive()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__inactive", 3, 3);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "button_caused_popdown()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__button_caused_popdown", 1, 1);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "current_element<<", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__current_element\\l\\l_", 2, 2);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "set_current_element()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__set_current_element", 3, 2);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "invoke_from_text_item()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__invoke_from_text_item", 1, 1);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "popup_from_button_item()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__popup_from_button_item", 1, 1);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "int!popup_from_button_item()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__int!popup_from_button_item", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "display_trees_for_tree_item", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__display_trees_for_tree_item_", 1, 1);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "cancel_popup()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__cancel_popup", 1, 1);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "display_tree_for_explorer_element()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__display_tree_for_explorer_element", 3, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "build_display_trees()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__build_display_trees", 2, 1);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "build_simple_hierarchy_display_trees()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__build_simple_hierarchy_display_trees", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "select_popup_element()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__select_popup_element", 3, 3);
        MagikObjectUtils.createMethod("explorer_popup_navigation_component", "int!selection_proc()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__int!selection_proc", 2, 2);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_popup_navigation_component", "sw_databus_data_available()", explorer_popup_navigation_component_24298.class, "explorer_popup_navigation_component__sw_databus_data_available", 3, 3));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_bar_plugin_24318 {
    @SourceHash(value=1601718998)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=58, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=59, index=2)})
    public static Object explorer_bar_plugin__init_actions(Object _self) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_bar_plugin__init_actions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="view_info", type=Object[].class, start=27, end=167, index=1)})
    public static Object __loopbody_(Object[] __env__, Object name, Object plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("bar_information", plugin), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "id")), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "caption")), ConstantBuilder.symbolBootstrap("symbol", "engine"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "action_message"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "set_view()"), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "id"))), ConstantBuilder.symbolBootstrap("symbol", "value"), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "id")))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1979735148)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=78, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=79, index=2)})
    public static Object explorer_bar_plugin__process_plugin_data(Object _self, Object xml_element) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_plugin_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrap("elements", xml_element)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_bar_plugin__process_plugin_data")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="name", type=Object[].class, start=51, end=82, index=1)})
    public static Object __loopbody_2(Object[] __env__, Object plugin_data) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (Invoker.bootstrap("type", plugin_data) == ConstantBuilder.symbolBootstrap("symbol", "handle")) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", plugin_data, ConstantBuilder.symbolBootstrap("symbol", "plugin_name"))), (Object[])__env__, (int)1);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrapPrivate("$slot_get_plugin_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1469081936)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="actual_plugins", type=Object.class, start=29, end=107, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=107, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=108, index=3)})
    public static Object explorer_bar_plugin__post_init_plugins(Object _self) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugin_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_bar_plugin__post_init_plugins")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="plugin", type=Object[].class, start=40, end=164, index=2)})
    public static Object __loopbody_3(Object[] __env__, Object plugin_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("plugin()", Invoker.bootstrapPrivate("framework", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), plugin_name);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)2);
            if (callSite == null) {
                ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write"), (Object)ConstantBuilder.stringBootstrap("string", "*** Warning: Can't find plugin "), (Object)plugin_name);
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            CallSite id = Invoker.bootstrap("\\b]", Invoker.bootstrap("bar_information", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), ConstantBuilder.symbolBootstrap("symbol", "id"));
            CallSite callSite2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("owner\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)callSite2));
            callSite2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)callSite2, (Object)id));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1924327504)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_bar_plugin__current_plugin_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)_self), (Object)Invoker.bootstrap("value", Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self))));
    }

    @SourceHash(value=-1032420309)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=53, end=91, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=45, end=110, index=1), @EnvVar(name="main_plugin", type=Object.class, start=31, end=110, index=5), @EnvVar(name="_self", type=Object.class, start=14, end=110, index=3), @EnvVar(name="container", type=Object.class, start=23, end=110, index=6)})
    public static Object explorer_bar_plugin__build_pre_plugins(Object _self, Object container, Object main_plugin) {
        ResultTuple resultTuple;
        Object[] __env__ = new Object[7];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)container, (Object[])__env__, (int)6);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)main_plugin, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
        return resultTuple;
    }

    @Parent(method="explorer_bar_plugin__build_pre_plugins")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="p_rc", type=Object[].class, start=87, end=168, index=2), @EnvVar(name="rc", type=Object[].class, start=266, end=269, index=4)})
    public static Object __loopbody_4(Object[] __env__, Object key, Object plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.is(plugin, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))) {
                if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4) != null) {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), Integer.valueOf(1), null, null, ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "left_spacing"), Integer.valueOf(2)), (Object[])__env__, (int)2);
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("new()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "panel_separator"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), (Object)ConstantBuilder.symbolBootstrap("symbol", "fill"), (Object)ConstantBuilder.symbolBootstrap("symbol", "vertical?"), (Object)Boolean.TRUE));
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("new()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "panel_separator"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), (Object)ConstantBuilder.symbolBootstrap("symbol", "fill"), (Object)ConstantBuilder.symbolBootstrap("symbol", "vertical?"), (Object)Boolean.TRUE));
                }
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(ResultTuple.EMPTY_TUPLE);
            }
            if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4) == null) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), Integer.valueOf(1), null, null, ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "col_spacing"), Integer.valueOf(4), ConstantBuilder.symbolBootstrap("symbol", "right_spacing"), Integer.valueOf(6)), (Object[])__env__, (int)4);
            }
            Integer n = 75;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("min_width\\l\\l", (Object)Invoker.bootstrap("place_control_on()", Invoker.bootstrapPrivate("action()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)key), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), ConstantBuilder.symbolBootstrap("symbol", "menu")), (Object)n));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1254650295)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=46, end=94, index=1), @EnvVar(name="found?", type=Object.class, start=38, end=94, index=0), @EnvVar(name="container", type=Object.class, start=22, end=95, index=5), @EnvVar(name="main_plugin", type=Object.class, start=30, end=95, index=3), @EnvVar(name="_self", type=Object.class, start=14, end=95, index=2)})
    public static Object explorer_bar_plugin__build_post_plugins(Object _self, Object container, Object main_plugin) {
        Object[] __env__ = new Object[8];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)container, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)main_plugin, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_bar_plugin__build_post_plugins")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="found?", type=Object[].class, start=38, end=51, index=0), @EnvVar(name="rc", type=Object[].class, start=145, end=279, index=7), @EnvVar(name="p_rc", type=Object[].class, start=196, end=279, index=6), @EnvVar(name="b", type=Object[].class, start=317, end=347, index=4)})
    public static Object __loopbody_5(Object[] __env__, Object key, Object plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (MagikObjectUtils.is(plugin, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.TRUE, (Object[])__env__, (int)0);
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0))) {
                if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7) == null) {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), Integer.valueOf(1), null, null, ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "left_spacing"), Integer.valueOf(6), ConstantBuilder.symbolBootstrap("symbol", "col_spacing"), Integer.valueOf(4)), (Object[])__env__, (int)7);
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), Integer.valueOf(1), null, null, ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "right_spacing"), Integer.valueOf(2)), (Object[])__env__, (int)6);
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("new()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "panel_separator"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), (Object)ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), (Object)ConstantBuilder.symbolBootstrap("symbol", "fill"), (Object)ConstantBuilder.symbolBootstrap("symbol", "vertical?"), (Object)Boolean.TRUE));
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("new()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "panel_separator"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), (Object)ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), (Object)ConstantBuilder.symbolBootstrap("symbol", "fill"), (Object)ConstantBuilder.symbolBootstrap("symbol", "vertical?"), (Object)Boolean.TRUE));
                }
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("place_control_on()", Invoker.bootstrapPrivate("action()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)key), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)7), ConstantBuilder.symbolBootstrap("symbol", "menu")), (Object[])__env__, (int)4);
                Integer n = 75;
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("min_width\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)n));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1002333660)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=149, index=1), @EnvVar(name="first?", type=Object.class, start=21, end=149, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=150, index=2)})
    public static Object explorer_bar_plugin__build_gui(Object _self, Object container, Object xml_element) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.TRUE, (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "window_stack"), container)));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_view()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("a_key()", Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)))));
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_get_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
    }

    @Parent(method="explorer_bar_plugin__build_gui")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="first?", type=Object[].class, start=197, end=200, index=0), @EnvVar(name="rc", type=Object[].class, start=82, end=310, index=3)})
    public static Object __loopbody_6(Object[] __env__, Object key, Object plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), Invoker.bootstrapPrivate("$slot_get_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), Integer.valueOf(1), null, null, ConstantBuilder.symbolBootstrap("symbol", "resize_x?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "resize_y?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "outer_spacing"), Integer.valueOf(4), ConstantBuilder.symbolBootstrap("symbol", "border?"), Boolean.TRUE), (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_named_child()", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)key));
            if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0))) {
                Object object = 6;
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("left_spacing\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)object));
                object = VectorBuilder.bootstrap("vb", Integer.valueOf(100), Integer.valueOf(0));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("col_resize_values\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)object));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)0);
            } else {
                CallSite callSite = VectorBuilder.bootstrap("vb", Integer.valueOf(0), Integer.valueOf(100));
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("col_resize_values\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)callSite));
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("build_pre_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)plugin));
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("build_gui()", (Object)plugin, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
            ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("build_post_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)plugin));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-159385338)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_bar_plugin__set_view(Object _self, Object a_view_name) {
        block1: {
            CallSite current_plugin;
            CallSite previous_plugin = Invoker.bootstrapPrivate("current_plugin", (Object)_self);
            Object object = a_view_name;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("value\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self), (Object)object));
            if (previous_plugin != null) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("bar_lost_focus()", (Object)previous_plugin));
            }
            if ((current_plugin = Invoker.bootstrapPrivate("current_plugin", (Object)_self)) == null) break block1;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("bar_gained_focus()", (Object)current_plugin));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_bar_plugin_24318.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_bar_plugin_24318.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_bar_plugin_24318.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_bar_plugin_24318.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_bar_plugin_24318.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_bar_plugin_24318.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_bar_plugin_24318;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_bar_plugin_24317
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_bar_plugin_24317() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_bar_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_bar_plugin"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin_data"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugins"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "stack"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_view_plugin_mixin")));
        MagikObjectUtils.createMethod("explorer_bar_plugin", "init_actions()", explorer_bar_plugin_24318.class, "explorer_bar_plugin__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_bar_plugin", "process_plugin_data()", explorer_bar_plugin_24318.class, "explorer_bar_plugin__process_plugin_data", 2, 2);
        MagikObjectUtils.createMethod("explorer_bar_plugin", "post_init_plugins()", explorer_bar_plugin_24318.class, "explorer_bar_plugin__post_init_plugins", 1, 1);
        MagikObjectUtils.createMethod("explorer_bar_plugin", "current_plugin", explorer_bar_plugin_24318.class, "explorer_bar_plugin__current_plugin_", 1, 1);
        MagikObjectUtils.createMethod("explorer_bar_plugin", "build_pre_plugins()", explorer_bar_plugin_24318.class, "explorer_bar_plugin__build_pre_plugins", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_bar_plugin", "build_post_plugins()", explorer_bar_plugin_24318.class, "explorer_bar_plugin__build_post_plugins", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_bar_plugin", "build_gui()", explorer_bar_plugin_24318.class, "explorer_bar_plugin__build_gui", 3, 2);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_bar_plugin", "set_view()", explorer_bar_plugin_24318.class, "explorer_bar_plugin__set_view", 2, 2));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.Invoker;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_bar_view_24334 {
    @SourceHash(value=502484790)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_bar_view__init(Object _self, Object name, Object framework) {
        return Invoker.superNaturalBootstrap("init()", "plugin", "sw", (Object)_self, (Object)name, (Object)framework);
    }

    @SourceHash(value=-299217363)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_bar_view__bar_information_(Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1077743217)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_bar_view__bar_lost_focus(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_bar_has_focus?()", (Object)_self, (Object)Boolean.FALSE));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=791223584)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_bar_view__bar_gained_focus(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_bar_has_focus?()", (Object)_self, (Object)Boolean.TRUE));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=915794501)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_bar_view__write_on(Object _self, Object a_stream) {
        Invoker.superNaturalBootstrap("write_on()", "plugin", "sw", (Object)_self, (Object)a_stream);
        return ResultTuple.EMPTY_TUPLE;
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_bar_view_24334;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_bar_view_24333
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_bar_view_24333() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_bar_view.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_bar_view"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "owner"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "bar_has_focus?"), Boolean.FALSE)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_view_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_bar_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)ConstantBuilder.symbolBootstrap("symbol", "write"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_bar_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "bar_has_focus?"), (Object)ConstantBuilder.symbolBootstrap("symbol", "read"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_bar_view", "init()", explorer_bar_view_24334.class, "explorer_bar_view__init", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_bar_view", "bar_information", explorer_bar_view_24334.class, "explorer_bar_view__bar_information_", 1, 1, false, true, false, 0);
        MagikObjectUtils.createMethod("explorer_bar_view", "bar_lost_focus()", explorer_bar_view_24334.class, "explorer_bar_view__bar_lost_focus", 1, 1);
        MagikObjectUtils.createMethod("explorer_bar_view", "bar_gained_focus()", explorer_bar_view_24334.class, "explorer_bar_view__bar_gained_focus", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_bar_view", "write_on()", explorer_bar_view_24334.class, "explorer_bar_view__write_on", 2, 2));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_address_bar_view_24357 {
    @SourceHash(value=-1729681011)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_address_bar_view__init(Object _self, Object name, Object framework) {
        Invoker.superNaturalBootstrap("init()", "explorer_bar_view", "sw", (Object)_self, (Object)name, (Object)framework);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_history_manager()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "history_manager"), ConstantBuilder.stringBootstrap("string", "history_manager"), framework)));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_items()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"))));
        return _self;
    }

    @SourceHash(value=827875249)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_address_bar_view__bar_information_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), (Object)ConstantBuilder.symbolBootstrap("symbol", "id"), (Object)ConstantBuilder.symbolBootstrap("symbol", "address"), (Object)ConstantBuilder.symbolBootstrap("symbol", "caption"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "address_bar"))));
    }

    @SourceHash(value=-1988740149)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=58, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=59, index=1)})
    public static Object explorer_address_bar_view__init_actions(Object _self) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("actions()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_history_manager()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_address_bar_view__init_actions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object action) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)action));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * WARNING - void declaration
     */
    @SourceHash(value=880587050)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_address_bar_view__build_gui(Object _self, Object container) {
        void var2_2;
        CallSite outer_rc = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), container, Integer.valueOf(1), null, null, ConstantBuilder.symbolBootstrap("symbol", "col_spacing"), Integer.valueOf(4), ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "col_resize_values"), VectorBuilder.bootstrap("vb", Integer.valueOf(100), Integer.valueOf(0)));
        CallSite inner_rc = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), outer_rc, Integer.valueOf(1), null, null, ConstantBuilder.symbolBootstrap("symbol", "col_spacing"), Integer.valueOf(4), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "col_resize_values"), VectorBuilder.bootstrap("vb", Integer.valueOf(0), Integer.valueOf(100)));
        Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "label_item"), inner_rc, Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "address")), ConstantBuilder.symbolBootstrap("symbol", "identifier"), ConstantBuilder.symbolBootstrap("symbol", "address_label"));
        CallSite callSite = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_popup_navigation_component"), ConstantBuilder.stringBootstrap("string", "popup"), _self, ConstantBuilder.symbolBootstrap("symbol", "simple_hierarchy?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "representation_message"), ConstantBuilder.symbolBootstrap("symbol", "path_name"), ConstantBuilder.symbolBootstrap("symbol", "selection_message"), ConstantBuilder.symbolBootstrap("symbol", "current_element<<"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "address_input")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("build_gui()", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "address_input")), (Object)inner_rc));
        callSite = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "image_button_item"), outer_rc, Invoker.bootstrap("get_raster_image()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "smallworld_product"), ConstantBuilder.symbolBootstrap("symbol", "go_address"), Invoker.bootstrapPrivate("module_name", (Object)_self)), _self, ConstantBuilder.symbolBootstrap("symbol", "go()"), ConstantBuilder.symbolBootstrap("symbol", "balloon_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_address_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_address_sh")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "allow_keyboard_navigation?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "right"), ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "top"), ConstantBuilder.symbolBootstrap("symbol", "identifier"), ConstantBuilder.symbolBootstrap("symbol", "free_search"));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "address_go")));
        return var2_2;
    }

    @SourceHash(value=693068855)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_address_bar_view__post_init_plugins(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_event_handler()", (Object)Invoker.bootstrapPrivate("$slot_get_history_manager()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "current_state"), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "set_from_history()")));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=46774909)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_address_bar_view__current_element\l\l_(Object _self, Object an_element) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("go()", (Object)_self, (Object)an_element));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=2034193109)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_address_bar_view__go(Object _self, Object element) {
        if (element == null) {
            element = Invoker.bootstrap("current_element", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "address_input")));
        }
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)element));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1489045086)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_address_bar_view__set_from_history(Object _self, Object an_explorer_element) {
        block0: {
            if (an_explorer_element == null) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)an_explorer_element));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=756335554)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_address_bar_view__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block6: {
            Object object;
            CallSite current_element;
            block5: {
                current_element = null;
                if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) break block5;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("clear()", (Object)Invoker.bootstrapPrivate("$slot_get_history_manager()", (Object)_self)));
                break block6;
            }
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")) break block6;
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
            resultTuple.pop();
            Object selection = resultTuple.pop();
            CallSite callSite = Invoker.bootstrap("activated?", selection);
            if (MagikObjectUtils.should_be_boolean(callSite) && !MagikObjectUtils.should_be_boolean(callSite = Invoker.bootstrap("is_group?", selection))) {
                callSite = Invoker.bootstrap("is_collection?", selection);
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                CallSite new_state = Invoker.bootstrap("an_explorer_element()", selection);
                if (MagikObjectUtils.isnt(Invoker.bootstrap("current_state", Invoker.bootstrapPrivate("$slot_get_history_manager()", (Object)_self)), new_state)) {
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_state()", (Object)Invoker.bootstrapPrivate("$slot_get_history_manager()", (Object)_self), (Object)new_state));
                }
            }
            if (MagikObjectUtils.should_be_boolean(object = Invoker.bootstrap("activated?", selection))) {
                current_element = Invoker.bootstrap("an_explorer_element()", selection);
                object = new Boolean(MagikObjectUtils.isnt(current_element, null));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_current_element()", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "address_input")), (Object)current_element));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_address_bar_view_24357.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_address_bar_view_24357;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_address_bar_view_24356
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_address_bar_view_24356() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_address_bar_view.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_address_bar_view"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "history_manager"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "items"), null)), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_bar_view"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_address_bar_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_address_bar_view", "init()", explorer_address_bar_view_24357.class, "explorer_address_bar_view__init", 3, 3);
        MagikObjectUtils.createMethod("explorer_address_bar_view", "bar_information", explorer_address_bar_view_24357.class, "explorer_address_bar_view__bar_information_", 1, 1);
        MagikObjectUtils.createMethod("explorer_address_bar_view", "init_actions()", explorer_address_bar_view_24357.class, "explorer_address_bar_view__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_address_bar_view", "build_gui()", explorer_address_bar_view_24357.class, "explorer_address_bar_view__build_gui", 2, 2);
        MagikObjectUtils.createMethod("explorer_address_bar_view", "post_init_plugins()", explorer_address_bar_view_24357.class, "explorer_address_bar_view__post_init_plugins", 1, 1);
        MagikObjectUtils.createMethod("explorer_address_bar_view", "current_element<<", explorer_address_bar_view_24357.class, "explorer_address_bar_view__current_element\\l\\l_", 2, 2);
        MagikObjectUtils.createMethod("explorer_address_bar_view", "go()", explorer_address_bar_view_24357.class, "explorer_address_bar_view__go", 2, 1);
        MagikObjectUtils.createMethod("explorer_address_bar_view", "set_from_history()", explorer_address_bar_view_24357.class, "explorer_address_bar_view__set_from_history", 2, 2);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_address_bar_view", "sw_databus_data_available()", explorer_address_bar_view_24357.class, "explorer_address_bar_view__sw_databus_data_available", 3, 3));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_input_plugin_24383 {
    @SourceHash(value=-864489109)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="actions", type=Object.class, start=21, end=269, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=269, index=0)})
    public static Object explorer_input_plugin__init_actions(Object _self) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "close"), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "close_tt")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "close_input"), Invoker.bootstrapPrivate("module_name", (Object)_self)), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "close_input()"))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)_self)));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "input_switch"), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "value_change_message"), ConstantBuilder.symbolBootstrap("symbol", "set_view()"), ConstantBuilder.symbolBootstrap("symbol", "next_value_message"), ConstantBuilder.symbolBootstrap("symbol", "next_view()"), ConstantBuilder.symbolBootstrap("symbol", "actions"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "always_one?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "toolbar_control"), ConstantBuilder.symbolBootstrap("symbol", "image_radio_set"), ConstantBuilder.symbolBootstrap("symbol", "menubar_control"), ConstantBuilder.symbolBootstrap("symbol", "radio_set"), ConstantBuilder.symbolBootstrap("symbol", "dialog_control"), ConstantBuilder.symbolBootstrap("symbol", "radio_set"), ConstantBuilder.symbolBootstrap("symbol", "value"), Invoker.bootstrapPrivate("$slot_get_default_view_name()", (Object)_self))));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("initialise_proxy_actions()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_input_plugin__init_actions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="view_info", type=Object[].class, start=27, end=199, index=2)})
    public static Object __loopbody_(Object[] __env__, Object name, Object plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("view_information", plugin), (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "id")), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "name")), ConstantBuilder.symbolBootstrap("symbol", "image"), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "image")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "tooltip")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "short_help_text")), ConstantBuilder.symbolBootstrap("symbol", "toolbar_control"), ConstantBuilder.symbolBootstrap("symbol", "image_toggle_item"), ConstantBuilder.symbolBootstrap("symbol", "value"), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), ConstantBuilder.symbolBootstrap("symbol", "id")))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1310220383)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_plugin__initialise_proxy_actions(Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-164617567)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=79, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=80, index=2)})
    public static Object explorer_input_plugin__process_plugin_data(Object _self, Object xml_element) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_plugin_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrap("elements", xml_element)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_input_plugin__process_plugin_data")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="name", type=Object[].class, start=51, end=135, index=1)})
    public static Object __loopbody_2(Object[] __env__, Object plugin_data) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (Invoker.bootstrap("type", plugin_data) == ConstantBuilder.symbolBootstrap("symbol", "handle")) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", plugin_data, ConstantBuilder.symbolBootstrap("symbol", "plugin_name"))), (Object[])__env__, (int)1);
                if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("attribute()", plugin_data, ConstantBuilder.symbolBootstrap("symbol", "default")), ConstantBuilder.stringBootstrap("string", "yes")))) {
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_default_view_name()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
                }
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrapPrivate("$slot_get_plugin_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1994228674)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=36, end=119, index=0), @EnvVar(name="actual_plugins", type=Object.class, start=44, end=119, index=1), @EnvVar(name="_self", type=Object.class, start=13, end=126, index=2)})
    public static Object explorer_input_plugin__post_init_plugins(Object _self) {
        block0: {
            Object[] __env__ = new Object[4];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
            if (Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)) != null) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugin_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_input_plugin__post_init_plugins")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="plugin", type=Object[].class, start=40, end=253, index=3)})
    public static Object __loopbody_3(Object[] __env__, Object plugin_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("plugin()", Invoker.bootstrapPrivate("framework", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), plugin_name);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)3);
            if (callSite == null) {
                ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write"), (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "cant_find_plugin"), (Object)plugin_name));
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            CallSite id = Invoker.bootstrap("\\b]", Invoker.bootstrap("view_information", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), ConstantBuilder.symbolBootstrap("symbol", "id"));
            Object object = BinaryDispatcher.bootstrap("=", Invoker.bootstrapPrivate("$slot_get_default_view_name()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), plugin_name);
            if (!MagikObjectUtils.should_be_boolean(object)) {
                object = new Boolean(MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_default_view_name()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), null));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_default_view_name()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)id));
            }
            CallSite callSite2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("owner\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)callSite2));
            callSite2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)callSite2, (Object)id));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=942022311)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_plugin__current_plugin_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)_self), (Object)Invoker.bootstrap("value", Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self))));
    }

    @SourceHash(value=-871800978)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=198, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=199, index=1)})
    public static Object explorer_input_plugin__build_gui(Object _self, Object container, Object xml_element) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("process_xml_width_height()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)xml_element, (Object)100, (Object)100));
        resultTuple.pop();
        Object width = resultTuple.pop();
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "window_stack"), container)));
        Object object = width;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("width\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), (Object)object));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_view()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrapPrivate("$slot_get_default_view_name()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_get_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
    }

    @Parent(method="explorer_input_plugin__build_gui")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="top_rc", type=Object[].class, start=227, end=557, index=3), @EnvVar(name="rc", type=Object[].class, start=66, end=557, index=2), @EnvVar(name="ib", type=Object[].class, start=396, end=557, index=4)})
    public static Object __loopbody_4(Object[] __env__, Object key, Object plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite plugin_name = Invoker.bootstrap("\\b]", Invoker.bootstrap("view_information", plugin), ConstantBuilder.symbolBootstrap("symbol", "name"));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), Invoker.bootstrapPrivate("$slot_get_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), null, Integer.valueOf(1)), (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_named_child()", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)key));
            Object object = Boolean.TRUE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("resize_x?\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)object));
            object = Boolean.TRUE;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("resize_y?\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)object));
            object = ConstantBuilder.symbolBootstrap("symbol", "fill");
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("default_row_alignment\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)object));
            object = ConstantBuilder.symbolBootstrap("symbol", "fill");
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("default_col_alignment\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)object));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), Integer.valueOf(1)), (Object[])__env__, (int)3);
            object = ConstantBuilder.symbolBootstrap("symbol", "fill");
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("col_alignment\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)object));
            object = VectorBuilder.bootstrap("vb", Integer.valueOf(0), Integer.valueOf(100));
            ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("col_resize_values\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)object));
            ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("new()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "label_item"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), ConstantBuilder.stringBootstrap("string", "  "), plugin_name), (Object)ConstantBuilder.symbolBootstrap("symbol", "identifier"), (Object)Invoker.bootstrap("as_symbol()", ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), plugin_name, ConstantBuilder.stringBootstrap("string", "_switch")))));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("place_control_on()", Invoker.bootstrapPrivate("action()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)ConstantBuilder.symbolBootstrap("symbol", "close")), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), ConstantBuilder.symbolBootstrap("symbol", "toolbar")), (Object[])__env__, (int)4);
            ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_property()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ConstantBuilder.symbolBootstrap("symbol", "has_border?"), (Object)Boolean.FALSE));
            object = Invoker.bootstrap("as_symbol()", ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), plugin_name, ConstantBuilder.stringBootstrap("string", "_close")));
            ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrap("identifier\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)object));
            object = ConstantBuilder.symbolBootstrap("symbol", "right");
            ResultTuple cfr_ignored_10 = (ResultTuple)((Object)Invoker.tupleBootstrap("col_alignment\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)object));
            ResultTuple cfr_ignored_11 = (ResultTuple)((Object)Invoker.tupleBootstrap("new()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "panel_separator"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), (Object)ConstantBuilder.symbolBootstrap("symbol", "fill"), (Object)ConstantBuilder.symbolBootstrap("symbol", "bottom_spacing"), (Object)4));
            ResultTuple cfr_ignored_12 = (ResultTuple)((Object)Invoker.tupleBootstrap("build_gui()", (Object)plugin, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1972083506)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_plugin__set_view(Object _self, Object a_view_name) {
        block5: {
            CallSite an_action;
            CallSite current_plugin;
            block4: {
                if (!MagikObjectUtils.should_be_boolean(new Boolean(MagikObjectUtils.is(a_view_name, null)))) break block4;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("close_input()", (Object)_self));
                break block5;
            }
            if (Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self) == null) {
                return ResultTuple.EMPTY_TUPLE;
            }
            CallSite previous_plugin = Invoker.bootstrapPrivate("current_plugin", (Object)_self);
            if (Invoker.bootstrap("value", Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self)) != null) {
                Object object = Invoker.bootstrapPrivate("$slot_get_stack_width()", (Object)_self);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("min_width\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self), (Object)object));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("manage()", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self)));
                object = 0;
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("min_width\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self), (Object)object));
            }
            Object object = a_view_name;
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("value\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self), (Object)object));
            if (previous_plugin != null) {
                ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("input_lost_focus()", (Object)previous_plugin));
            }
            if ((current_plugin = Invoker.bootstrapPrivate("current_plugin", (Object)_self)) != null) {
                ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("input_gained_focus()", (Object)current_plugin));
            }
            if ((an_action = Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "input_switch"))) == null) break block5;
            Object object2 = a_view_name;
            ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("value\\l\\l", (Object)an_action, (Object)object2));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1840697009)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_plugin__close_input(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_value()", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "input_switch")), null));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_stack_width()", (Object)_self, (Object)Invoker.bootstrap("width", Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("unmanage()", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=2016467272)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=99, end=261, index=0), @EnvVar(name="index", type=Object[].class, start=261, end=264, index=1), @EnvVar(name="__leave_catcher__", type=Object[].class, start=113, end=264, index=4), @EnvVar(name="as", type=Object[].class, start=36, end=303, index=3), @EnvVar(name="index", type=Object[].class, start=275, end=303, index=1), @EnvVar(name="__leave_catcher__", type=Object[].class, start=275, end=303, index=4), @EnvVar(name="value", type=Object.class, start=13, end=303, index=2)})
    public static Object explorer_input_plugin__next_view(Object _self, Object value) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)value, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("actions", Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "input_switch"))), (Object[])__env__, (int)3);
        boolean bl = MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), null);
        Object object = new Boolean(bl);
        if (!bl) {
            object = Invoker.bootstrap("empty?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3));
        }
        if (MagikObjectUtils.should_be_boolean(object)) {
            return null;
        }
        if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2) != null) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)4);
            try {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("upto()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)1, (Object)Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))));
            }
            catch (LeaveCatcher.Leave leave) {
                ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).getLeaveResult(leave);
            }
            boolean bl2 = MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), null);
            Boolean bl3 = new Boolean(bl2);
            if (!bl2) {
                bl3 = new Boolean(MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))));
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)(MagikObjectUtils.should_be_boolean(bl3) ? Integer.valueOf(1) : BinaryDispatcher.bootstrap("+", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), Integer.valueOf(1))), (Object[])__env__, (int)1);
        } else {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)1, (Object[])__env__, (int)1);
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrap("value", (Object)Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
    }

    @Parent(method="explorer_input_plugin__next_view")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="index", type=Object[].class, start=53, end=71, index=1)})
    public static Object __loopbody_5(Object[] __env__, Object i) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.is(Invoker.bootstrap("value", Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), i)), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)i, (Object[])__env__, (int)1);
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1552146586)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_plugin__post_activation(Object _self) {
        block0: {
            CallSite max_value;
            CallSite callSite = max_value = Invoker.bootstrap("max_width", Invoker.bootstrapPrivate("top_frame", (Object)_self)) != null ? BinaryDispatcher.bootstrap("div", Invoker.bootstrap("max_width", Invoker.bootstrapPrivate("top_frame", (Object)_self)), Integer.valueOf(2)) : BinaryDispatcher.bootstrap("div", Invoker.bootstrap("screen_size_pixels()", DynamicAccessor.bootstrapFetcher("!window_system!", "sw")), Integer.valueOf(2));
            if (!MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("width", Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self)), max_value))) break block0;
            CallSite callSite2 = max_value;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("width\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self), (Object)callSite2));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_view()", (Object)_self, (Object)Invoker.bootstrap("value", Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self))));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1763094170)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_plugin__set_search_current_element(Object _self, Object an_element) {
        block0: {
            CallSite search_plugin = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "search"));
            if (search_plugin == null) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_current_element()", (Object)search_plugin, (Object)an_element));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_input_plugin_24383.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_input_plugin_24383.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_input_plugin_24383.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_input_plugin_24383.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_input_plugin_24383.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_input_plugin_24383;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_input_plugin_24382
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_input_plugin_24382() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_input_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_input_plugin"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin_data"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "default_view_name"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugins"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "stack"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "stack_width"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_view_plugin_mixin")));
        MagikObjectUtils.createMethod("explorer_input_plugin", "init_actions()", explorer_input_plugin_24383.class, "explorer_input_plugin__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_input_plugin", "initialise_proxy_actions()", explorer_input_plugin_24383.class, "explorer_input_plugin__initialise_proxy_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_input_plugin", "process_plugin_data()", explorer_input_plugin_24383.class, "explorer_input_plugin__process_plugin_data", 2, 2);
        MagikObjectUtils.createMethod("explorer_input_plugin", "post_init_plugins()", explorer_input_plugin_24383.class, "explorer_input_plugin__post_init_plugins", 1, 1);
        MagikObjectUtils.createMethod("explorer_input_plugin", "current_plugin", explorer_input_plugin_24383.class, "explorer_input_plugin__current_plugin_", 1, 1);
        MagikObjectUtils.createMethod("explorer_input_plugin", "build_gui()", explorer_input_plugin_24383.class, "explorer_input_plugin__build_gui", 3, 2);
        MagikObjectUtils.createMethod("explorer_input_plugin", "set_view()", explorer_input_plugin_24383.class, "explorer_input_plugin__set_view", 2, 2);
        MagikObjectUtils.createMethod("explorer_input_plugin", "close_input()", explorer_input_plugin_24383.class, "explorer_input_plugin__close_input", 1, 1);
        MagikObjectUtils.createMethod("explorer_input_plugin", "next_view()", explorer_input_plugin_24383.class, "explorer_input_plugin__next_view", 2, 2);
        MagikObjectUtils.createMethod("explorer_input_plugin", "post_activation()", explorer_input_plugin_24383.class, "explorer_input_plugin__post_activation", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_input_plugin", "set_search_current_element()", explorer_input_plugin_24383.class, "explorer_input_plugin__set_search_current_element", 2, 2));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.Invoker;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_input_view_24403 {
    @SourceHash(value=656960037)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_view__init(Object _self, Object name, Object framework) {
        return Invoker.superNaturalBootstrap("init()", "plugin", "sw", (Object)_self, (Object)name, (Object)framework);
    }

    @SourceHash(value=1477194037)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_view__view_information_(Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=114879484)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_view__owner\l\l_(Object _self, Object an_owner) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_input_has_focus?()", (Object)_self, (Object)Boolean.FALSE));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-26738685)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_view__input_lost_focus(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_input_has_focus?()", (Object)_self, (Object)Boolean.FALSE));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-2107875646)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_view__input_gained_focus(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_input_has_focus?()", (Object)_self, (Object)Boolean.TRUE));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1418670731)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_view__manage_actions(Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-351803268)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_input_view__write_on(Object _self, Object a_stream) {
        Invoker.superNaturalBootstrap("write_on()", "plugin", "sw", (Object)_self, (Object)a_stream);
        return ResultTuple.EMPTY_TUPLE;
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_input_view_24403;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_input_view_24402
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_input_view_24402() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_input_view.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_input_view"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "owner"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "input_has_focus?"), Boolean.TRUE)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_view_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_input_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)ConstantBuilder.symbolBootstrap("symbol", "write"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_input_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "input_has_focus?"), (Object)ConstantBuilder.symbolBootstrap("symbol", "read"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_input_view", "init()", explorer_input_view_24403.class, "explorer_input_view__init", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_input_view", "view_information", explorer_input_view_24403.class, "explorer_input_view__view_information_", 1, 1, false, true, false, 0);
        MagikObjectUtils.createMethod("explorer_input_view", "owner<<", explorer_input_view_24403.class, "explorer_input_view__owner\\l\\l_", 2, 2);
        MagikObjectUtils.createMethod("explorer_input_view", "input_lost_focus()", explorer_input_view_24403.class, "explorer_input_view__input_lost_focus", 1, 1);
        MagikObjectUtils.createMethod("explorer_input_view", "input_gained_focus()", explorer_input_view_24403.class, "explorer_input_view__input_gained_focus", 1, 1);
        MagikObjectUtils.createMethod("explorer_input_view", "manage_actions()", explorer_input_view_24403.class, "explorer_input_view__manage_actions", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_input_view", "write_on()", explorer_input_view_24403.class, "explorer_input_view__write_on", 2, 2));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_navigation_input_view_24449 {
    @SourceHash(value=1983032792)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__init_actions(Object _self) {
        CallSite mod_name = Invoker.bootstrapPrivate("module_name", (Object)_self);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "explore"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explore")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explore_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explore_sh")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "explore()"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "up"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "up")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "up_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "up_sh")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "navigation_up"), mod_name), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "up()"))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "rename"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "rename")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "rename_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "rename_sh")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "rename()"))));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook_sh")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook()"))));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "delete"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "clear")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "clear_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "clear_sh")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "clear"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "clear()"))));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "delete_all"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "clear_all")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "clear_all_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "clear_all_sh")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "clear"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "clear_all()"))));
        Invoker.superNaturalBootstrap("init_actions()", "explorer_input_view", "sw", (Object)_self);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-325535988)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__display_trees_(Object _self) {
        return VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("$slot_get_display_tree()", (Object)_self));
    }

    @SourceHash(value=1335289203)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__view_information_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), (Object)ConstantBuilder.symbolBootstrap("symbol", "id"), (Object)ConstantBuilder.symbolBootstrap("symbol", "folders"), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "folders")), (Object)ConstantBuilder.symbolBootstrap("symbol", "tooltip"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "folders_tt")), (Object)ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "folders_sh")), (Object)ConstantBuilder.symbolBootstrap("symbol", "image"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "show_folders"), Invoker.bootstrapPrivate("module_name", (Object)_self))));
    }

    @SourceHash(value=-1639848534)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__build_gui(Object _self, Object container, Object xml_element) {
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("process_xml_width_height()", (Object)_self, (Object)xml_element, (Object)200, (Object)100));
        Object height = resultTuple.pop();
        Object width = resultTuple.pop();
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_tree_item()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "tree_item"), container, ConstantBuilder.symbolBootstrap("symbol", "model"), _self, ConstantBuilder.symbolBootstrap("symbol", "module_name"), Invoker.bootstrapPrivate("module_name", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "aspect"), ConstantBuilder.symbolBootstrap("symbol", "display_tree"), ConstantBuilder.symbolBootstrap("symbol", "data_selector"), ConstantBuilder.symbolBootstrap("symbol", "display_trees"), ConstantBuilder.symbolBootstrap("symbol", "select_notifier"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "handler"), _self, ConstantBuilder.symbolBootstrap("symbol", "tree_item_select()")), ConstantBuilder.symbolBootstrap("symbol", "allow_dragging_notifier"), ConstantBuilder.symbolBootstrap("symbol", "drag_start()"), ConstantBuilder.symbolBootstrap("symbol", "release_dragging_notifier"), ConstantBuilder.symbolBootstrap("symbol", "drag_end()"), ConstantBuilder.symbolBootstrap("symbol", "key_pressed_notifier"), ConstantBuilder.symbolBootstrap("symbol", "handle_tree_key_press()"), ConstantBuilder.symbolBootstrap("symbol", "editor_required_notifier"), ConstantBuilder.symbolBootstrap("symbol", "editor_required()"), ConstantBuilder.symbolBootstrap("symbol", "edit_on_click?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "mode"), ConstantBuilder.symbolBootstrap("symbol", "one"), ConstantBuilder.symbolBootstrap("symbol", "width"), width, ConstantBuilder.symbolBootstrap("symbol", "height"), height, ConstantBuilder.symbolBootstrap("symbol", "resize_x?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "resize_y?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "show_focus?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "identifier"), ConstantBuilder.symbolBootstrap("symbol", "navigation_tree_item"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_property()", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "borderless"), (Object)Boolean.TRUE));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_popup_menu()", (Object)_self));
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_get_tree_item()", (Object)_self));
    }

    @SourceHash(value=-1386005941)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__post_init_plugins(Object _self) {
        block0: {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_first_time?()", (Object)_self, (Object)Boolean.TRUE));
            CallSite exp_elem = Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"));
            if (exp_elem == null) break block0;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_display_tree()", (Object)_self, (Object)Invoker.bootstrap("as_display_tree()", exp_elem)));
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("expanded?\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_display_tree()", (Object)_self), (Object)bl));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=279010112)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__tree_item_select(Object _self, Object selection, Object object) {
        Object object2 = object;
        if (MagikObjectUtils.should_be_boolean(object2)) {
            object2 = Invoker.bootstrap("not", Invoker.bootstrap("empty?", selection));
        }
        if (MagikObjectUtils.should_be_boolean(object2)) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)Invoker.bootstrap("key", Invoker.bootstrap("an_element()", selection))));
        } else {
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1737379777)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__up(Object _self) {
        CallSite parent_element = Invoker.bootstrap("parent", Invoker.bootstrapPrivate("current_explorer_element", (Object)_self));
        if (parent_element != null) {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("empty?", Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)))))) {
                Boolean bl = Boolean.TRUE;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("selected?\\l\\l", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_display_tree()", (Object)_self), parent_element), (Object)bl));
            }
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)parent_element));
        } else {
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)Invoker.bootstrapPrivate("current_explorer_element", (Object)_self)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1537127103)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__manage_actions(Object _self) {
        CallSite callSite;
        CallSite selection = Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self));
        CallSite current_element = MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("empty?", selection))) ? Invoker.bootstrap("key", Invoker.bootstrap("an_element()", selection)) : Invoker.bootstrapPrivate("current_explorer_element", (Object)_self);
        if (current_element == null) {
            return ResultTuple.EMPTY_TUPLE;
        }
        CallSite callSite2 = Invoker.bootstrapPrivate("input_has_focus?", (Object)_self);
        if (MagikObjectUtils.should_be_boolean(callSite2)) {
            callSite2 = Invoker.bootstrap("not", Invoker.bootstrap("empty?", selection));
        }
        CallSite callSite3 = callSite = callSite2;
        CallSite callSite4 = callSite;
        CallSite callSite5 = callSite;
        CallSite callSite6 = callSite;
        if (MagikObjectUtils.should_be_boolean(callSite6)) {
            callSite6 = Invoker.bootstrap("not", Invoker.bootstrap("definitely_empty?", current_element));
        }
        CallSite callSite7 = callSite6;
        boolean bl = MagikObjectUtils.isnt(current_element, null);
        Boolean bl2 = new Boolean(bl);
        if (bl) {
            bl2 = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("parent", current_element), null));
        }
        Object object = bl2;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "up")), (Object)object));
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            CallSite element = Invoker.bootstrap("key", Invoker.bootstrap("an_element()", selection));
            CallSite plugin = Invoker.bootstrap("owner", element);
            callSite3 = Invoker.bootstrap("action_allowed?()", plugin, ConstantBuilder.symbolBootstrap("symbol", "delete_all"), element);
            callSite = Invoker.bootstrap("action_allowed?()", plugin, ConstantBuilder.symbolBootstrap("symbol", "delete"), element);
            callSite5 = Invoker.bootstrap("action_allowed?()", plugin, ConstantBuilder.symbolBootstrap("symbol", "rename"), element);
            if (MagikObjectUtils.should_be_boolean(callSite7)) {
                callSite7 = Invoker.bootstrap("start_move_action_allowed?()", plugin, ConstantBuilder.symbolBootstrap("symbol", "copy"), element, Invoker.bootstrap("root", element));
            }
        }
        object = callSite4;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explore")), (Object)object));
        object = callSite5;
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "rename")), (Object)object));
        object = callSite;
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete")), (Object)object));
        object = callSite3;
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete_all")), (Object)object));
        object = callSite7;
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook")), (Object)object));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1276898693)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__drag_start(Object _self, Object display_tree, Object row, Object column, Object display_tree_selection, Object event, Object request_type, Object object) {
        Object object2;
        block2: {
            CallSite source_element = Invoker.bootstrap("key", Invoker.bootstrap("an_element()", display_tree_selection));
            CallSite source_plugin = Invoker.bootstrap("owner", source_element);
            CallSite target_element = Invoker.bootstrap("key", display_tree);
            CallSite target_plugin = Invoker.bootstrap("owner", target_element);
            ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrap("operation_allowed_to?()", (Object)source_element, (Object)target_element, (Object)request_type));
            Object new_request_type = resultTuple.pop();
            object2 = resultTuple.pop();
            if (!MagikObjectUtils.should_be_boolean(object2)) break block2;
            request_type = Invoker.bootstrap("default()", new_request_type, request_type);
            ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrap("start_move_action_allowed?()", (Object)source_plugin, (Object)request_type, (Object)source_element, (Object)target_element));
            new_request_type = resultTuple2.pop();
            if (MagikObjectUtils.should_be_boolean(resultTuple2.pop())) {
                request_type = Invoker.bootstrap("default()", new_request_type, request_type);
                ResultTuple resultTuple3 = (ResultTuple)((Object)Invoker.tupleBootstrap("end_move_action_allowed?()", (Object)target_plugin, (Object)request_type, (Object)source_element, (Object)target_element));
                new_request_type = resultTuple3.pop();
                object2 = resultTuple3.pop();
                request_type = Invoker.bootstrap("default()", new_request_type, request_type);
            } else {
                object2 = Boolean.FALSE;
            }
        }
        return TupleBuilder.bootstrap("tb", object2, request_type);
    }

    @SourceHash(value=1444029487)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__drag_end(Object _self, Object display_tree, Object row, Object column, Object display_tree_selection, Object event, Object action_type) {
        block0: {
            CallSite source_element = Invoker.bootstrap("key", Invoker.bootstrap("an_element()", display_tree_selection));
            CallSite target_element = Invoker.bootstrap("key", display_tree);
            CallSite new_element = Invoker.bootstrap("do_move_action()", Invoker.bootstrap("owner", target_element), action_type, source_element, target_element);
            CallSite display = Invoker.bootstrapPrivate("display_tree_for_explorer_element()", (Object)_self, (Object)new_element);
            if (display == null) break block0;
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("selected?\\l\\l", (Object)display, (Object)bl));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)new_element));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-122064611)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=84, end=132, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=157, index=4), @EnvVar(name="__return_catcher__", type=Object[].class, start=35, end=157, index=3), @EnvVar(name="an_explorer_element", type=Object.class, start=21, end=157, index=1)})
    public static Object explorer_navigation_input_view__display_tree_for_explorer_element(Object _self, Object an_explorer_element, Object from_tree) {
        ResultTuple resultTuple;
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)an_explorer_element, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)3);
        try {
            from_tree = Invoker.bootstrap("default()", from_tree, Invoker.bootstrapPrivate("$slot_get_display_tree()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("lazy_children?", Invoker.bootstrap("key", from_tree))))) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)from_tree));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)from_tree));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).getReturnResult(return_);
        }
        return resultTuple;
    }

    @Parent(method="explorer_navigation_input_view__display_tree_for_explorer_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.is(Invoker.bootstrap("key", child), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).makeReturn(child);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_navigation_input_view__display_tree_for_explorer_element")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="display_tree", type=Object[].class, start=42, end=76, index=2)})
    public static Object __loopbody_2(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrapPrivate("display_tree_for_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)child);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)2);
            if (callSite != null) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).makeReturn(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1988333723)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block12: {
            block13: {
                block11: {
                    if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")) break block11;
                    ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
                    Object selection = resultTuple.pop();
                    if (MagikObjectUtils.isnt(resultTuple.pop(), _self)) {
                        CallSite explorer_tree = Invoker.bootstrapPrivate("display_tree_for_explorer_element()", (Object)_self, (Object)Invoker.bootstrap("an_explorer_element()", selection));
                        Object object = Invoker.bootstrapPrivate("input_has_focus?", (Object)_self);
                        if (MagikObjectUtils.should_be_boolean(object)) {
                            object = new Boolean(MagikObjectUtils.isnt(explorer_tree, null));
                        }
                        if (MagikObjectUtils.should_be_boolean(object)) {
                            Object object2;
                            boolean bl = MagikObjectUtils.isnt(explorer_tree, null);
                            Object object3 = new Boolean(bl);
                            if (bl) {
                                object3 = object2 = Invoker.bootstrap("activated?", selection);
                            }
                            if (MagikObjectUtils.should_be_boolean(object3)) {
                                object2 = Invoker.bootstrap("notify_input?", selection);
                            }
                            if (MagikObjectUtils.should_be_boolean(object2)) {
                                Boolean bl2 = Boolean.TRUE;
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("selected?\\l\\l", (Object)explorer_tree, (Object)bl2));
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("$slot_get_first_time?()", (Object)_self))) {
                                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)Invoker.bootstrap("an_explorer_element()", selection)));
                                }
                                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_first_time?()", (Object)_self, (Object)Boolean.FALSE));
                            }
                        } else {
                            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("empty()", (Object)Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
                            CallSite callSite = Invoker.bootstrap("an_explorer_element()", selection);
                            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("current_explorer_element\\l\\l", (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)callSite));
                            if (explorer_tree != null) {
                                Boolean bl = Boolean.TRUE;
                                ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("visible?\\l\\l", (Object)explorer_tree, (Object)bl));
                                bl = Boolean.TRUE;
                                ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("expanded?\\l\\l", (Object)explorer_tree, (Object)bl));
                            }
                        }
                    }
                    ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self));
                    break block12;
                }
                if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) break block13;
                ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_display_tree()", (Object)_self, (Object)Invoker.bootstrap("as_display_tree()", data, null, Boolean.TRUE)));
                boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("current_explorer_element", (Object)_self), null);
                Boolean bl3 = new Boolean(bl);
                if (bl) {
                    bl3 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("parent", Invoker.bootstrapPrivate("current_explorer_element", (Object)_self)), null));
                }
                if (MagikObjectUtils.should_be_boolean(bl3)) {
                    Boolean bl4 = Boolean.TRUE;
                    ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrap("selection\\l\\l", (Object)Invoker.bootstrap("int!first_child", Invoker.bootstrapPrivate("$slot_get_display_tree()", (Object)_self)), (Object)bl4));
                    ResultTuple cfr_ignored_10 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)Invoker.bootstrap("key", Invoker.bootstrap("int!first_child", Invoker.bootstrapPrivate("$slot_get_display_tree()", (Object)_self)))));
                }
                ResultTuple cfr_ignored_11 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "display_tree"), (Object)ConstantBuilder.symbolBootstrap("symbol", "refresh")));
                break block12;
            }
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "refresh")) break block12;
            ResultTuple cfr_ignored_12 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "display_tree")));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=2029200283)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__setup_popup_menu(Object _self) {
        block0: {
            CallSite popup = Invoker.bootstrapPrivate("defined_popup_menu_for()", (Object)_self, (Object)Invoker.bootstrapPrivate("component_name", (Object)_self), (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self));
            if (popup == null) break block0;
            CallSite callSite = popup;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("popup_menu\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)callSite));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1840134186)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__editor_required(Object _self, Object p_tree, Object p_index, Object p_value_id, Object p_agent) {
        CallSite l_editor;
        block2: {
            Boolean bl;
            l_editor = null;
            CallSite target_explorer_element = null;
            boolean bl2 = MagikObjectUtils.is(p_value_id, ConstantBuilder.symbolBootstrap("symbol", "name"));
            Boolean bl3 = new Boolean(bl2);
            if (bl2) {
                bl3 = bl = new Boolean(MagikObjectUtils.isnt(p_tree, null));
            }
            if (MagikObjectUtils.should_be_boolean(bl3)) {
                target_explorer_element = Invoker.bootstrap("key", p_tree);
                bl = new Boolean(MagikObjectUtils.isnt(target_explorer_element, null));
            }
            if (!MagikObjectUtils.should_be_boolean(bl) || !MagikObjectUtils.should_be_boolean(Invoker.bootstrap("action_allowed?()", Invoker.bootstrap("owner", target_explorer_element), ConstantBuilder.symbolBootstrap("symbol", "rename"), target_explorer_element))) break block2;
            l_editor = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "in_place_value_editor"), p_agent);
        }
        return l_editor;
    }

    @SourceHash(value=540096291)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__handle_tree_key_press(Object _self, Object p_keyb_event) {
        CallSite callSite;
        CallSite l_char = Invoker.bootstrap("id", p_keyb_event);
        CallSite callSite2 = Invoker.bootstrap("is_class_of?()", l_char, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "character"));
        Object object = callSite2;
        if (MagikObjectUtils.should_be_boolean(object)) {
            object = callSite = new Boolean(MagikObjectUtils.is(l_char, Invoker.bootstrap("delete", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "character"))));
        }
        if (MagikObjectUtils.should_be_boolean(object)) {
            callSite = Invoker.bootstrap("enabled?", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_actions()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "delete")));
        }
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("clear()", (Object)_self));
        } else {
            Object object2 = Invoker.bootstrap("not", callSite2);
            if (MagikObjectUtils.should_be_boolean(object2)) {
                object2 = new Boolean(MagikObjectUtils.is(l_char, ConstantBuilder.symbolBootstrap("symbol", "f5")));
            }
            if (MagikObjectUtils.should_be_boolean(object2)) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("refresh()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
            }
        }
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("default_handle_keypress()", (Object)Invoker.bootstrap("agent", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)), (Object)p_keyb_event));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=198381767)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__copy_to_scrapbook(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("copy_to_scrapbook()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=2027115206)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__rename(Object _self) {
        CallSite selection = Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self));
        CallSite tree = Invoker.bootstrap("an_element()", selection);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("default_handle_edit()", (Object)Invoker.bootstrap("agent", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)), (Object)tree, (Object)Invoker.bootstrap("start_row", selection), null, (Object)selection));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1446482195)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__explore(Object _self) {
        CallSite explorer_element = Invoker.bootstrap("key", Invoker.bootstrap("an_element()", Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("explore()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)explorer_element));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1410392071)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__clear_all(Object _self) {
        block0: {
            CallSite explorer_element = Invoker.bootstrap("key", Invoker.bootstrap("an_element()", Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("do_action()", (Object)Invoker.bootstrap("owner", explorer_element), (Object)ConstantBuilder.symbolBootstrap("symbol", "delete_all"), (Object)explorer_element));
            CallSite explorer_tree = Invoker.bootstrapPrivate("display_tree_for_explorer_element()", (Object)_self, (Object)explorer_element);
            if (explorer_tree == null) break block0;
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("selected?\\l\\l", (Object)explorer_tree, (Object)bl));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)explorer_element));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-727781136)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_navigation_input_view__clear(Object _self) {
        block3: {
            CallSite parent_element;
            CallSite explorer_element = Invoker.bootstrap("key", Invoker.bootstrap("an_element()", Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
            CallSite new_element = parent_element = Invoker.bootstrap("parent", explorer_element);
            CallSite owner = Invoker.bootstrap("owner", explorer_element);
            CallSite index = Invoker.bootstrap("index_of_child()", parent_element, explorer_element);
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\l", index, Invoker.bootstrap("number_of_children", parent_element)))) {
                new_element = Invoker.bootstrap("\\b]", Invoker.bootstrap("children", parent_element), BinaryDispatcher.bootstrap("+", index, Integer.valueOf(1)));
            } else if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", index, Integer.valueOf(1)))) {
                new_element = Invoker.bootstrap("\\b]", Invoker.bootstrap("children", parent_element), BinaryDispatcher.bootstrap("-", index, Integer.valueOf(1)));
            }
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("do_action()", (Object)owner, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete"), (Object)explorer_element));
            CallSite new_tree = Invoker.bootstrapPrivate("display_tree_for_explorer_element()", (Object)_self, (Object)new_element);
            if (new_tree == null) break block3;
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("selected?\\l\\l", (Object)new_tree, (Object)bl));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)new_element));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_navigation_input_view_24449.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_navigation_input_view_24449.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_navigation_input_view_24449;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_navigation_input_view_24448
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_navigation_input_view_24448() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_navigation_input_view.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_navigation_input_view"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "tree_item"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "display_tree"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "first_time?"), null)), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_input_view"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_navigation_input_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "display_tree"), (Object)ConstantBuilder.symbolBootstrap("symbol", "read"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_navigation_input_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "refresh"), ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "init_actions()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "display_trees", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__display_trees_", 1, 1);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "view_information", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__view_information_", 1, 1);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "build_gui()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__build_gui", 3, 2);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "post_init_plugins()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__post_init_plugins", 1, 1);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "tree_item_select()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__tree_item_select", 3, 3);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "up()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__up", 1, 1);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "manage_actions()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__manage_actions", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "drag_start()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__drag_start", 8, 8);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "drag_end()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__drag_end", 7, 7);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "display_tree_for_explorer_element()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__display_tree_for_explorer_element", 3, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "sw_databus_data_available()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "setup_popup_menu()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__setup_popup_menu", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "editor_required()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__editor_required", 5, 5);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "handle_tree_key_press()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__handle_tree_key_press", 2, 2);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "copy_to_scrapbook()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__copy_to_scrapbook", 1, 1);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "rename()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__rename", 1, 1);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "explore()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__explore", 1, 1);
        MagikObjectUtils.createMethod("explorer_navigation_input_view", "clear_all()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__clear_all", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_navigation_input_view", "clear()", explorer_navigation_input_view_24449.class, "explorer_navigation_input_view__clear", 1, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_search_input_view_24497 {
    @SourceHash(value=-517205461)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__init(Object _self, Object ... args) {
        Invoker.superNaturalBootstrap("init()", "explorer_input_view", "sw", (Object)_self, (Object[])((Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)args)));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_items()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"))));
        return _self;
    }

    @SourceHash(value=1529242484)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__view_information_(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("new_with()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), (Object)ConstantBuilder.symbolBootstrap("symbol", "id"), (Object)ConstantBuilder.symbolBootstrap("symbol", "search"), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "search")), (Object)ConstantBuilder.symbolBootstrap("symbol", "image"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "show_search"), Invoker.bootstrapPrivate("module_name", (Object)_self)), (Object)ConstantBuilder.symbolBootstrap("symbol", "tooltip"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "search_tt")), (Object)ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "search_sh"))));
    }

    /*
     * WARNING - void declaration
     */
    @SourceHash(value=1490756378)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__build_gui(Object _self, Object container, Object xml_element) {
        void var3_3;
        Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), container, Integer.valueOf(1), null, ConstantBuilder.symbolBootstrap("symbol", "pixel"), ConstantBuilder.symbolBootstrap("symbol", "resize_x?"), Boolean.TRUE);
        CallSite outer_rc = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), container, null, Integer.valueOf(1), null, ConstantBuilder.symbolBootstrap("symbol", "outer_spacing"), Integer.valueOf(6), ConstantBuilder.symbolBootstrap("symbol", "resize_x?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "resize_y?"), Boolean.TRUE);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("new()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "label_item"), (Object)outer_rc, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "look_in")), (Object)ConstantBuilder.symbolBootstrap("symbol", "identifier"), (Object)ConstantBuilder.symbolBootstrap("symbol", "look_in")));
        Object object = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_popup_navigation_component"), ConstantBuilder.stringBootstrap("string", "search_popup"), _self, ConstantBuilder.symbolBootstrap("symbol", "outer_spacing"), Integer.valueOf(2), ConstantBuilder.symbolBootstrap("symbol", "border?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "selection_message"), ConstantBuilder.symbolBootstrap("symbol", "current_element<<"));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "collection")));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("build_gui()", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "collection")), (Object)outer_rc));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("new()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "label_item"), (Object)outer_rc, (Object)ConstantBuilder.stringBootstrap("string", " "), (Object)ConstantBuilder.symbolBootstrap("symbol", "identifier"), (Object)ConstantBuilder.symbolBootstrap("symbol", "no_op")));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("new()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "label_item"), (Object)outer_rc, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "set_up_criteria")), (Object)ConstantBuilder.symbolBootstrap("symbol", "identifier"), (Object)ConstantBuilder.symbolBootstrap("symbol", "set_up_criteria")));
        CallSite predicate_rowcol = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), outer_rc, null, Integer.valueOf(1), null, ConstantBuilder.symbolBootstrap("symbol", "outer_spacing"), Integer.valueOf(6), ConstantBuilder.symbolBootstrap("symbol", "border?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "default_row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "default_col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_predicate_component()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "query_predicate_component"), ConstantBuilder.symbolBootstrap("symbol", "predicate_component"), _self, ConstantBuilder.symbolBootstrap("symbol", "map_trail_provider"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "handler"), _self, ConstantBuilder.symbolBootstrap("symbol", "map_trail_for()")), ConstantBuilder.symbolBootstrap("symbol", "map_selection_provider"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "handler"), _self, ConstantBuilder.symbolBootstrap("symbol", "map_selection_for()")), ConstantBuilder.symbolBootstrap("symbol", "map_world_provider"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "handler"), _self, ConstantBuilder.symbolBootstrap("symbol", "map_world_for()")), ConstantBuilder.symbolBootstrap("symbol", "layout"), ConstantBuilder.symbolBootstrap("symbol", "vertical"))));
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("build_gui()", (Object)Invoker.bootstrapPrivate("$slot_get_predicate_component()", (Object)_self), (Object)predicate_rowcol));
        CallSite rc = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), outer_rc, Integer.valueOf(1));
        object = 15;
        ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("top_spacing\\l\\l", (Object)rc, (Object)object));
        object = ConstantBuilder.symbolBootstrap("symbol", "fill");
        ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrap("col_alignment\\l\\l", (Object)rc, (Object)object));
        object = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "button_item"), rc, Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "search_now")), _self, ConstantBuilder.symbolBootstrap("symbol", "filter_search()"), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "min_width"), Integer.valueOf(75), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "right"), ConstantBuilder.symbolBootstrap("symbol", "identifier"), ConstantBuilder.symbolBootstrap("symbol", "filter_search"));
        ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "filter_search")));
        ResultTuple cfr_ignored_10 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_restricting_rwo_sets()", (Object)_self));
        return var3_3;
    }

    @SourceHash(value=-1316036608)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__set_restricting_rwo_sets(Object _self) {
        CallSite callSite = Invoker.bootstrap("restricting_rwo_sets()", Invoker.bootstrapPrivate("engine", (Object)_self));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("restricting_rwo_sets\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_predicate_component()", (Object)_self), (Object)callSite));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1112809975)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__engine_(Object _self) {
        block0: {
            if (Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self) != null) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_engine()", (Object)_self, (Object)Invoker.bootstrapPrivate("model_plugin_with_name()", (Object)_self, (Object)Invoker.bootstrapPrivate("engine_plugin_name", (Object)_self))));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_dependent()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "restrictions")));
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_get_engine()", (Object)_self));
    }

    @SourceHash(value=-1515879099)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__input_gained_focus(Object _self) {
        Invoker.superNaturalBootstrap("input_gained_focus()", "explorer_input_view", "sw", (Object)_self);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_current_collection_from_databus()", (Object)_self));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_sample_record_from_databus()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=700637320)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__map_trail_for(Object _self, Object a_query_predicate_component) {
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("map_trail", (Object)_self));
    }

    @SourceHash(value=2046962120)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__map_selection_for(Object _self, Object a_query_component) {
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("map_selection", (Object)_self));
    }

    @SourceHash(value=-1409325644)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__map_world_for(Object _self, Object a_query_component) {
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("map_world", (Object)_self));
    }

    @SourceHash(value=1342882662)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__current_element\l\l_(Object _self, Object an_element) {
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_collection?", an_element))) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_collection()", (Object)Invoker.bootstrapPrivate("$slot_get_predicate_component()", (Object)_self), (Object)Invoker.bootstrap("an_element()", Invoker.bootstrap("all_collections()", Invoker.bootstrap("rwo_set", an_element))), (Object)ConstantBuilder.symbolBootstrap("symbol", "ace"), (Object)Invoker.bootstrap("ace", an_element), (Object)ConstantBuilder.symbolBootstrap("symbol", "reset?"), (Object)Boolean.TRUE));
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "filter_search")), (Object)bl));
        } else {
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_collection()", (Object)Invoker.bootstrapPrivate("$slot_get_predicate_component()", (Object)_self), null));
            Boolean bl = Boolean.FALSE;
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "filter_search")), (Object)bl));
        }
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_current_element()", (Object)_self, (Object)an_element));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1995142650)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="bf68071a-382c-4b24-adb7-b37dbd3b9364", type=Object.class, start=17, end=153, index=0), @EnvVar(name="bf68071a-382c-4b24-adb7-b37dbd3b9364", type=Object.class, start=231, end=316, index=0)})
    public static Object explorer_search_input_view__filter_search(Object _self) {
        block11: {
            Boolean bl;
            CallSite result_predicate;
            CallSite result_element;
            block10: {
                Object object;
                Object[] __env__ = new Object[1];
                result_element = null;
                result_predicate = null;
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[0]};
                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_search_input_view_24497.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray);
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "invalid_map_trail_for_predicate"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "invalid_map_selection_for_predicate"), callSite2);
                            result_predicate = Invoker.bootstrap("predicate()", Invoker.bootstrapPrivate("$slot_get_predicate_component()", (Object)_self));
                            Boolean bl2 = Boolean.TRUE;
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            bl = bl2;
                            break block10;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object2;
                        object = object2 = Thrower.checkTag(throw_, callSite).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                Object object3 = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "invalid_map_trail_for_predicate")))) {
                    object3 = object3;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "invalid_map_selection_for_predicate")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
                Object predicate_condition = object3;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("show_alert()", (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)Invoker.bootstrap("report_contents_string", predicate_condition)));
                bl = Boolean.FALSE;
            }
            Boolean bl3 = bl;
            if (MagikObjectUtils.should_be_boolean(bl)) {
                result_element = Invoker.bootstrap("filter_search()", Invoker.bootstrapPrivate("engine", (Object)_self), Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "predicate"), result_predicate, ConstantBuilder.symbolBootstrap("symbol", "description"), Invoker.bootstrap("description_string()", Invoker.bootstrapPrivate("$slot_get_predicate_component()", (Object)_self)));
                bl3 = new Boolean(MagikObjectUtils.isnt(result_element, null));
            }
            if (!MagikObjectUtils.should_be_boolean(bl3)) break block11;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, result_element));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_search_input_view__filter_search")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="bf68071a-382c-4b24-adb7-b37dbd3b9364", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=1387806700)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__current_selection_(Object _self) {
        CallSite databus_selection = Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection"));
        return databus_selection != null ? (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)databus_selection, (Object)2)) : null;
    }

    @SourceHash(value=138173738)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__set_current_collection_from_databus(Object _self) {
        block2: {
            CallSite current_selection = Invoker.bootstrapPrivate("current_selection", (Object)_self);
            if (current_selection == null) break block2;
            CallSite element = Invoker.bootstrap("an_explorer_element()", current_selection);
            boolean bl = MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), null);
            Object object = new Boolean(bl);
            if (!bl && MagikObjectUtils.should_be_boolean(object = Invoker.bootstrap("is_collection?", element))) {
                object = Invoker.bootstrap("not", Invoker.bootstrap("is_collection?", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self)));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                CallSite callSite = element;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("current_element\\l\\l", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "collection")), (Object)callSite));
                callSite = element;
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("current_element\\l\\l", (Object)_self, (Object)callSite));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-697108962)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__set_sample_record_from_databus(Object _self, Object current_selection) {
        boolean bl = MagikObjectUtils.is(current_selection, null);
        Boolean bl2 = new Boolean(bl);
        if (bl) {
            current_selection = Invoker.bootstrapPrivate("current_selection", (Object)_self);
            bl2 = new Boolean(MagikObjectUtils.is(current_selection, null));
        }
        if (MagikObjectUtils.should_be_boolean(bl2)) {
            return ResultTuple.EMPTY_TUPLE;
        }
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_record?", current_selection))) {
            CallSite callSite = Invoker.bootstrap("an_element()", current_selection);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("sample_record\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_predicate_component()", (Object)_self), (Object)callSite));
        } else {
            Object var3_3 = null;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("sample_record\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_predicate_component()", (Object)_self), var3_3));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1457258356)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block1: {
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")) break block1;
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
            Object selection = resultTuple.pop();
            if (MagikObjectUtils.isnt(resultTuple.pop(), _self) && MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("input_has_focus?", (Object)_self))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_sample_record_from_databus()", (Object)_self, (Object)selection));
            }
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self, (Object)selection));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=947870058)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__note_change(Object _self, Object who, Object what, Object data) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_restricting_rwo_sets()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1975647794)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__terminate(Object _self) {
        block0: {
            Invoker.superNaturalBootstrap("terminate()", "explorer_input_view", "sw", (Object)_self);
            if (Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self) == null) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_dependent()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self), (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1377347450)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__init_actions(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "add_to_search_restrictions"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "add_to_search_restrictions")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "add_to_search_restrictions_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "add_to_search_restrictions_sh")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "my_filter_restrictions"), Invoker.bootstrapPrivate("module_name", (Object)_self)), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "add_to_search_restrictions()"))));
        Invoker.superNaturalBootstrap("init_actions()", "explorer_input_view", "sw", (Object)_self);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-263987297)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=42, end=211, index=1), @EnvVar(name="ace_name", type=Object.class, start=34, end=211, index=0), @EnvVar(name="__leave_catcher__", type=Object[].class, start=83, end=214, index=2)})
    public static Object explorer_search_input_view__add_to_search_restrictions(Object _self) {
        block2: {
            Object[] __env__ = new Object[3];
            CallSite selection_info = Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection"));
            if (selection_info == null) break block2;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            CallSite selection = Invoker.bootstrap("\\b]", selection_info, Integer.valueOf(2));
            CallSite element = Invoker.bootstrap("an_explorer_element()", selection);
            EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)2);
            try {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_depth_first()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)element));
            }
            catch (LeaveCatcher.Leave leave) {
                ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getLeaveResult(leave);
            }
            CallSite name = MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_records?", selection)) ? Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "add_records_restriction"), (Object)Invoker.bootstrap("name", element)) : Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "add_collection_restriction"), (Object)Invoker.bootstrap("name", element));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_restricting_rwo_set()", (Object)Invoker.bootstrapPrivate("engine", (Object)_self), (Object)name, (Object)Invoker.bootstrap("rwo_set", selection), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_search_input_view__add_to_search_restrictions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="ace_name", type=Object[].class, start=42, end=54, index=0)})
    public static Object __loopbody_(Object[] __env__, Object sub_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            Object object = Invoker.bootstrap("is_collection?", sub_element);
            if (MagikObjectUtils.should_be_boolean(object)) {
                CallSite callSite = Invoker.bootstrap("ace_name", sub_element);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)0);
                object = new Boolean(MagikObjectUtils.isnt(callSite, null));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1888120691)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__manage_actions(Object _self, Object selection) {
        CallSite callSite;
        if (selection == null) {
            selection = Invoker.bootstrap("\\b]", Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")), Integer.valueOf(2));
        }
        if (MagikObjectUtils.should_be_boolean(callSite = Invoker.bootstrap("not", Invoker.bootstrap("definitely_empty?", selection)))) {
            CallSite plugin = Invoker.bootstrap("owner", selection);
            CallSite element = Invoker.bootstrap("an_explorer_element()", selection);
            callSite = Invoker.bootstrap("start_move_action_allowed?()", plugin, ConstantBuilder.symbolBootstrap("symbol", "copy"), element, Invoker.bootstrap("root", element));
        }
        CallSite callSite2 = callSite;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "add_to_search_restrictions")), (Object)callSite2));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1929887758)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_search_input_view__set_current_element(Object _self, Object an_element) {
        block0: {
            if (Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self) == null) break block0;
            Object object = an_element;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("current_element\\l\\l", (Object)Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_items()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "collection")), (Object)object));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_current_element()", (Object)_self, (Object)an_element));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_search_input_view_24497.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_search_input_view_24497;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_search_input_view_24496
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_search_input_view_24496() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_search_input_view.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_search_input_view"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "engine"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "items"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "predicate_component"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "current_element"), null)), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_input_view"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_search_input_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "engine_plugin_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)ConstantBuilder.stringBootstrap("string", "The name of the search engine to be used"), (Object)Boolean.TRUE, (Object)Boolean.FALSE, (Object)ConstantBuilder.stringBootstrap("string", "")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_search_input_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_search_input_view", "init()", explorer_search_input_view_24497.class, "explorer_search_input_view__init", 2, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_search_input_view", "view_information", explorer_search_input_view_24497.class, "explorer_search_input_view__view_information_", 1, 1);
        MagikObjectUtils.createMethod("explorer_search_input_view", "build_gui()", explorer_search_input_view_24497.class, "explorer_search_input_view__build_gui", 3, 2);
        MagikObjectUtils.createMethod("explorer_search_input_view", "set_restricting_rwo_sets()", explorer_search_input_view_24497.class, "explorer_search_input_view__set_restricting_rwo_sets", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_search_input_view", "engine", explorer_search_input_view_24497.class, "explorer_search_input_view__engine_", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_search_input_view", "input_gained_focus()", explorer_search_input_view_24497.class, "explorer_search_input_view__input_gained_focus", 1, 1);
        MagikObjectUtils.createMethod("explorer_search_input_view", "map_trail_for()", explorer_search_input_view_24497.class, "explorer_search_input_view__map_trail_for", 2, 2);
        MagikObjectUtils.createMethod("explorer_search_input_view", "map_selection_for()", explorer_search_input_view_24497.class, "explorer_search_input_view__map_selection_for", 2, 2);
        MagikObjectUtils.createMethod("explorer_search_input_view", "map_world_for()", explorer_search_input_view_24497.class, "explorer_search_input_view__map_world_for", 2, 2);
        MagikObjectUtils.createMethod("explorer_search_input_view", "current_element<<", explorer_search_input_view_24497.class, "explorer_search_input_view__current_element\\l\\l_", 2, 2);
        MagikObjectUtils.createMethod("explorer_search_input_view", "filter_search()", explorer_search_input_view_24497.class, "explorer_search_input_view__filter_search", 1, 1);
        MagikObjectUtils.createMethod("explorer_search_input_view", "current_selection", explorer_search_input_view_24497.class, "explorer_search_input_view__current_selection_", 1, 1);
        MagikObjectUtils.createMethod("explorer_search_input_view", "set_current_collection_from_databus()", explorer_search_input_view_24497.class, "explorer_search_input_view__set_current_collection_from_databus", 1, 1);
        MagikObjectUtils.createMethod("explorer_search_input_view", "set_sample_record_from_databus()", explorer_search_input_view_24497.class, "explorer_search_input_view__set_sample_record_from_databus", 2, 1);
        MagikObjectUtils.createMethod("explorer_search_input_view", "sw_databus_data_available()", explorer_search_input_view_24497.class, "explorer_search_input_view__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_search_input_view", "note_change()", explorer_search_input_view_24497.class, "explorer_search_input_view__note_change", 4, 4);
        MagikObjectUtils.createMethod("explorer_search_input_view", "terminate()", explorer_search_input_view_24497.class, "explorer_search_input_view__terminate", 1, 1);
        MagikObjectUtils.createMethod("explorer_search_input_view", "init_actions()", explorer_search_input_view_24497.class, "explorer_search_input_view__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_search_input_view", "add_to_search_restrictions()", explorer_search_input_view_24497.class, "explorer_search_input_view__add_to_search_restrictions", 1, 1);
        MagikObjectUtils.createMethod("explorer_search_input_view", "manage_actions()", explorer_search_input_view_24497.class, "explorer_search_input_view__manage_actions", 2, 1, false, false, true, 0);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_search_input_view", "set_current_element()", explorer_search_input_view_24497.class, "explorer_search_input_view__set_current_element", 2, 2));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_output_plugin_24524 {
    @SourceHash(value=-350219929)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=78, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=79, index=1)})
    public static Object explorer_output_plugin__process_plugin_data(Object _self, Object xml_element) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_plugin_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"))));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrap("elements", xml_element)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_output_plugin__process_plugin_data")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="name", type=Object[].class, start=51, end=82, index=2)})
    public static Object __loopbody_(Object[] __env__, Object plugin_data) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (Invoker.bootstrap("type", plugin_data) == ConstantBuilder.symbolBootstrap("symbol", "handle")) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_symbol()", Invoker.bootstrap("attribute()", plugin_data, ConstantBuilder.symbolBootstrap("symbol", "plugin_name"))), (Object[])__env__, (int)2);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)Invoker.bootstrapPrivate("$slot_get_plugin_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1282011962)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="actual_plugins", type=Object.class, start=44, end=118, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=36, end=118, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=125, index=3)})
    public static Object explorer_output_plugin__post_init_plugins(Object _self) {
        block0: {
            Object[] __env__ = new Object[4];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
            if (Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)) != null) break block0;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugin_data()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_output_plugin__post_init_plugins")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="plugin", type=Object[].class, start=40, end=162, index=2)})
    public static Object __loopbody_2(Object[] __env__, Object plugin_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("plugin()", Invoker.bootstrapPrivate("framework", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), plugin_name);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)2);
            if (callSite == null) {
                ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write"), (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)ConstantBuilder.symbolBootstrap("symbol", "cant_find_plugin"), (Object)plugin_name));
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            CallSite callSite2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("owner\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)callSite2));
            callSite2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)callSite2, (Object)Invoker.bootstrap("view_output_type", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1854988614)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_plugin__init_actions(Object _self) {
        Invoker.superNaturalBootstrap("init_actions()", "plugin", "sw", (Object)_self);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("initialise_proxy_actions()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-828420139)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_plugin__initialise_proxy_actions(Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=383708866)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_plugin__current_plugin_(Object _self) {
        return Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self) != null ? (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)_self), (Object)Invoker.bootstrap("value", Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self)))) : null;
    }

    @SourceHash(value=582129017)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="width", type=Object.class, start=29, end=101, index=2), @EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=101, index=1), @EnvVar(name="height", type=Object.class, start=13, end=101, index=0)})
    public static Object explorer_output_plugin__process_xml_width_height(Object _self, Object xml_element) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)100, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)100, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrap("attributes", xml_element)));
        return TupleBuilder.bootstrap("tb", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0));
    }

    @Parent(method="explorer_output_plugin__process_xml_width_height")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="width", type=Object[].class, start=44, end=47, index=2), @EnvVar(name="height", type=Object[].class, start=77, end=80, index=0), @EnvVar(name="width", type=Object[].class, start=80, end=89, index=2)})
    public static Object __loopbody_3(Object[] __env__, Object key, Object val) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", key, ConstantBuilder.stringBootstrap("string", "width")))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_number()", val), (Object[])__env__, (int)2);
            } else if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", key, ConstantBuilder.stringBootstrap("string", "height")))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("as_number()", val), (Object[])__env__, (int)0);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1255362726)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=160, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=161, index=1)})
    public static Object explorer_output_plugin__build_gui(Object _self, Object container, Object xml_element) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("process_xml_width_height()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)xml_element));
        resultTuple.pop();
        Object width = resultTuple.pop();
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "window_stack"), container)));
        Object object = width;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("width\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), (Object)object));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_get_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
    }

    @Parent(method="explorer_output_plugin__build_gui")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="rc", type=Object[].class, start=73, end=178, index=2)})
    public static Object __loopbody_4(Object[] __env__, Object key, Object plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), Invoker.bootstrapPrivate("$slot_get_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), null, Integer.valueOf(1), ConstantBuilder.symbolBootstrap("symbol", "pixel"), ConstantBuilder.symbolBootstrap("symbol", "default_row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "default_col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill")), (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_named_child()", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)key));
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("resize_x?\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)bl));
            bl = Boolean.TRUE;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("resize_y?\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)bl));
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("build_gui()", (Object)plugin, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1987229090)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_plugin__set_view(Object _self, Object a_view_name) {
        block3: {
            CallSite current_plugin;
            boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self), null);
            Boolean bl2 = new Boolean(bl);
            if (bl) {
                bl2 = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("value", Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self)), a_view_name));
            }
            if (!MagikObjectUtils.should_be_boolean(bl2)) break block3;
            CallSite previous_plugin = Invoker.bootstrapPrivate("current_plugin", (Object)_self);
            Object object = a_view_name;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("value\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_stack()", (Object)_self), (Object)object));
            if (previous_plugin != null) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("output_lost_focus()", (Object)previous_plugin));
            }
            if ((current_plugin = Invoker.bootstrapPrivate("current_plugin", (Object)_self)) != null) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("output_gained_focus()", (Object)current_plugin));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1555855683)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="set_type", type=Object.class, start=56, end=156, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=48, end=156, index=0), @EnvVar(name="__leave_catcher__", type=Object[].class, start=79, end=159, index=6), @EnvVar(name="selection", type=Object.class, start=22, end=163, index=2), @EnvVar(name="_self", type=Object.class, start=14, end=163, index=4)})
    public static Object explorer_output_plugin__activate_view_for_selection(Object _self, Object selection) {
        block2: {
            Object[] __env__ = new Object[7];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)4);
            EnvAccessor.bootstrapReseter("resetEnv", (Object)selection, (Object[])__env__, (int)2);
            if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrap("activated?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)))) break block2;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)6);
            try {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_plugins()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_view()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
            }
            catch (LeaveCatcher.Leave leave) {
                ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6))).getLeaveResult(leave);
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_output_plugin__activate_view_for_selection")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="set_type", type=Object[].class, start=155, end=158, index=1), @EnvVar(name="prefered?", type=Object[].class, start=51, end=167, index=5), @EnvVar(name="can_handle?", type=Object[].class, start=58, end=167, index=3)})
    public static Object __loopbody_5(Object[] __env__, Object type, Object plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple resultTuple2 = (ResultTuple)((Object)Invoker.tupleBootstrap("can_handle_selection?()", (Object)plugin, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)5);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)resultTuple2.pop(), (Object[])__env__, (int)3);
            if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_view()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)type));
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            Object object = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
            if (MagikObjectUtils.should_be_boolean(object)) {
                object = new Boolean(MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), null));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)type, (Object[])__env__, (int)1);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1719936940)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_plugin__request_focus(Object _self, Object a_view) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_view()", (Object)_self, (Object)Invoker.bootstrap("view_output_type", a_view)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=740364591)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_plugin__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block0: {
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_pre_selection")) break block0;
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
            resultTuple.pop();
            Object selection = resultTuple.pop();
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("activate_view_for_selection()", (Object)_self, (Object)selection));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_output_plugin_24524.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_output_plugin_24524.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_output_plugin_24524.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_output_plugin_24524.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_output_plugin_24524.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_output_plugin_24524;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_output_plugin_24523
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_output_plugin_24523() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_output_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_output_plugin"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin_data"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugins"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "stack"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_view_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_output_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_pre_selection")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_output_plugin", "process_plugin_data()", explorer_output_plugin_24524.class, "explorer_output_plugin__process_plugin_data", 2, 2);
        MagikObjectUtils.createMethod("explorer_output_plugin", "post_init_plugins()", explorer_output_plugin_24524.class, "explorer_output_plugin__post_init_plugins", 1, 1);
        MagikObjectUtils.createMethod("explorer_output_plugin", "init_actions()", explorer_output_plugin_24524.class, "explorer_output_plugin__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_output_plugin", "initialise_proxy_actions()", explorer_output_plugin_24524.class, "explorer_output_plugin__initialise_proxy_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_output_plugin", "current_plugin", explorer_output_plugin_24524.class, "explorer_output_plugin__current_plugin_", 1, 1);
        MagikObjectUtils.createMethod("explorer_output_plugin", "process_xml_width_height()", explorer_output_plugin_24524.class, "explorer_output_plugin__process_xml_width_height", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_output_plugin", "build_gui()", explorer_output_plugin_24524.class, "explorer_output_plugin__build_gui", 3, 2);
        MagikObjectUtils.createMethod("explorer_output_plugin", "set_view()", explorer_output_plugin_24524.class, "explorer_output_plugin__set_view", 2, 2);
        MagikObjectUtils.createMethod("explorer_output_plugin", "activate_view_for_selection()", explorer_output_plugin_24524.class, "explorer_output_plugin__activate_view_for_selection", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_output_plugin", "request_focus()", explorer_output_plugin_24524.class, "explorer_output_plugin__request_focus", 2, 2);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_output_plugin", "sw_databus_data_available()", explorer_output_plugin_24524.class, "explorer_output_plugin__sw_databus_data_available", 3, 3));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_output_view_24548 {
    @SourceHash(value=1017584625)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_view__init(Object _self, Object name, Object framework) {
        return Invoker.superNaturalBootstrap("init()", "plugin", "sw", (Object)_self, (Object)name, (Object)framework);
    }

    @SourceHash(value=1862353653)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_view__output_lost_focus(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_output_has_focus?()", (Object)_self, (Object)Boolean.FALSE));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1382043142)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_view__output_gained_focus(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_output_has_focus?()", (Object)_self, (Object)Boolean.TRUE));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=663431070)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_view__manage_actions(Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=116924417)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_view__view_output_type_(Object _self) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-2052581004)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_view__can_handle_selection?(Object _self, Object selection) {
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-289007173)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_view__request_focus(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("request_focus()", (Object)Invoker.bootstrapPrivate("$slot_get_owner()", (Object)_self), (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=2021188595)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_output_view__write_on(Object _self, Object a_stream) {
        Invoker.superNaturalBootstrap("write_on()", "plugin", "sw", (Object)_self, (Object)a_stream);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-386210775)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=204, end=293, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=76, end=296, index=2), @EnvVar(name="total_width", type=Object.class, start=68, end=296, index=1), @EnvVar(name="new_total_width", type=Object.class, start=84, end=296, index=3), @EnvVar(name="rest", type=Object[].class, start=181, end=299, index=5), @EnvVar(name="column_widths", type=Object.class, start=15, end=303, index=6)})
    public static Object explorer_output_view__redistribute_column_widths(Object _self, Object tree_item, Object column_widths) {
        block2: {
            Object[] __env__ = new Object[7];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)column_widths, (Object[])__env__, (int)6);
            boolean bl = MagikObjectUtils.isnt(tree_item, null);
            Boolean bl2 = new Boolean(bl);
            if (bl) {
                bl2 = new Boolean(MagikObjectUtils.isnt(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), null));
            }
            if (!MagikObjectUtils.should_be_boolean(bl2)) break block2;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
            CallSite tree_item_width = Invoker.bootstrap("width", tree_item);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)0, (Object[])__env__, (int)1);
            CallSite size = Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)2);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)0, (Object[])__env__, (int)3);
            CallSite callSite = BinaryDispatcher.bootstrap("-", tree_item_width, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)5);
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", callSite, Integer.valueOf(0)))) {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_keys_and_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6)));
                CallSite callSite2 = BinaryDispatcher.bootstrap("+", Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), size), BinaryDispatcher.bootstrap("-", tree_item_width, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), (Object)callSite2, (Object)size));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_output_view__redistribute_column_widths")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="total_width", type=Object[].class, start=34, end=43, index=1)})
    public static Object __loopbody_(Object[] __env__, Object width) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("+", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), width), (Object[])__env__, (int)1);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_output_view__redistribute_column_widths")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="part", type=Object[].class, start=61, end=154, index=4), @EnvVar(name="new_total_width", type=Object[].class, start=145, end=154, index=3)})
    public static Object __loopbody_2(Object[] __env__, Object nr, Object width) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("rounded", BinaryDispatcher.bootstrap("*", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), BinaryDispatcher.bootstrap("\\s", Invoker.bootstrap("as_float", width), Invoker.bootstrap("as_float", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))))), (Object[])__env__, (int)4);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6);
            Object object = nr;
            CallSite callSite2 = BinaryDispatcher.bootstrap("+", Invoker.bootstrap("\\b]", callSite, object), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)callSite, (Object)callSite2, (Object)object));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("+", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), Invoker.bootstrap("\\b]", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), nr)), (Object[])__env__, (int)3);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_output_view_24548.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_output_view_24548.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_output_view_24548;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_output_view_24547
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_output_view_24547() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_output_view.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_output_view"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "owner"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "output_has_focus?"), Boolean.FALSE)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_view_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_output_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "owner"), (Object)ConstantBuilder.symbolBootstrap("symbol", "write"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_output_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "output_has_focus?"), (Object)ConstantBuilder.symbolBootstrap("symbol", "read"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_output_view", "init()", explorer_output_view_24548.class, "explorer_output_view__init", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_output_view", "output_lost_focus()", explorer_output_view_24548.class, "explorer_output_view__output_lost_focus", 1, 1);
        MagikObjectUtils.createMethod("explorer_output_view", "output_gained_focus()", explorer_output_view_24548.class, "explorer_output_view__output_gained_focus", 1, 1);
        MagikObjectUtils.createMethod("explorer_output_view", "manage_actions()", explorer_output_view_24548.class, "explorer_output_view__manage_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_output_view", "view_output_type", explorer_output_view_24548.class, "explorer_output_view__view_output_type_", 1, 1, false, true, false, 0);
        MagikObjectUtils.createMethod("explorer_output_view", "can_handle_selection?()", explorer_output_view_24548.class, "explorer_output_view__can_handle_selection?", 2, 2, false, true, false, 0);
        MagikObjectUtils.createMethod("explorer_output_view", "request_focus()", explorer_output_view_24548.class, "explorer_output_view__request_focus", 1, 1);
        MagikObjectUtils.createMethod("explorer_output_view", "write_on()", explorer_output_view_24548.class, "explorer_output_view__write_on", 2, 2);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_output_view", "redistribute_column_widths()", explorer_output_view_24548.class, "explorer_output_view__redistribute_column_widths", 3, 3, false, false, true, 0));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_group_output_view_24589 {
    @SourceHash(value=2122766415)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__view_output_type_(Object _self) {
        return ConstantBuilder.symbolBootstrap("symbol", "group");
    }

    @SourceHash(value=-1896646452)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__can_handle_selection?(Object _self, Object selection) {
        return TupleBuilder.bootstrap("tb", Invoker.bootstrap("is_group?", selection), Boolean.FALSE);
    }

    @SourceHash(value=-214101398)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__init_actions(Object _self) {
        Invoker.bootstrapPrivate("module_name", (Object)_self);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "explore"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explore")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explore_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explore_sh")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "explore()"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook_sh")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook()"))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "rename"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "rename")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "rename_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "rename_sh")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "rename()"))));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "delete"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete_sh")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "delete"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "delete()"))));
        Invoker.superNaturalBootstrap("init_actions()", "explorer_output_view", "sw", (Object)_self);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=291308190)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__build_gui(Object _self, Object container, Object xml_element) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_tree_item()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "tree_item"), container, ConstantBuilder.symbolBootstrap("symbol", "model"), _self, ConstantBuilder.symbolBootstrap("symbol", "module_name"), Invoker.bootstrapPrivate("module_name", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "aspect"), ConstantBuilder.symbolBootstrap("symbol", "display_trees"), ConstantBuilder.symbolBootstrap("symbol", "data_selector"), ConstantBuilder.symbolBootstrap("symbol", "display_trees"), ConstantBuilder.symbolBootstrap("symbol", "select_notifier"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "handler"), _self, ConstantBuilder.symbolBootstrap("symbol", "tree_item_select()")), ConstantBuilder.symbolBootstrap("symbol", "double_click_notifier"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "handler"), _self, ConstantBuilder.symbolBootstrap("symbol", "tree_item_double_click()")), ConstantBuilder.symbolBootstrap("symbol", "key_pressed_notifier"), ConstantBuilder.symbolBootstrap("symbol", "handle_tree_key_press()"), ConstantBuilder.symbolBootstrap("symbol", "editor_required_notifier"), ConstantBuilder.symbolBootstrap("symbol", "editor_required()"), ConstantBuilder.symbolBootstrap("symbol", "edit_on_click?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "show_focus?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "distribute_spare_width"), ConstantBuilder.symbolBootstrap("symbol", "always"), ConstantBuilder.symbolBootstrap("symbol", "display_style"), ConstantBuilder.symbolBootstrap("symbol", "tabular"), ConstantBuilder.symbolBootstrap("symbol", "identifier"), ConstantBuilder.symbolBootstrap("symbol", "group_lister"), ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_property()", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "borderless"), (Object)Boolean.TRUE));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_popup_menu()", (Object)_self));
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_get_tree_item()", (Object)_self));
    }

    @SourceHash(value=-1007270095)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=153, end=229, index=0), @EnvVar(name="definitely_empty?", type=Object.class, start=161, end=229, index=1), @EnvVar(name="delete_enabled?", type=Object.class, start=15, end=401, index=2), @EnvVar(name="copy_enabled?", type=Object.class, start=23, end=401, index=3)})
    public static Object explorer_group_output_view__manage_actions(Object _self) {
        CallSite callSite;
        Object[] __env__ = new Object[4];
        CallSite selection = null;
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
        CallSite callSite2 = Invoker.bootstrapPrivate("output_has_focus?", (Object)_self);
        if (MagikObjectUtils.should_be_boolean(callSite2)) {
            selection = Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self));
            callSite2 = Invoker.bootstrap("not", Invoker.bootstrap("empty?", selection));
        }
        EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite2, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object[])__env__, (int)3);
        Object object = Invoker.bootstrapPrivate("output_has_focus?", (Object)_self);
        if (MagikObjectUtils.should_be_boolean(object)) {
            selection = Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self));
            object = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("size", selection), 1));
        }
        CallSite callSite3 = callSite = object;
        if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.TRUE, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)selection));
            CallSite callSite4 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
            if (MagikObjectUtils.should_be_boolean(callSite4)) {
                callSite4 = Invoker.bootstrap("not", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite4, (Object[])__env__, (int)3);
        }
        if (MagikObjectUtils.should_be_boolean(callSite3)) {
            CallSite an_element = Invoker.bootstrap("key", Invoker.bootstrap("an_element()", selection));
            callSite3 = Invoker.bootstrap("action_allowed?()", Invoker.bootstrap("owner", an_element), ConstantBuilder.symbolBootstrap("symbol", "rename"), an_element);
        }
        CallSite callSite5 = callSite;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explore")), (Object)callSite5));
        callSite5 = callSite3;
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "rename")), (Object)callSite5));
        callSite5 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete")), (Object)callSite5));
        callSite5 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook")), (Object)callSite5));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_group_output_view__manage_actions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="delete_enabled?", type=Object[].class, start=70, end=73, index=2), @EnvVar(name="definitely_empty?", type=Object[].class, start=113, end=116, index=1), @EnvVar(name="copy_enabled?", type=Object[].class, start=138, end=141, index=3)})
    public static Object __loopbody_(Object[] __env__, Object display_tree) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite element = Invoker.bootstrap("key", display_tree);
            CallSite root = Invoker.bootstrap("root", element);
            CallSite plugin = Invoker.bootstrap("owner", element);
            if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("action_allowed?()", plugin, ConstantBuilder.symbolBootstrap("symbol", "delete"), element), (Object[])__env__, (int)2);
            }
            if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))) {
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("definitely_empty?", element)))) {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)1);
                }
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("start_move_action_allowed?()", plugin, ConstantBuilder.symbolBootstrap("symbol", "copy"), element, root), (Object[])__env__, (int)3);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-2074215854)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=13, end=60, index=0)})
    public static Object explorer_group_output_view__delete(Object _self) {
        Object[] __env__ = new Object[1];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        CallSite trees = Invoker.bootstrap("new_from()", VectorBuilder.EMPTY_VECTOR, Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)trees));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_group_output_view__delete")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_2(Object[] __env__, Object display_tree) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite explorer_element = Invoker.bootstrap("key", display_tree);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("do_action()", (Object)Invoker.bootstrap("owner", explorer_element), (Object)ConstantBuilder.symbolBootstrap("symbol", "delete"), (Object)explorer_element));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1329107593)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="total_size", type=Object.class, start=28, end=200, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=20, end=200, index=0), @EnvVar(name="selected_elements", type=Object.class, start=36, end=200, index=2)})
    public static Object explorer_group_output_view__tree_item_select(Object _self, Object selection, Object object) {
        Object[] __env__ = new Object[5];
        if (MagikObjectUtils.should_be_boolean(object)) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)0, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)selection));
            if (MagikObjectUtils.is(Invoker.bootstrap("size", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), 0)) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_selection()", (Object)_self, (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self))));
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("calculated_size()", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), Boolean.FALSE), (Object[])__env__, (int)1);
            } else {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_selection()", (Object)_self, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
            }
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_number_of_records"), (Object)VectorBuilder.bootstrap("vb", _self, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
        }
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_group_output_view__tree_item_select")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="total_size", type=Object[].class, start=84, end=87, index=1), @EnvVar(name="total_size", type=Object[].class, start=123, end=126, index=1), @EnvVar(name="element_size", type=Object[].class, start=73, end=135, index=3), @EnvVar(name="element", type=Object[].class, start=27, end=135, index=4)})
    public static Object __loopbody_3(Object[] __env__, Object tree) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("key", tree), (Object[])__env__, (int)4);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
            CallSite callSite = Invoker.bootstrap("calculated_size()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), Boolean.FALSE);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)3);
            if (callSite == null) {
                EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)1);
            } else if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1) != null) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("+", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object[])__env__, (int)1);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1633118025)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__tree_item_double_click(Object _self, Object a_tree) {
        block0: {
            if (a_tree == null) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)Invoker.bootstrap("key", a_tree)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=205283538)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__set_data_source(Object _self, Object new_element, Object object, Object refresh_type) {
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("is_kind_of?()", new_element, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_element"))))) {
            return ResultTuple.EMPTY_TUPLE;
        }
        boolean bl = MagikObjectUtils.isnt(new_element, Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self));
        Boolean bl2 = new Boolean(bl);
        if (!bl) {
            bl2 = new Boolean(MagikObjectUtils.is(object, Boolean.TRUE));
        }
        if (MagikObjectUtils.should_be_boolean(bl2)) {
            CallSite widths = Invoker.bootstrap("column_widths", new_element);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_display_trees()", (Object)_self, (Object)Invoker.bootstrap("child_display_trees()", new_element)));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("redistribute_column_widths()", (Object)_self, (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)widths));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_column_headings()", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "column_headings"), (Object)Invoker.bootstrap("column_headings", new_element), (Object)ConstantBuilder.symbolBootstrap("symbol", "column_widths"), (Object)widths));
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "display_trees"), (Object)Invoker.bootstrap("default()", refresh_type, ConstantBuilder.symbolBootstrap("symbol", "renew"))));
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_current_element()", (Object)_self, (Object)new_element));
        } else {
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("empty()", (Object)Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
        }
        CallSite size = Invoker.bootstrap("calculated_size()", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), Boolean.FALSE);
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_number_of_records"), (Object)VectorBuilder.bootstrap("vb", _self, size)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=415117118)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block8: {
            block9: {
                block7: {
                    Object object;
                    Object object2;
                    CallSite an_explorer_element = null;
                    if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")) break block7;
                    ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
                    resultTuple.pop();
                    Object selection = resultTuple.pop();
                    CallSite callSite = Invoker.bootstrapPrivate("output_has_focus?", (Object)_self);
                    if (MagikObjectUtils.should_be_boolean(callSite)) {
                        callSite = object2 = Invoker.bootstrap("activated?", selection);
                    }
                    if (MagikObjectUtils.should_be_boolean(callSite)) {
                        object2 = object = Invoker.bootstrap("is_group?", selection);
                    }
                    if (MagikObjectUtils.should_be_boolean(object2)) {
                        an_explorer_element = Invoker.bootstrap("an_explorer_element()", selection);
                        object = new Boolean(MagikObjectUtils.isnt(an_explorer_element, null));
                    }
                    if (!MagikObjectUtils.should_be_boolean(object)) break block8;
                    CallSite refresh_type = MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("$slot_get_force_empty_selection?()", (Object)_self)) ? ConstantBuilder.symbolBootstrap("symbol", "renew") : ConstantBuilder.symbolBootstrap("symbol", "refresh");
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_data_source()", (Object)_self, (Object)an_explorer_element, (Object)Boolean.TRUE, (Object)refresh_type));
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_force_empty_selection?()", (Object)_self, (Object)Boolean.FALSE));
                    break block8;
                }
                if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "refresh")) break block9;
                Object object = Invoker.bootstrapPrivate("output_has_focus?", (Object)_self);
                if (MagikObjectUtils.should_be_boolean(object)) {
                    object = new Boolean(MagikObjectUtils.isnt(data, null));
                }
                if (!MagikObjectUtils.should_be_boolean(object)) break block8;
                CallSite callSite = Invoker.bootstrap("not", Invoker.bootstrap("empty?", Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_data_source()", (Object)_self, (Object)data, (Object)Boolean.TRUE));
                if (MagikObjectUtils.should_be_boolean(callSite)) {
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_selection()", (Object)_self, (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self))));
                }
                break block8;
            }
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) break block8;
            Object object = Invoker.bootstrapPrivate("output_has_focus?", (Object)_self);
            if (MagikObjectUtils.should_be_boolean(object)) {
                object = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), null));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_data_source()", (Object)_self, (Object)Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "refresh")));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=446827316)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__editor_required(Object _self, Object p_tree, Object p_index, Object p_value_id, Object p_agent) {
        CallSite l_editor;
        block2: {
            Boolean bl;
            CallSite target_explorer_element = null;
            l_editor = null;
            boolean bl2 = MagikObjectUtils.is(p_value_id, ConstantBuilder.symbolBootstrap("symbol", "name"));
            Boolean bl3 = new Boolean(bl2);
            if (bl2) {
                bl3 = bl = new Boolean(MagikObjectUtils.isnt(p_tree, null));
            }
            if (MagikObjectUtils.should_be_boolean(bl3)) {
                target_explorer_element = Invoker.bootstrap("key", p_tree);
                bl = new Boolean(MagikObjectUtils.isnt(target_explorer_element, null));
            }
            if (!MagikObjectUtils.should_be_boolean(bl) || !MagikObjectUtils.should_be_boolean(Invoker.bootstrap("action_allowed?()", Invoker.bootstrap("owner", target_explorer_element), ConstantBuilder.symbolBootstrap("symbol", "rename"), target_explorer_element))) break block2;
            l_editor = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "in_place_value_editor"), p_agent);
        }
        return l_editor;
    }

    @SourceHash(value=1472235530)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__handle_tree_key_press(Object _self, Object p_keyb_event) {
        CallSite callSite;
        CallSite l_char = Invoker.bootstrap("id", p_keyb_event);
        CallSite callSite2 = Invoker.bootstrap("is_class_of?()", l_char, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "character"));
        Object object = callSite2;
        if (MagikObjectUtils.should_be_boolean(object)) {
            object = callSite = new Boolean(MagikObjectUtils.is(l_char, Invoker.bootstrap("delete", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "character"))));
        }
        if (MagikObjectUtils.should_be_boolean(object)) {
            callSite = Invoker.bootstrap("enabled?", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_actions()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "delete")));
        }
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("delete()", (Object)_self));
        } else {
            Object object2 = Invoker.bootstrap("not", callSite2);
            if (MagikObjectUtils.should_be_boolean(object2)) {
                object2 = new Boolean(MagikObjectUtils.is(l_char, ConstantBuilder.symbolBootstrap("symbol", "f5")));
            }
            if (MagikObjectUtils.should_be_boolean(object2)) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("refresh()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
            }
        }
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("default_handle_keypress()", (Object)Invoker.bootstrap("agent", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)), (Object)p_keyb_event));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1710475399)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__setup_popup_menu(Object _self) {
        block0: {
            CallSite popup = Invoker.bootstrapPrivate("defined_popup_menu_for()", (Object)_self, (Object)Invoker.bootstrapPrivate("component_name", (Object)_self), (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self));
            if (popup == null) break block0;
            CallSite callSite = popup;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("popup_menu\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)callSite));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1490820176)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__rename(Object _self) {
        CallSite selection = Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self));
        CallSite tree = Invoker.bootstrap("an_element()", selection);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("default_handle_edit()", (Object)Invoker.bootstrap("agent", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)), (Object)tree, (Object)Invoker.bootstrap("start_row", selection), null, (Object)selection));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-197452379)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__copy_to_scrapbook(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("copy_to_scrapbook()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1348778348)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__explore(Object _self) {
        CallSite explorer_element = Invoker.bootstrap("key", Invoker.bootstrap("an_element()", Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("explore()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)explorer_element));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=874409810)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_group_output_view__output_gained_focus(Object _self) {
        Invoker.superNaturalBootstrap("output_gained_focus()", "explorer_output_view", "sw", (Object)_self);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_force_empty_selection?()", (Object)_self, (Object)Boolean.TRUE));
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_output_view_24589.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_output_view_24589.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_group_output_view_24589.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_group_output_view_24589;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_group_output_view_24588
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_group_output_view_24588() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_group_output_view.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_group_output_view"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "tree_item"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "display_trees"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "current_element"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "force_empty_selection?"), Boolean.TRUE)), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_output_view"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_output_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "display_trees"), (Object)ConstantBuilder.symbolBootstrap("symbol", "read"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_output_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_selection"), ConstantBuilder.symbolBootstrap("symbol", "explorer_elements"), ConstantBuilder.symbolBootstrap("symbol", "refresh")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_group_output_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_number_of_records")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_group_output_view", "view_output_type", explorer_group_output_view_24589.class, "explorer_group_output_view__view_output_type_", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_output_view", "can_handle_selection?()", explorer_group_output_view_24589.class, "explorer_group_output_view__can_handle_selection?", 2, 2);
        MagikObjectUtils.createMethod("explorer_group_output_view", "init_actions()", explorer_group_output_view_24589.class, "explorer_group_output_view__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_output_view", "build_gui()", explorer_group_output_view_24589.class, "explorer_group_output_view__build_gui", 3, 2);
        MagikObjectUtils.createMethod("explorer_group_output_view", "manage_actions()", explorer_group_output_view_24589.class, "explorer_group_output_view__manage_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_output_view", "delete()", explorer_group_output_view_24589.class, "explorer_group_output_view__delete", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_output_view", "tree_item_select()", explorer_group_output_view_24589.class, "explorer_group_output_view__tree_item_select", 3, 3);
        MagikObjectUtils.createMethod("explorer_group_output_view", "tree_item_double_click()", explorer_group_output_view_24589.class, "explorer_group_output_view__tree_item_double_click", 2, 2);
        MagikObjectUtils.createMethod("explorer_group_output_view", "set_data_source()", explorer_group_output_view_24589.class, "explorer_group_output_view__set_data_source", 4, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_group_output_view", "sw_databus_data_available()", explorer_group_output_view_24589.class, "explorer_group_output_view__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_group_output_view", "editor_required()", explorer_group_output_view_24589.class, "explorer_group_output_view__editor_required", 5, 5);
        MagikObjectUtils.createMethod("explorer_group_output_view", "handle_tree_key_press()", explorer_group_output_view_24589.class, "explorer_group_output_view__handle_tree_key_press", 2, 2);
        MagikObjectUtils.createMethod("explorer_group_output_view", "setup_popup_menu()", explorer_group_output_view_24589.class, "explorer_group_output_view__setup_popup_menu", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_group_output_view", "rename()", explorer_group_output_view_24589.class, "explorer_group_output_view__rename", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_output_view", "copy_to_scrapbook()", explorer_group_output_view_24589.class, "explorer_group_output_view__copy_to_scrapbook", 1, 1);
        MagikObjectUtils.createMethod("explorer_group_output_view", "explore()", explorer_group_output_view_24589.class, "explorer_group_output_view__explore", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_group_output_view", "output_gained_focus()", explorer_group_output_view_24589.class, "explorer_group_output_view__output_gained_focus", 1, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_rwo_set_output_view_24658 {
    @SourceHash(value=-683574221)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__view_output_type_(Object _self) {
        return ConstantBuilder.symbolBootstrap("symbol", "rwo_set");
    }

    @SourceHash(value=-364953836)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__can_handle_selection?(Object _self, Object selection) {
        CallSite callSite = Invoker.bootstrap("is_collection?", selection);
        if (!MagikObjectUtils.should_be_boolean(callSite)) {
            callSite = Invoker.bootstrap("is_records?", selection);
        }
        return TupleBuilder.bootstrap("tb", callSite, Boolean.FALSE);
    }

    @SourceHash(value=-216370725)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__init_actions(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook_sh")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook()"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "delete"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete_sh")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "delete_object"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "delete()"))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "interrupt_work"), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "interrupt()"), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "stop"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE)));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "get_all_records"), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "get_all_records()"), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE)));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "select_all_records"), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "select_all_records()"), ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE)));
        Invoker.superNaturalBootstrap("init_actions()", "explorer_output_view", "sw", (Object)_self);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-680343759)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__build_gui(Object _self, Object container, Object xml_element) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_rwo_set_item()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "recordset_gui_component"), ConstantBuilder.symbolBootstrap("symbol", "lister"), _self)));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_tree_item()", (Object)_self, (Object)Invoker.bootstrap("build_gui()", Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self), container, ConstantBuilder.symbolBootstrap("symbol", "identifier"), ConstantBuilder.symbolBootstrap("symbol", "record_lister"), ConstantBuilder.symbolBootstrap("symbol", "message_on_no_data?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "key_pressed_notifier"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "handler"), _self, ConstantBuilder.symbolBootstrap("symbol", "handle_tree_key_press()")), ConstantBuilder.symbolBootstrap("symbol", "show_focus?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_property()", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "borderless"), (Object)Boolean.TRUE));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_property()", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "column_allow_visibility_manage?"), (Object)Boolean.TRUE));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_dependent()", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "all_records_found"), (Object)ConstantBuilder.symbolBootstrap("symbol", "filtering?"), (Object)ConstantBuilder.symbolBootstrap("symbol", "background_process_complete")));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_dependent()", (Object)Invoker.bootstrap("tree_manager", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "filtering?")));
        Object object = Boolean.TRUE;
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("allow_background_process?\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)object));
        ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_popup_menu()", (Object)_self));
        ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_event_handler()", (Object)Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "records_selected"), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_rwos()")));
        ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_event_handler()", (Object)Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "double_clicked"), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "double_click_rwo()")));
        object = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "handler"), _self, ConstantBuilder.symbolBootstrap("symbol", "handle_visible_selector()"));
        ResultTuple cfr_ignored_10 = (ResultTuple)((Object)Invoker.tupleBootstrap("visible_notify_selector\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)object));
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_get_tree_item()", (Object)_self));
    }

    @SourceHash(value=-992225885)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__leave_catcher__", type=Object[].class, start=163, end=215, index=2), @EnvVar(name="__dynamic_frame__", type=Object.class, start=149, end=215, index=0), @EnvVar(name="delete_enabled?", type=Object.class, start=13, end=305, index=1)})
    public static Object explorer_rwo_set_output_view__manage_actions(Object _self) {
        CallSite callSite;
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        CallSite callSite2 = Invoker.bootstrapPrivate("output_has_focus?", (Object)_self);
        if (MagikObjectUtils.should_be_boolean(callSite2)) {
            callSite2 = Invoker.bootstrap("not", Invoker.bootstrap("empty?", Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
        }
        EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite2, (Object[])__env__, (int)1);
        CallSite callSite3 = Invoker.bootstrapPrivate("output_has_focus?", (Object)_self);
        CallSite selected_records = Invoker.bootstrap("selected_records", Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self));
        if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))) {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("action_allowed?()", Invoker.bootstrap("owner", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self)), ConstantBuilder.symbolBootstrap("symbol", "delete_records"), Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), selected_records)))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)1);
            } else {
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)2);
                try {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrap("selected_records", Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self))));
                }
                catch (LeaveCatcher.Leave leave) {
                    ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).getLeaveResult(leave);
                }
            }
        }
        if (MagikObjectUtils.should_be_boolean(callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))) {
            callSite = Invoker.bootstrap("not", Invoker.bootstrap("anonymous_collection?", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self)));
        }
        CallSite callSite4 = callSite;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete")), (Object)callSite4));
        callSite4 = callSite3;
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "copy_to_scrapbook")), (Object)callSite4));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_rwo_set_output_view__manage_actions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="delete_enabled?", type=Object[].class, start=84, end=102, index=1)})
    public static Object __loopbody_(Object[] __env__, Object record) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            boolean bl = MagikObjectUtils.is(Invoker.bootstrap("source_view", record), null);
            Object object = new Boolean(bl);
            if (!bl) {
                CallSite callSite = Invoker.bootstrap("writable_in_run_transaction?", Invoker.bootstrap("source_view", record));
                if (MagikObjectUtils.should_be_boolean(callSite)) {
                    callSite = Invoker.bootstrap("write_authorised?", record);
                }
                object = Invoker.bootstrap("not", callSite);
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)1);
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-2055597936)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="09dc8f25-deb9-4248-9c7c-e9bf0b781b64", type=Object.class, start=75, end=194, index=0), @EnvVar(name="09dc8f25-deb9-4248-9c7c-e9bf0b781b64", type=Object.class, start=252, end=255, index=0)})
    public static Object explorer_rwo_set_output_view__delete(Object _self) {
        block9: {
            Object[] __env__ = new Object[1];
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("show_alert()", Invoker.bootstrapPrivate("top_frame", (Object)_self), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete_check")), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "yes")), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "no"))))) {
                Object object;
                CallSite selected_records = Invoker.bootstrap("selected_records", Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self));
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[0]};
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "no_longer_undoable"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_rwo_set_output_view_24658.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray));
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("int!delete_records()", (Object)_self, (Object)selected_records));
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            break block9;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object2;
                        object = object2 = Thrower.checkTag(throw_, callSite).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "no_longer_undoable")))) {
                    Object cond = object;
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("show_alert()", (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)Invoker.bootstrap("report_contents_string", cond)));
                } else {
                    throw new Error("Try block caught unexpected error.");
                }
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_rwo_set_output_view__delete")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="09dc8f25-deb9-4248-9c7c-e9bf0b781b64", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=-363927367)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__select_rwos(Object _self, Object selection, Object object) {
        if (MagikObjectUtils.should_be_boolean(object)) {
            CallSite selected_records = Invoker.bootstrap("selected_records", Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self));
            if (MagikObjectUtils.is(Invoker.bootstrap("size", selected_records), 0)) {
                selected_records = null;
            }
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_selection()", (Object)_self, (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self)), (Object)selected_records));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_number_of_records()", (Object)_self));
        }
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-983097152)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__double_click_rwo(Object _self, Object ... args) {
        block0: {
            CallSite selected_records = Invoker.bootstrap("selected_records", Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self));
            if (!MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("\\g", Invoker.bootstrap("size", selected_records), Integer.valueOf(0)))) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_double_click()", (Object)_self, (Object)Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), (Object)Invoker.bootstrap("an_element()", selected_records)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1521600992)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__set_data_source(Object _self, Object explorer_element, Object object, Object object2) {
        block2: {
            block1: {
                boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), explorer_element);
                Boolean bl2 = new Boolean(bl);
                if (!bl) {
                    bl2 = new Boolean(MagikObjectUtils.is(object, Boolean.TRUE));
                }
                if (!MagikObjectUtils.should_be_boolean(bl2)) break block1;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("interrupt()", (Object)_self));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("empty()", (Object)Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_current_element()", (Object)_self, (Object)explorer_element));
                Object object3 = Boolean.TRUE;
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "get_all_records")), (Object)object3));
                object3 = Boolean.TRUE;
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_all_records")), (Object)object3));
                ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_display_size()", (Object)_self, null));
                ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_number_of_records()", (Object)_self));
                object3 = Boolean.FALSE;
                ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("auto_redraw?\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self), (Object)object3));
                object3 = Boolean.FALSE;
                ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrap("retain_headings?\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self), (Object)object3));
                object3 = Invoker.bootstrap("ace", explorer_element);
                ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrap("ace\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self), (Object)object3));
                object3 = Invoker.bootstrap("visible_field_names", explorer_element);
                ResultTuple cfr_ignored_10 = (ResultTuple)((Object)Invoker.tupleBootstrap("visible_field_names\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self), (Object)object3));
                object3 = Invoker.bootstrap("available_field_names", explorer_element);
                ResultTuple cfr_ignored_11 = (ResultTuple)((Object)Invoker.tupleBootstrap("listed_field_names\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self), (Object)object3));
                ResultTuple cfr_ignored_12 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("start_progress()", (Object)_self));
                object3 = Invoker.bootstrap("rwo_set", explorer_element);
                ResultTuple cfr_ignored_13 = (ResultTuple)((Object)Invoker.tupleBootstrap("data_source\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self), (Object)object3));
                object3 = Boolean.TRUE;
                ResultTuple cfr_ignored_14 = (ResultTuple)((Object)Invoker.tupleBootstrap("auto_redraw?\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self), (Object)object3));
                break block2;
            }
            if (!MagikObjectUtils.is(object2, Boolean.TRUE)) break block2;
            ResultTuple cfr_ignored_15 = (ResultTuple)((Object)Invoker.tupleBootstrap("empty()", (Object)Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
            ResultTuple cfr_ignored_16 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_number_of_records()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-658392431)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block8: {
            block6: {
                block7: {
                    Object object;
                    CallSite an_explorer_element = null;
                    if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")) break block6;
                    ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
                    Object selection = resultTuple.pop();
                    Object plugin = resultTuple.pop();
                    Object object2 = Invoker.bootstrapPrivate("output_has_focus?", (Object)_self);
                    if (MagikObjectUtils.should_be_boolean(object2)) {
                        object2 = new Boolean(MagikObjectUtils.isnt(plugin, _self));
                    }
                    if (!MagikObjectUtils.should_be_boolean(object2)) break block7;
                    Object object3 = Invoker.bootstrap("not", Invoker.bootstrap("is_records?", selection));
                    if (MagikObjectUtils.should_be_boolean(object3)) {
                        object3 = object = Invoker.bootstrap("is_collection?", selection);
                    }
                    if (MagikObjectUtils.should_be_boolean(object3)) {
                        an_explorer_element = Invoker.bootstrap("an_explorer_element()", selection);
                        object = new Boolean(MagikObjectUtils.isnt(an_explorer_element, null));
                    }
                    if (!MagikObjectUtils.should_be_boolean(object)) break block8;
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("reset_database_observer()", (Object)_self, (Object)Invoker.bootstrap("a_collection()", an_explorer_element)));
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_data_source()", (Object)_self, (Object)an_explorer_element, (Object)Invoker.bootstrapPrivate("force_dataset_renewal?", (Object)_self), (Object)Invoker.bootstrapPrivate("$slot_get_force_empty_selection?()", (Object)_self)));
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_force_empty_selection?()", (Object)_self, (Object)Boolean.FALSE));
                    break block8;
                }
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrapPrivate("output_has_focus?", (Object)_self)))) break block8;
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("reset_database_observer()", (Object)_self));
                break block8;
            }
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "refresh")) break block8;
            Object object = Invoker.bootstrapPrivate("output_has_focus?", (Object)_self);
            if (MagikObjectUtils.should_be_boolean(object)) {
                object = new Boolean(MagikObjectUtils.isnt(data, null));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                CallSite callSite = Invoker.bootstrap("not", Invoker.bootstrap("empty?", Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_data_source()", (Object)_self, (Object)data, (Object)Boolean.TRUE));
                if (MagikObjectUtils.should_be_boolean(callSite)) {
                    ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_selection()", (Object)_self, (Object)VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self))));
                }
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=362718984)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=128, end=337, index=1), @EnvVar(name="record_transactions", type=Object.class, start=120, end=337, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=354, index=3), @EnvVar(name="deletable?", type=Object.class, start=13, end=354, index=2), @EnvVar(name="__leave_catcher__", type=Object[].class, start=57, end=355, index=4)})
    public static Object explorer_rwo_set_output_view__int!delete_records(Object _self, Object records) {
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.TRUE, (Object[])__env__, (int)2);
        CallSite undo_description = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "delete_records_from_explorer"));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)4);
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)records));
        }
        catch (LeaveCatcher.Leave leave) {
            ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).getLeaveResult(leave);
        }
        if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)records));
            CallSite a_current_collection = null;
            CallSite a_current_dataset = null;
            boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), null);
            Boolean bl2 = new Boolean(bl);
            if (bl) {
                a_current_collection = Invoker.bootstrap("a_collection()", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self));
                bl2 = new Boolean(MagikObjectUtils.isnt(a_current_collection, null));
            }
            if (MagikObjectUtils.should_be_boolean(bl2)) {
                a_current_dataset = Invoker.bootstrap("source_view", a_current_collection);
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_observer()", (Object)a_current_dataset, (Object)_self, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "post_delete")), (Object)a_current_collection));
            }
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("run_transaction()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "dataset_transaction"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), undo_description)));
            if (a_current_collection != null) {
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_observer()", (Object)a_current_dataset, (Object)_self, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "post_delete")), (Object)a_current_collection));
            }
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("post_delete()", (Object)_self));
        } else {
            ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("activate_multiple_selection_dialog()", (Object)_self, (Object)undo_description));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_rwo_set_output_view__int!delete_records")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="deletable?", type=Object[].class, start=46, end=64, index=2), @EnvVar(name="deletable?", type=Object[].class, start=91, end=109, index=2), @EnvVar(name="deletable?", type=Object[].class, start=131, end=149, index=2)})
    public static Object __loopbody_2(Object[] __env__, Object record) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)));
        try {
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("writable?", Invoker.bootstrap("source_view", record))))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)2);
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("write_authorised?", record)))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)2);
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("delete_confirmation_required?()", record))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)2);
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_rwo_set_output_view__int!delete_records")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_3(Object[] __env__, Object a_record) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (Object)Invoker.bootstrap("new_delete()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "record_transaction"), a_record)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1980931025)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__handle_tree_key_press(Object _self, Object p_keyb_event) {
        CallSite callSite;
        CallSite l_char = Invoker.bootstrap("id", p_keyb_event);
        CallSite callSite2 = Invoker.bootstrap("is_class_of?()", l_char, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "character"));
        Object object = callSite2;
        if (MagikObjectUtils.should_be_boolean(object)) {
            object = callSite = new Boolean(MagikObjectUtils.is(l_char, Invoker.bootstrap("delete", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "character"))));
        }
        if (MagikObjectUtils.should_be_boolean(object)) {
            callSite = Invoker.bootstrap("enabled?", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_actions()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "delete")));
        }
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("delete()", (Object)_self));
        } else {
            Object object2 = Invoker.bootstrap("not", callSite2);
            if (MagikObjectUtils.should_be_boolean(object2)) {
                object2 = new Boolean(MagikObjectUtils.is(l_char, ConstantBuilder.symbolBootstrap("symbol", "f5")));
            }
            if (MagikObjectUtils.should_be_boolean(object2)) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("refresh()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
            }
        }
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("default_handle_keypress()", (Object)Invoker.bootstrap("agent", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)), (Object)p_keyb_event));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=815478759)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__setup_popup_menu(Object _self) {
        block0: {
            CallSite popup = Invoker.bootstrapPrivate("defined_popup_menu_for()", (Object)_self, (Object)Invoker.bootstrapPrivate("component_name", (Object)_self), (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self));
            if (popup == null) break block0;
            CallSite callSite = popup;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("popup_menu\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self), (Object)callSite));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-269003757)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__copy_to_scrapbook(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("copy_to_scrapbook()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1732173129)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__terminate(Object _self) {
        CallSite a_current_collection = null;
        boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), null);
        Boolean bl2 = new Boolean(bl);
        if (bl) {
            a_current_collection = Invoker.bootstrap("a_collection()", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self));
            bl2 = new Boolean(MagikObjectUtils.isnt(a_current_collection, null));
        }
        if (MagikObjectUtils.should_be_boolean(bl2)) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_observer()", (Object)Invoker.bootstrap("source_view", a_current_collection), (Object)_self, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "post_delete")), (Object)a_current_collection));
        }
        Invoker.superNaturalBootstrap("terminate()", "explorer_output_view", "sw", (Object)_self);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("terminate()", (Object)Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self)));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_dependent()", (Object)Invoker.bootstrap("database", Invoker.bootstrapPrivate("application", (Object)_self)), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "mode")));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1546067584)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__post_init_plugins(Object _self) {
        Invoker.superNaturalBootstrap("post_init_plugins()", "explorer_output_view", "sw", (Object)_self);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_dependent()", (Object)Invoker.bootstrap("database", Invoker.bootstrapPrivate("application", (Object)_self)), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "mode")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_dependent()", (Object)Invoker.bootstrap("database", Invoker.bootstrapPrivate("application", (Object)_self)), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "view")));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-232009201)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__note_change(Object _self, Object who, Object what, Object data, Object ... rest) {
        CallSite a_collection = null;
        if (what == ConstantBuilder.symbolBootstrap("symbol", "all_records_found")) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_display_size()", (Object)_self, (Object)data));
            Object object = data;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("size\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), (Object)object));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_number_of_records()", (Object)_self));
        } else if (what == ConstantBuilder.symbolBootstrap("symbol", "filtering?")) {
            Boolean bl;
            boolean bl2 = MagikObjectUtils.isnt(who, Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self));
            Boolean bl3 = new Boolean(bl2);
            if (bl2) {
                bl3 = bl = new Boolean(MagikObjectUtils.is(data, Boolean.TRUE));
            }
            if (!MagikObjectUtils.should_be_boolean(bl3)) {
                boolean bl4 = MagikObjectUtils.is(who, Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self));
                bl = new Boolean(bl4);
                if (bl4) {
                    bl = new Boolean(MagikObjectUtils.is(data, Boolean.FALSE));
                }
            }
            if (MagikObjectUtils.should_be_boolean(bl)) {
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_display_size()", (Object)_self, null));
                Object var7_7 = null;
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("size\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), var7_7));
                ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("notify_number_of_records()", (Object)_self));
            }
        } else if (what == ConstantBuilder.symbolBootstrap("symbol", "background_process_complete")) {
            Boolean bl = Boolean.FALSE;
            ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("working?\\l\\l", (Object)_self, (Object)bl));
        } else if (what == ConstantBuilder.symbolBootstrap("symbol", "post_delete")) {
            ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("post_delete()", (Object)_self));
        } else if (what == ConstantBuilder.symbolBootstrap("symbol", "view")) {
            boolean bl = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), null);
            Boolean bl5 = new Boolean(bl);
            if (bl) {
                a_collection = Invoker.bootstrap("a_collection()", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self));
                bl5 = new Boolean(MagikObjectUtils.isnt(a_collection, null));
            }
            if (MagikObjectUtils.should_be_boolean(bl5)) {
                Object object;
                if (data == ConstantBuilder.symbolBootstrap("symbol", "changes")) {
                    ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)rest)));
                    resultTuple.pop();
                    resultTuple.pop();
                    Object ds_updated_tables = resultTuple.pop();
                    boolean bl6 = MagikObjectUtils.isnt(ds_updated_tables, null);
                    object = new Boolean(bl6);
                    if (bl6) {
                        object = Invoker.bootstrap("includes?()", ds_updated_tables, Invoker.bootstrap("name", a_collection));
                    }
                } else {
                    object = Boolean.TRUE;
                }
                if (MagikObjectUtils.should_be_boolean(object)) {
                    ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("post_delete()", (Object)_self));
                }
            }
        } else {
            ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self));
            Invoker.superNaturalBootstrap("note_change()", "explorer_output_view", "sw", (Object)_self, (Object)who, (Object)what, (Object)data);
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=266425633)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__post_delete(Object _self) {
        Object var1_1 = null;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("size\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), var1_1));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("set_data_source()", (Object)_self, (Object)Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), (Object)Boolean.TRUE));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=2090405244)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__cache_result_for(Object _self, Object explorer_element) {
        block0: {
            CallSite manager;
            if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("size_is_fast?", Invoker.bootstrap("rwo_set", explorer_element)))) || MagikObjectUtils.should_be_boolean(Invoker.bootstrap("more_to_get_from_stream?", manager = Invoker.bootstrap("tree_manager", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))))) break block0;
            CallSite cache_rwo_set = Invoker.bootstrap("new_from()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rwo_set"), Invoker.bootstrap("map()", Invoker.bootstrap("children", manager), ConstantBuilder.procWithEmptyEnvBootstrap("proc", (Class<?>)explorer_rwo_set_output_view_24658.class, "proc___2", "", 2, 2, 0, 0)));
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("cache_rwo_set()", (Object)explorer_element, (Object)cache_rwo_set));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_rwo_set_output_view__cache_result_for")
    @SourceHash(value=435252117)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    public static Object proc___2(Object _self, Object t) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("key", (Object)t));
    }

    @SourceHash(value=262867876)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__output_gained_focus(Object _self) {
        Invoker.superNaturalBootstrap("output_gained_focus()", "explorer_output_view", "sw", (Object)_self);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_force_empty_selection?()", (Object)_self, (Object)Boolean.TRUE));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=850198207)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__working?_(Object _self) {
        return new Boolean(MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_working?()", (Object)_self), Boolean.TRUE));
    }

    @SourceHash(value=795639778)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__start_progress(Object _self) {
        Boolean bl = Boolean.TRUE;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("working?\\l\\l", (Object)_self, (Object)bl));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_progress_task()", (Object)_self, (Object)Invoker.bootstrap("do_work_at_priority()", Invoker.bootstrapPrivate("application", (Object)_self), _self, ConstantBuilder.symbolBootstrap("symbol", "int!explorer_rwo_set_output_view_progress()"), Invoker.bootstrap("high_background_priority", Thread.currentThread()))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-880400841)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="64f78e62-fc75-4b0f-a529-ad3ac745c888", type=Object.class, start=15, end=141, index=0), @EnvVar(name="fc529db5-6a9b-4e7a-9062-b9bbb883cc6c", type=Object.class, start=296, end=424, index=1), @EnvVar(name="fc529db5-6a9b-4e7a-9062-b9bbb883cc6c", type=Object.class, start=459, end=462, index=1), @EnvVar(name="64f78e62-fc75-4b0f-a529-ad3ac745c888", type=Object.class, start=176, end=538, index=0)})
    public static Object explorer_rwo_set_output_view__int!explorer_rwo_set_output_view_progress(Object _self) {
        block25: {
            Object object;
            Object[] __env__;
            block24: {
                Object object2;
                __env__ = new Object[2];
                object = null;
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[0]};
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_rwo_set_output_view_24658.class, "proc___3", "", 3, 3, 0, 0, (Object[])objectArray));
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("sleep()", (Object)Thread.currentThread(), (Object)1000));
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            break block24;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object3;
                        object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrapPrivate("working?", (Object)_self)))) {
                return ResultTuple.EMPTY_TUPLE;
            }
            try {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("install_progress_indicator()", (Object)_self, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "displaying_data")), (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "interrupt_message"), (Object)ConstantBuilder.symbolBootstrap("symbol", "interrupt()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "progress_aspect"), (Object)ConstantBuilder.symbolBootstrap("symbol", "work_progress"), (Object)ConstantBuilder.symbolBootstrap("symbol", "stop_aspect"), (Object)ConstantBuilder.symbolBootstrap("symbol", "work_completed")));
                while (true) {
                    Object object4;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrapPrivate("working?", (Object)_self)))) {
                        break block25;
                    }
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "work_progress")));
                    EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)1);
                    DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                    CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
                    DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                    try {
                        try {
                            DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                            try {
                                Object[] objectArray = new Object[]{__env__[1]};
                                ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_rwo_set_output_view_24658.class, "proc___4", "", 3, 3, 0, 0, (Object[])objectArray));
                                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("sleep()", (Object)Thread.currentThread(), (Object)200));
                                DynamicScope.destroyFrame();
                                DynamicScope.destroyFrame();
                                continue;
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                        }
                        catch (Thrower.Throw throw_) {
                            Object object5;
                            object4 = object5 = Thrower.checkTag(throw_, callSite).peek();
                            DynamicScope.destroyFrame();
                        }
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break;
                    object = object4;
                }
                throw new Error("Try block caught unexpected error.");
            }
            finally {
                InterruptInfrastructure.disableInterrupts();
                try {
                    ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "work_completed")));
                }
                finally {
                    InterruptInfrastructure.enableInterrupts();
                }
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_rwo_set_output_view__int!explorer_rwo_set_output_view_progress")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="64f78e62-fc75-4b0f-a529-ad3ac745c888", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___3(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @Parent(method="explorer_rwo_set_output_view__int!explorer_rwo_set_output_view_progress")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="fc529db5-6a9b-4e7a-9062-b9bbb883cc6c", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___4(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=814068549)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__interrupt(Object _self) {
        block3: {
            CallSite callSite = Invoker.bootstrapPrivate("$slot_get_working?()", (Object)_self);
            Boolean bl = Boolean.FALSE;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("working?\\l\\l", (Object)_self, (Object)bl));
            if (Invoker.bootstrapPrivate("$slot_get_progress_task()", (Object)_self) != null) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "work_completed")));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("cancel()", (Object)Invoker.bootstrapPrivate("$slot_get_progress_task()", (Object)_self)));
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_progress_task()", (Object)_self, null));
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("interrupt_background_process()", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)));
            if (!MagikObjectUtils.is(callSite, Boolean.TRUE)) break block3;
            Boolean bl2 = Boolean.FALSE;
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl2));
            boolean bl3 = MagikObjectUtils.isnt(Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), null);
            Boolean bl4 = new Boolean(bl3);
            if (bl3) {
                bl4 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("size", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self)), null));
            }
            if (MagikObjectUtils.should_be_boolean(bl4)) {
                ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("interrupt_stream()", (Object)Invoker.bootstrap("tree_manager", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
                ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("redraw()", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=198805015)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__handle_visible_selector(Object _self, Object object) {
        block0: {
            if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", object))) break block0;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("interrupt()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1128642686)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__working?\l\l_(Object _self, Object object) {
        CallSite callSite = Invoker.bootstrapPrivate("$slot_set_working?()", (Object)_self, (Object)object);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "interrupt_work")), (Object)callSite));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1853565514)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__notify_number_of_records(Object _self) {
        CallSite selected_records_size;
        CallSite size = Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self) == null ? null : (MagikObjectUtils.isnt(selected_records_size = Invoker.bootstrap("size", Invoker.bootstrap("selected_records", Invoker.bootstrapPrivate("$slot_get_rwo_set_item()", (Object)_self))), 0) ? selected_records_size : (Invoker.bootstrapPrivate("$slot_get_display_size()", (Object)_self) != null ? Invoker.bootstrapPrivate("$slot_get_display_size()", (Object)_self) : (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("filtering?", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))) ? null : Invoker.bootstrap("calculated_size()", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self), Boolean.FALSE))));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_number_of_records"), (Object)VectorBuilder.bootstrap("vb", _self, size)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-2093745633)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__get_all_records(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("interrupt()", (Object)_self));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("start_progress()", (Object)_self));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("get_all_records()", (Object)Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-289179085)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__activate_multiple_selection_dialog(Object _self, Object undo_description) {
        CallSite deletion_rwo_set = Invoker.bootstrap("rwo_set", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("databus_request_data()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")), Integer.valueOf(2)));
        CallSite dd = Invoker.bootstrapPrivate("get_dialog()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "deletion_dialog"));
        if (dd == null) {
            dd = Invoker.bootstrap("new_dialog()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "multiple_deletion_dialog"), Invoker.bootstrapPrivate("top_frame", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "undo_message"), undo_description, ConstantBuilder.symbolBootstrap("symbol", "post_delete_notifier"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "handler"), _self, ConstantBuilder.symbolBootstrap("symbol", "post_delete()")), ConstantBuilder.symbolBootstrap("symbol", "help_wanted_handler"), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "handler"), _self, ConstantBuilder.symbolBootstrap("symbol", "help_wanted()")));
            CallSite callSite = deletion_rwo_set;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("rwo_set\\l\\l", (Object)dd, (Object)callSite));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate_relative_to()", (Object)dd, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "multiple_deletion_dialog")), (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)50, (Object)50));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("cache_dialog()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "deletion_dialog"), (Object)dd));
        } else {
            CallSite callSite = deletion_rwo_set;
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("rwo_set\\l\\l", (Object)dd, (Object)callSite));
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate()", (Object)dd));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1030422922)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__reset_database_observer(Object _self, Object p_new_collection) {
        block5: {
            CallSite a_current_collection;
            block6: {
                block4: {
                    a_current_collection = null;
                    if (Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self) != null) {
                        a_current_collection = Invoker.bootstrap("a_collection()", Invoker.bootstrapPrivate("$slot_get_current_element()", (Object)_self));
                    }
                    boolean bl = MagikObjectUtils.isnt(p_new_collection, null);
                    Boolean bl2 = new Boolean(bl);
                    if (bl) {
                        bl2 = new Boolean(MagikObjectUtils.isnt(a_current_collection, null));
                    }
                    if (!MagikObjectUtils.should_be_boolean(bl2)) break block4;
                    CallSite a_new_dataset = Invoker.bootstrap("source_view", p_new_collection);
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_observer()", (Object)Invoker.bootstrap("source_view", a_current_collection), (Object)_self, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "post_delete")), (Object)a_current_collection));
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_observer()", (Object)a_new_dataset, (Object)_self, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "post_delete")), (Object)p_new_collection));
                    break block5;
                }
                boolean bl = MagikObjectUtils.is(p_new_collection, null);
                Boolean bl3 = new Boolean(bl);
                if (bl) {
                    bl3 = new Boolean(MagikObjectUtils.isnt(a_current_collection, null));
                }
                if (!MagikObjectUtils.should_be_boolean(bl3)) break block6;
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_observer()", (Object)Invoker.bootstrap("source_view", a_current_collection), (Object)_self, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "post_delete")), (Object)a_current_collection));
                break block5;
            }
            boolean bl = MagikObjectUtils.isnt(p_new_collection, null);
            Boolean bl4 = new Boolean(bl);
            if (bl) {
                bl4 = new Boolean(MagikObjectUtils.is(a_current_collection, null));
            }
            if (!MagikObjectUtils.should_be_boolean(bl4)) break block5;
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_observer()", (Object)Invoker.bootstrap("source_view", p_new_collection), (Object)_self, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "post_delete")), (Object)p_new_collection));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-420920200)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_rwo_set_output_view__select_all_records(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("get_all_records()", (Object)_self));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("select_all()", (Object)Invoker.bootstrap("selection", Invoker.bootstrapPrivate("$slot_get_tree_item()", (Object)_self))));
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_rwo_set_output_view_24658.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_rwo_set_output_view_24658.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_rwo_set_output_view_24658.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_rwo_set_output_view_24658;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_rwo_set_output_view_24657
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_rwo_set_output_view_24657() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_rwo_set_output_view.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_rwo_set_output_view"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "rwo_set_item"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "tree_item"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "current_element"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "force_empty_selection?"), Boolean.TRUE), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "progress_task"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "working?"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "display_size"), null)), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_output_view"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_rwo_set_output_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_selection"), ConstantBuilder.symbolBootstrap("symbol", "refresh")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_rwo_set_output_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_number_of_records")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_variable()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_rwo_set_output_view"), (Object)ConstantBuilder.symbolBootstrap("symbol", "force_dataset_renewal?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "view_output_type", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__view_output_type_", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "can_handle_selection?()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__can_handle_selection?", 2, 2);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "init_actions()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "build_gui()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__build_gui", 3, 2);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "manage_actions()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__manage_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "delete()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__delete", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "select_rwos()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__select_rwos", 3, 3);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "double_click_rwo()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__double_click_rwo", 2, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "set_data_source()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__set_data_source", 4, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "sw_databus_data_available()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "int!delete_records()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__int!delete_records", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "handle_tree_key_press()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__handle_tree_key_press", 2, 2);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "setup_popup_menu()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__setup_popup_menu", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "copy_to_scrapbook()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__copy_to_scrapbook", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "terminate()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__terminate", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "post_init_plugins()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__post_init_plugins", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "note_change()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__note_change", 5, 4);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "post_delete()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__post_delete", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "cache_result_for()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__cache_result_for", 2, 2);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "output_gained_focus()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__output_gained_focus", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "working?", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__working?_", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "start_progress()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__start_progress", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "int!explorer_rwo_set_output_view_progress()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__int!explorer_rwo_set_output_view_progress", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "interrupt()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__interrupt", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "handle_visible_selector()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__handle_visible_selector", 2, 2);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "working?<<", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__working?\\l\\l_", 2, 2);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "notify_number_of_records()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__notify_number_of_records", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "get_all_records()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__get_all_records", 1, 1);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "activate_multiple_selection_dialog()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__activate_multiple_selection_dialog", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "reset_database_observer()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__reset_database_observer", 2, 1, false, false, true, 0);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_rwo_set_output_view", "select_all_records()", explorer_rwo_set_output_view_24658.class, "explorer_rwo_set_output_view__select_all_records", 1, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_edit_plugin_24710 {
    @SourceHash(value=1217606352)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__init_actions(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "edit"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "edit")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "edit_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "edit_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "edit_object"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "edit_selection()"))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "goto"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "goto_object"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "action_message"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "goto()"), Boolean.FALSE))));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "goto_in_additional_view"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_in_additional_view")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_in_additional_view_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_in_additional_view_sh")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "goto_object_in_additional_view"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "action_message"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "goto()"), Boolean.TRUE))));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "goto_primary"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_primary_context")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_primary_context_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_primary_context_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "goto_object"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "action_message"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "goto_primary_spatial_context()"), Boolean.FALSE))));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "goto_primary_new_window"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_primary_context_new_window")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_primary_context_new_window_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_primary_context_new_window_sh")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "goto_object_in_additional_view"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "action_message"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "goto_primary_spatial_context()"), Boolean.TRUE))));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "select_spatial_context_and_goto"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_select_context")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_select_context_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_select_context_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "goto_object"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "action_message"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "select_spatial_context_and_goto()"), Boolean.FALSE))));
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "select_spatial_context_and_goto_new_window"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_select_context_new_window")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_select_context_new_window_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_select_context_new_window_sh")), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "goto_object_in_additional_view"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "action_message"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "select_spatial_context_and_goto()"), Boolean.TRUE))));
        ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "highlight"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "highlight")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "highlight_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "highlight_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "highlight"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "menubar_control"), ConstantBuilder.symbolBootstrap("symbol", "toggle_item"), ConstantBuilder.symbolBootstrap("symbol", "toolbar_control"), ConstantBuilder.symbolBootstrap("symbol", "image_toggle_item"), ConstantBuilder.symbolBootstrap("symbol", "value_change_message"), ConstantBuilder.symbolBootstrap("symbol", "highlight()"), ConstantBuilder.symbolBootstrap("symbol", "value"), Boolean.FALSE)));
        ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "highlight_primary"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "highlight_primary_context")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "highlight_primary_context_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "highlight_primary_context_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "highlight"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "menubar_control"), ConstantBuilder.symbolBootstrap("symbol", "toggle_item"), ConstantBuilder.symbolBootstrap("symbol", "toolbar_control"), ConstantBuilder.symbolBootstrap("symbol", "image_toggle_item"), ConstantBuilder.symbolBootstrap("symbol", "value_change_message"), ConstantBuilder.symbolBootstrap("symbol", "highlight_primary_spatial_context()"), ConstantBuilder.symbolBootstrap("symbol", "value"), Boolean.FALSE)));
        ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "select_in_map"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_in_map")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_in_map_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_in_map_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "select_geometry"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "select_in_map()"))));
        ResultTuple cfr_ignored_10 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "add_to_map_selection"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "add_to_map_selection")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "add_to_map_selection_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "add_to_map_selection_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "add_to_selection"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "action_message"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "select_in_map()"), ConstantBuilder.symbolBootstrap("symbol", "add")))));
        ResultTuple cfr_ignored_11 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "remove_from_map_selection"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "remove_from_map_selection")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "remove_from_map_selection_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "remove_from_map_selection_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "remove_from_selection"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "action_message"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "select_in_map()"), ConstantBuilder.symbolBootstrap("symbol", "remove")))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1239548967)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__manage_actions(Object _self, Object selection) {
        CallSite selected_collection = null;
        CallSite selected_record = null;
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("definitely_empty?", selection))) {
            Boolean bl = Boolean.FALSE;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "edit")), (Object)bl));
            bl = Boolean.FALSE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto")), (Object)bl));
            bl = Boolean.FALSE;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_in_additional_view")), (Object)bl));
            bl = Boolean.FALSE;
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_primary")), (Object)bl));
            bl = Boolean.FALSE;
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_primary_new_window")), (Object)bl));
            bl = Boolean.FALSE;
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_spatial_context_and_goto")), (Object)bl));
            bl = Boolean.FALSE;
            ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_spatial_context_and_goto_new_window")), (Object)bl));
            bl = Boolean.FALSE;
            ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "highlight")), (Object)bl));
            bl = Boolean.FALSE;
            ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "highlight_primary")), (Object)bl));
            bl = Boolean.FALSE;
            ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_in_map")), (Object)bl));
            bl = Boolean.FALSE;
            ResultTuple cfr_ignored_10 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "add_to_map_selection")), (Object)bl));
            bl = Boolean.FALSE;
            ResultTuple cfr_ignored_11 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "remove_from_map_selection")), (Object)bl));
        } else {
            Object object;
            CallSite callSite;
            Object object2;
            Object object3;
            Object object4;
            Object object5 = Invoker.bootstrap("is_collection?", selection);
            if (MagikObjectUtils.should_be_boolean(object5)) {
                CallSite collection_rwo_set = Invoker.bootstrap("rwo_set", selection);
                Object object6 = Invoker.bootstrap("size_is_fast?", collection_rwo_set);
                if (MagikObjectUtils.should_be_boolean(object6)) {
                    object6 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("size", collection_rwo_set), 0));
                }
                if (MagikObjectUtils.should_be_boolean(object6)) {
                    object5 = Boolean.FALSE;
                }
            }
            Object object7 = Invoker.bootstrap("is_records?", selection);
            Object object8 = Invoker.bootstrap("is_record?", selection);
            if (MagikObjectUtils.should_be_boolean(object7)) {
                selected_record = Invoker.bootstrap("an_element()", selection);
                object7 = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("dataset", selected_record), null));
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", object7))) {
                    object8 = Boolean.FALSE;
                }
            } else if (MagikObjectUtils.should_be_boolean(object5)) {
                selected_collection = Invoker.bootstrap("a_collection()", selection);
                object5 = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("source_view", selected_collection), null));
            }
            CallSite callSite2 = Invoker.bootstrap("has_geometry?", selection);
            CallSite callSite3 = Invoker.bootstrap("has_bounds?", selection);
            Object object9 = object5;
            if (!MagikObjectUtils.should_be_boolean(object9)) {
                object9 = object7;
            }
            if (MagikObjectUtils.should_be_boolean(object4 = object7)) {
                object4 = object3 = Invoker.bootstrapPrivate("has_spatial_contexts_for_selection?()", (Object)_self, (Object)selection);
            }
            if (MagikObjectUtils.should_be_boolean(object2 = callSite3)) {
                object2 = callSite = object7;
            }
            if (MagikObjectUtils.should_be_boolean(object = object8)) {
                object = object3;
            }
            Object object10 = object;
            CallSite ed_man = Invoker.bootstrapPrivate("editor_manager", (Object)_self);
            boolean bl = MagikObjectUtils.isnt(ed_man, null);
            Object object11 = new Boolean(bl);
            if (bl) {
                Object object12 = object5;
                if (MagikObjectUtils.should_be_boolean(object12)) {
                    object12 = object11 = Invoker.bootstrap("can_edit?()", ed_man, selected_collection);
                }
                if (!MagikObjectUtils.should_be_boolean(object12) && MagikObjectUtils.should_be_boolean(object11 = object8)) {
                    object11 = Invoker.bootstrap("can_edit?()", ed_man, selected_record);
                }
            }
            Object object13 = object11;
            ResultTuple cfr_ignored_12 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "edit")), (Object)object13));
            object13 = callSite;
            ResultTuple cfr_ignored_13 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto")), (Object)object13));
            object13 = callSite;
            ResultTuple cfr_ignored_14 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_in_additional_view")), (Object)object13));
            Object object14 = object3;
            if (MagikObjectUtils.should_be_boolean(object14)) {
                object14 = object7;
            }
            object13 = object14;
            ResultTuple cfr_ignored_15 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_primary")), (Object)object13));
            Object object15 = object3;
            if (MagikObjectUtils.should_be_boolean(object15)) {
                object15 = object7;
            }
            object13 = object15;
            ResultTuple cfr_ignored_16 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_primary_new_window")), (Object)object13));
            Object object16 = object10;
            if (!MagikObjectUtils.should_be_boolean(object16)) {
                object16 = callSite;
            }
            object13 = object16;
            ResultTuple cfr_ignored_17 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_spatial_context_and_goto")), (Object)object13));
            Object object17 = object10;
            if (!MagikObjectUtils.should_be_boolean(object17)) {
                object17 = callSite;
            }
            object13 = object17;
            ResultTuple cfr_ignored_18 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_spatial_context_and_goto_new_window")), (Object)object13));
            Object object18 = callSite2;
            if (MagikObjectUtils.should_be_boolean(object18)) {
                object18 = object7;
            }
            object13 = object18;
            ResultTuple cfr_ignored_19 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "highlight")), (Object)object13));
            Object object19 = object3;
            if (MagikObjectUtils.should_be_boolean(object19)) {
                object19 = object7;
            }
            object13 = object19;
            ResultTuple cfr_ignored_20 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "highlight_primary")), (Object)object13));
            Object object20 = callSite2;
            if (MagikObjectUtils.should_be_boolean(object20)) {
                object20 = object7;
            }
            object13 = object20;
            ResultTuple cfr_ignored_21 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_in_map")), (Object)object13));
            Object object21 = callSite2;
            if (MagikObjectUtils.should_be_boolean(object21)) {
                object21 = object7;
            }
            object13 = object21;
            ResultTuple cfr_ignored_22 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "add_to_map_selection")), (Object)object13));
            Object object22 = callSite2;
            if (MagikObjectUtils.should_be_boolean(object22)) {
                object22 = object7;
            }
            object13 = object22;
            ResultTuple cfr_ignored_23 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "remove_from_map_selection")), (Object)object13));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1658687096)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="b171d940-666b-4260-83b3-2a0d83eb57b5", type=Object.class, start=141, end=368, index=0), @EnvVar(name="b171d940-666b-4260-83b3-2a0d83eb57b5", type=Object.class, start=403, end=442, index=0), @EnvVar(name="b171d940-666b-4260-83b3-2a0d83eb57b5", type=Object.class, start=483, end=486, index=0)})
    public static Object explorer_edit_plugin__edit_selection(Object _self, Object record) {
        block23: {
            Object[] __env__ = new Object[1];
            CallSite editor_manager = Invoker.bootstrapPrivate("editor_manager", (Object)_self);
            if (editor_manager != null) {
                try {
                    Object object;
                    Boolean bl = Boolean.TRUE;
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl));
                    ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
                    resultTuple.pop();
                    Object selection = resultTuple.pop();
                    CallSite collection = Invoker.bootstrap("a_collection()", selection);
                    boolean bl2 = MagikObjectUtils.is(record, null);
                    Object object2 = new Boolean(bl2);
                    if (bl2) {
                        object2 = Invoker.bootstrap("is_records?", selection);
                    }
                    if (MagikObjectUtils.should_be_boolean(object2)) {
                        record = Invoker.bootstrap("an_element()", selection);
                    }
                    EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                    DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                    CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                    DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                    try {
                        try {
                            DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                            try {
                                Object[] objectArray = new Object[]{__env__[0]};
                                ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "auth!no_access"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_edit_plugin_24710.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray));
                                boolean bl3 = MagikObjectUtils.isnt(record, null);
                                Boolean bl4 = new Boolean(bl3);
                                if (bl3) {
                                    bl4 = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("dataset", record), null));
                                }
                                if (MagikObjectUtils.should_be_boolean(bl4)) {
                                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("edit_object()", (Object)editor_manager, (Object)record));
                                } else {
                                    boolean bl5 = MagikObjectUtils.isnt(collection, null);
                                    Boolean bl6 = new Boolean(bl5);
                                    if (bl5) {
                                        bl6 = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrap("source_view", collection), null));
                                    }
                                    if (MagikObjectUtils.should_be_boolean(bl6)) {
                                        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("edit_collection()", (Object)editor_manager, (Object)collection));
                                    }
                                }
                                DynamicScope.destroyFrame();
                                DynamicScope.destroyFrame();
                                break block23;
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                        }
                        catch (Thrower.Throw throw_) {
                            Object object3;
                            object = object3 = Thrower.checkTag(throw_, callSite).peek();
                            DynamicScope.destroyFrame();
                        }
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "auth!no_access")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
                finally {
                    InterruptInfrastructure.disableInterrupts();
                    try {
                        Boolean bl = Boolean.FALSE;
                        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl));
                    }
                    finally {
                        InterruptInfrastructure.enableInterrupts();
                    }
                }
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_edit_plugin__edit_selection")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="b171d940-666b-4260-83b3-2a0d83eb57b5", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=1536727549)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__select_in_map(Object _self, Object add_or_remove) {
        Boolean bl = Boolean.TRUE;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl));
        try {
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
            resultTuple.pop();
            Object selection = resultTuple.pop();
            CallSite gs = Invoker.bootstrap("geometry_set()", Invoker.bootstrap("rwo_set", selection), Invoker.bootstrapPrivate("map_world", (Object)_self));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("application_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "set_map_selection"), (Object)VectorBuilder.bootstrap("vb", _self, gs, add_or_remove)));
        }
        finally {
            InterruptInfrastructure.disableInterrupts();
            try {
                Boolean bl2 = Boolean.FALSE;
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl2));
            }
            finally {
                InterruptInfrastructure.enableInterrupts();
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1832410677)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block3: {
            CallSite callSite;
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")) break block3;
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
            resultTuple.pop();
            Object selection = resultTuple.pop();
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self, (Object)selection));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("redraw_highlight()", (Object)_self));
            CallSite callSite2 = Invoker.bootstrapPrivate("edit_on_double_click?", (Object)_self);
            if (MagikObjectUtils.should_be_boolean(callSite2)) {
                callSite2 = callSite = Invoker.bootstrap("activated?", selection);
            }
            if (MagikObjectUtils.should_be_boolean(callSite2)) {
                callSite = Invoker.bootstrap("is_record?", selection);
            }
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("edit_selection()", (Object)_self, (Object)Invoker.bootstrap("an_element()", selection)));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=2048803085)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__spatial_context_lister(Object _self, Object key) {
        CallSite lister;
        block0: {
            lister = Invoker.bootstrapPrivate("get_dialog()", (Object)_self, (Object)key);
            if (lister != null) break block0;
            lister = Invoker.bootstrap("new_dialog()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "choice_lister"), Invoker.bootstrapPrivate("top_frame", (Object)_self));
            CallSite callSite = ConstantBuilder.symbolBootstrap("symbol", "primary_modal");
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("modality\\l\\l", (Object)lister, (Object)callSite));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("cache_dialog()", (Object)_self, (Object)key, (Object)lister));
        }
        return lister;
    }

    @SourceHash(value=-1603546814)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=101, end=162, index=0), @EnvVar(name="application", type=Object.class, start=13, end=245, index=1), @EnvVar(name="result_context", type=Object.class, start=21, end=245, index=2)})
    public static Object explorer_edit_plugin__goto_primary_spatial_context(Object _self, Object object) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("application", (Object)_self), (Object[])__env__, (int)1);
        ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
        resultTuple.pop();
        resultTuple.pop();
        Object selection = resultTuple.pop();
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)selection));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("make_goto_request()", (Object)_self, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)object));
        }
        finally {
            InterruptInfrastructure.disableInterrupts();
            try {
                Boolean bl = Boolean.FALSE;
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl));
            }
            finally {
                InterruptInfrastructure.enableInterrupts();
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_edit_plugin__goto_primary_spatial_context")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="result_context", type=Object[].class, start=70, end=73, index=2)})
    public static Object __loopbody_(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite context_name = Invoker.bootstrap("get_primary_spatial_context_name_for()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), element);
            CallSite context = Invoker.bootstrap("get_spatial_context_for_record()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), element, context_name);
            if (context != null) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("union()", context, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object[])__env__, (int)2);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1716837561)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__goto_selected_spatial_context(Object _self, Object object, Object a_spatial_context) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("make_goto_request()", (Object)_self, (Object)a_spatial_context, (Object)object));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1446569118)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="app", type=Object.class, start=223, end=356, index=0)})
    public static Object explorer_edit_plugin__select_spatial_context_and_goto(Object _self, Object object) {
        block6: {
            CallSite callSite;
            block5: {
                Object object2;
                Object object3;
                Object[] __env__ = new Object[1];
                CallSite obj = null;
                Invoker.bootstrapPrivate("application", (Object)_self);
                ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
                resultTuple.pop();
                resultTuple.pop();
                Object selection = resultTuple.pop();
                CallSite callSite2 = Invoker.bootstrap("has_bounds?", selection);
                if (MagikObjectUtils.should_be_boolean(callSite2) && !MagikObjectUtils.should_be_boolean(callSite2 = Invoker.bootstrap("is_collection?", selection))) {
                    callSite2 = callSite = Invoker.bootstrap("is_records?", selection);
                }
                if (MagikObjectUtils.should_be_boolean(object3 = Invoker.bootstrap("is_record?", selection))) {
                    object3 = object2 = Invoker.bootstrapPrivate("has_spatial_contexts_for_selection?()", (Object)_self, (Object)selection);
                }
                if (MagikObjectUtils.should_be_boolean(object3)) {
                    obj = Invoker.bootstrap("an_element()", selection);
                    object2 = new Boolean(MagikObjectUtils.isnt(obj, null));
                }
                if (!MagikObjectUtils.should_be_boolean(object2)) break block5;
                CallSite context_names = Invoker.bootstrap("get_spatial_context_names_for()", Invoker.bootstrapPrivate("application", (Object)_self), obj);
                if (MagikObjectUtils.is(Invoker.bootstrap("size", context_names), 1)) {
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("goto_named_spatial_context()", (Object)_self, (Object)obj, (Object)object, (Object)Invoker.bootstrap("an_element()", context_names)));
                } else {
                    EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("application", (Object)_self), (Object[])__env__, (int)0);
                    Object[] objectArray = new Object[]{__env__[0]};
                    CallSite items = Invoker.bootstrap("map()", context_names, ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_edit_plugin_24710.class, "proc___2", "", 3, 3, 0, 0, (Object[])objectArray));
                    CallSite cl = Invoker.bootstrapPrivate("spatial_context_lister()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_spatial_context_lister"));
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("setup()", (Object)cl, (Object)items, (Object)_self, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "selected_spatial_context()"), obj, object), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "[]"), Integer.valueOf(2))));
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate_relative_to()", (Object)cl, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_spatial_context_name")), (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)100, (Object)100));
                }
                break block6;
            }
            if (!MagikObjectUtils.should_be_boolean(callSite)) break block6;
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("goto()", (Object)_self, (Object)object));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_edit_plugin__select_spatial_context_and_goto")
    @SourceHash(value=-1694610639)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="app", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___2(Object[] __env__, Object _self, Object a_name) {
        return VectorBuilder.bootstrap("vb", a_name, Invoker.bootstrap("message()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), a_name));
    }

    @SourceHash(value=-926493494)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__make_goto_request(Object _self, Object a_spatial_object, Object object) {
        block2: {
            if (a_spatial_object == null) break block2;
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_class_of?()", a_spatial_object, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "spatial_context")))) {
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("show_alert_on_compound_spatial_context?", (Object)_self))) {
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("show_alert()", (Object)_self, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "heterogeneous_context_using_first"))));
                }
                a_spatial_object = Invoker.bootstrap("an_element()", a_spatial_object);
            }
            CallSite data = VectorBuilder.bootstrap("vb", a_spatial_object, ConstantBuilder.symbolBootstrap("symbol", "new_window?"), object);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("application_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_request"), (Object)data));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-980457928)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__goto_named_spatial_context(Object _self, Object object, Object object2, Object sc_name) {
        CallSite a_spatial_context = Invoker.bootstrap("get_spatial_context_for()", Invoker.bootstrapPrivate("application", (Object)_self), object, sc_name);
        if (a_spatial_context != null) {
            if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("size", a_spatial_context), Integer.valueOf(1)))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("make_goto_request()", (Object)_self, (Object)a_spatial_context, (Object)object2));
            } else {
                CallSite cl = Invoker.bootstrapPrivate("spatial_context_lister()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "goto_spatial_context_lister"));
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("setup()", (Object)cl, (Object)Invoker.bootstrap("as_simple_vector()", Invoker.bootstrap("elements", a_spatial_context)), (Object)_self, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "goto_selected_spatial_context()"), object2), (Object)ConstantBuilder.symbolBootstrap("symbol", "description")));
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate_relative_to()", (Object)cl, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_spatial_context"), (Object)sc_name), (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)100, (Object)100));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1722798908)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="d0ec389c-16da-4677-a7d7-ca3240650fbd", type=Object.class, start=82, end=210, index=0), @EnvVar(name="d0ec389c-16da-4677-a7d7-ca3240650fbd", type=Object.class, start=266, end=305, index=0), @EnvVar(name="d0ec389c-16da-4677-a7d7-ca3240650fbd", type=Object.class, start=346, end=350, index=0)})
    public static Object explorer_edit_plugin__goto(Object _self, Object object) {
        block15: {
            Object[] __env__ = new Object[1];
            try {
                Object object2;
                Boolean bl = Boolean.TRUE;
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl));
                ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
                resultTuple.pop();
                resultTuple.pop();
                Object selection = resultTuple.pop();
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[0]};
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "no_bounds_for_goto"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_edit_plugin_24710.class, "proc___3", "", 3, 3, 0, 0, (Object[])objectArray));
                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("make_goto_request()", (Object)_self, (Object)Invoker.bootstrap("rwo_set", selection), (Object)object));
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            break block15;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object3;
                        object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "no_bounds_for_goto")))) {
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("show_alert()", (Object)_self, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "no_bounds_for_goto"))));
                    break block15;
                }
                throw new Error("Try block caught unexpected error.");
            }
            finally {
                InterruptInfrastructure.disableInterrupts();
                try {
                    Boolean bl = Boolean.FALSE;
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl));
                }
                finally {
                    InterruptInfrastructure.enableInterrupts();
                }
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_edit_plugin__goto")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="d0ec389c-16da-4677-a7d7-ca3240650fbd", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___3(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=2124418568)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__make_highlight_request(Object _self, Object a_spatial_object) {
        block3: {
            if (a_spatial_object == null) break block3;
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_class_of?()", a_spatial_object, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "spatial_context")))) {
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("show_alert_on_compound_spatial_context?", (Object)_self))) {
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("show_alert()", (Object)_self, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "heterogeneous_context_using_first"))));
                }
                a_spatial_object = Invoker.bootstrap("an_element()", a_spatial_object);
            }
            if (a_spatial_object != null) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("application_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "geometry_to_highlight"), (Object)Invoker.bootstrap("geometry_set()", a_spatial_object)));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1695750085)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__highlight(Object _self, Object object) {
        block2: {
            CallSite map_man = Invoker.bootstrap("get_service_provider()", Invoker.bootstrapPrivate("application", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "map_manager"));
            if (map_man == null) break block2;
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_post_renderer()", (Object)map_man, (Object)_self, (Object)Invoker.bootstrapPrivate("render_priority", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "transient_drawer")));
            } else {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_post_renderer()", (Object)map_man, (Object)_self));
            }
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("trigger_transient_redraw()", (Object)map_man, (Object)Invoker.bootstrapPrivate("redraw_bounds()", (Object)_self, (Object)Invoker.bootstrapPrivate("highlight_geometry", (Object)_self)), (Object)2));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=571203611)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__highlight_primary_spatial_context(Object _self, Object object) {
        block2: {
            CallSite map_man = Invoker.bootstrap("get_service_provider()", Invoker.bootstrapPrivate("application", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "map_manager"));
            if (map_man == null) break block2;
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_post_renderer()", (Object)map_man, (Object)_self, (Object)Invoker.bootstrapPrivate("render_priority", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "transient_drawer")));
            } else {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_post_renderer()", (Object)map_man, (Object)_self));
            }
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("trigger_transient_redraw()", (Object)map_man, null, (Object)2));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=982394609)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__selected_spatial_context(Object _self, Object obj, Object object, Object selection) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("goto_named_spatial_context()", (Object)_self, (Object)obj, (Object)object, (Object)Invoker.bootstrap("\\b]", selection, Integer.valueOf(1))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1385454082)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=191, end=215, index=0), @EnvVar(name="app", type=Object[].class, start=26, end=371, index=2), @EnvVar(name="result_context", type=Object[].class, start=13, end=371, index=1)})
    public static Object explorer_edit_plugin__highlight_primary_context_geometry(Object _self, Object a_world) {
        Object[] __env__ = new Object[3];
        EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("application", (Object)_self), (Object[])__env__, (int)2);
        ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
        resultTuple.pop();
        resultTuple.pop();
        Object selection = resultTuple.pop();
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("is_records?", selection)))) {
            return ResultTuple.EMPTY_TUPLE;
        }
        if (MagikObjectUtils.should_be_boolean(BinaryDispatcher.bootstrap("=", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("cached_explorer_selection", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "selection_rwo_set")), Invoker.bootstrap("rwo_set", selection)))) {
            return (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]", (Object)Invoker.bootstrapPrivate("cached_explorer_selection", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "result_contex_geometires")));
        }
        CallSite callSite = Invoker.bootstrap("rwo_set", selection);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("cached_explorer_selection", (Object)_self), (Object)callSite, (Object)ConstantBuilder.symbolBootstrap("symbol", "selection_rwo_set")));
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)selection));
        }
        finally {
            InterruptInfrastructure.disableInterrupts();
            try {
                Boolean bl = Boolean.FALSE;
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl));
            }
            finally {
                InterruptInfrastructure.enableInterrupts();
            }
        }
        if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1) != null) {
            CallSite callSite2 = Invoker.bootstrap("geometry_set_for_world()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), a_world);
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("cached_explorer_selection", (Object)_self), (Object)callSite2, (Object)ConstantBuilder.symbolBootstrap("symbol", "result_contex_geometires")));
            return callSite2;
        }
        Object var10_11 = null;
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("cached_explorer_selection", (Object)_self), var10_11, (Object)ConstantBuilder.symbolBootstrap("symbol", "result_contex_geometires")));
        return null;
    }

    @Parent(method="explorer_edit_plugin__highlight_primary_context_geometry")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="result_context", type=Object[].class, start=70, end=73, index=1)})
    public static Object __loopbody_2(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite context_name = Invoker.bootstrap("get_primary_spatial_context_name_for()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), element);
            CallSite context = Invoker.bootstrap("get_spatial_context_for_record()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), element, context_name);
            if (context != null) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("union()", context, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), (Object[])__env__, (int)1);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-759309530)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__highlight_geometry_(Object _self) {
        ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
        resultTuple.pop();
        resultTuple.pop();
        Object selection = resultTuple.pop();
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("is_records?", selection)))) {
            return ResultTuple.EMPTY_TUPLE;
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrap("geometry_set()", (Object)Invoker.bootstrap("rwo_set", selection), (Object)Invoker.bootstrapPrivate("map_world", (Object)_self)));
    }

    @SourceHash(value=1718083266)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__map_damage_notify(Object _self, Object gc, Object a_map_view) {
        block3: {
            CallSite g;
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("value", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_actions()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "highlight"))))) {
                CallSite g2 = Invoker.bootstrapPrivate("highlight_geometry", (Object)_self);
                boolean bl = MagikObjectUtils.isnt(g2, null);
                Object object = new Boolean(bl);
                if (bl) {
                    object = Invoker.bootstrap("includes_geometry?()", Invoker.bootstrap("world", a_map_view), g2);
                }
                if (MagikObjectUtils.should_be_boolean(object)) {
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("draw_geometry_on()", (Object)a_map_view, (Object)gc, (Object)g2, (Object)Invoker.bootstrap("highlight_colour", Invoker.bootstrapPrivate("application", (Object)_self))));
                }
            }
            if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrap("value", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_actions()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "highlight_primary")))) || (g = Invoker.bootstrapPrivate("highlight_primary_context_geometry()", (Object)_self, (Object)Invoker.bootstrap("world", a_map_view))) == null) break block3;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("draw_geometry_on()", (Object)a_map_view, (Object)gc, (Object)g, (Object)Invoker.bootstrap("highlight_colour", Invoker.bootstrapPrivate("application", (Object)_self))));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=428629389)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=53, index=0), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=68, index=1)})
    public static Object explorer_edit_plugin__redraw_bounds(Object _self, Object geoms) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)1);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)geoms));
            return geoms;
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).getReturnResult(return_);
        }
    }

    @Parent(method="explorer_edit_plugin__redraw_bounds")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_3(Object[] __env__, Object geom) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            boolean bl = MagikObjectUtils.is(Invoker.bootstrap("geom_type", geom), ConstantBuilder.symbolBootstrap("symbol", "point"));
            Boolean bl2 = new Boolean(bl);
            if (!bl) {
                bl2 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("geom_type", geom), ConstantBuilder.symbolBootstrap("symbol", "text")));
            }
            if (MagikObjectUtils.should_be_boolean(bl2)) {
                throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))).makeReturn(null);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=884485151)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_edit_plugin__redraw_highlight(Object _self) {
        block1: {
            CallSite map_man = Invoker.bootstrap("get_service_provider()", Invoker.bootstrapPrivate("application", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "map_manager"));
            boolean bl = MagikObjectUtils.isnt(map_man, null);
            Object object = new Boolean(bl);
            if (bl && !MagikObjectUtils.should_be_boolean(object = Invoker.bootstrap("value", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_actions()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "highlight"))))) {
                object = Invoker.bootstrap("value", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("$slot_get_actions()", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "highlight_primary")));
            }
            if (!MagikObjectUtils.should_be_boolean(object)) break block1;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("trigger_transient_redraw()", (Object)map_man));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_edit_plugin_24710.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_edit_plugin_24710.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_edit_plugin_24710.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_edit_plugin_24710;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_edit_plugin_24709
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_edit_plugin_24709() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_edit_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_edit_plugin"), (Object)VectorBuilder.EMPTY_VECTOR, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_view_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_edit_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "application_databus")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_edit_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_edit_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "edit_on_double_click?"), (Object)ConstantBuilder.symbolBootstrap("symbol", "boolean"), (Object)ConstantBuilder.stringBootstrap("string", "Double click?"), (Object)Boolean.TRUE, (Object)Boolean.FALSE, (Object)Boolean.TRUE));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("def_property()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_edit_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "render_priority"), (Object)ConstantBuilder.symbolBootstrap("symbol", "type"), (Object)ConstantBuilder.symbolBootstrap("symbol", "integer"), (Object)ConstantBuilder.symbolBootstrap("symbol", "default_value"), (Object)85, (Object)ConstantBuilder.symbolBootstrap("symbol", "description"), (Object)ConstantBuilder.stringBootstrap("string", "Z priority of rendering")));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_variable()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_edit_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "show_alert_on_compound_spatial_context?"), (Object)Boolean.FALSE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_variable()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_edit_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "cached_explorer_selection"), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object)ConstantBuilder.symbolBootstrap("symbol", "private")));
        MagikObjectUtils.createMethod("explorer_edit_plugin", "init_actions()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "manage_actions()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__manage_actions", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "edit_selection()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__edit_selection", 2, 1);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "select_in_map()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__select_in_map", 2, 1);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "sw_databus_data_available()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "spatial_context_lister()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__spatial_context_lister", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "goto_primary_spatial_context()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__goto_primary_spatial_context", 2, 1);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "goto_selected_spatial_context()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__goto_selected_spatial_context", 3, 3);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "select_spatial_context_and_goto()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__select_spatial_context_and_goto", 2, 1);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "make_goto_request()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__make_goto_request", 3, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "goto_named_spatial_context()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__goto_named_spatial_context", 4, 4);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "goto()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__goto", 2, 1);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "make_highlight_request()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__make_highlight_request", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "highlight()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__highlight", 2, 2);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "highlight_primary_spatial_context()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__highlight_primary_spatial_context", 2, 2);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "selected_spatial_context()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__selected_spatial_context", 4, 4);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "highlight_primary_context_geometry()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__highlight_primary_context_geometry", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "highlight_geometry", explorer_edit_plugin_24710.class, "explorer_edit_plugin__highlight_geometry_", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "map_damage_notify()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__map_damage_notify", 3, 3);
        MagikObjectUtils.createMethod("explorer_edit_plugin", "redraw_bounds()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__redraw_bounds", 2, 2, false, false, true, 0);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_edit_plugin", "redraw_highlight()", explorer_edit_plugin_24710.class, "explorer_edit_plugin__redraw_highlight", 1, 1, false, false, true, 0));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_properties_plugin_24728 {
    @SourceHash(value=-1702920293)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_plugin__init_actions(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), ConstantBuilder.symbolBootstrap("symbol", "start_properties_dialog"), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "properties")), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "properties_tt")), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "properties_sh")), ConstantBuilder.symbolBootstrap("symbol", "engine"), _self, ConstantBuilder.symbolBootstrap("symbol", "enabled?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "properties"), ConstantBuilder.symbolBootstrap("symbol", "ui_resources")), ConstantBuilder.symbolBootstrap("symbol", "action_message"), ConstantBuilder.symbolBootstrap("symbol", "start_properties_dialog()"))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1154294677)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_plugin__manage_actions(Object _self, Object selection) {
        Boolean bl = Boolean.TRUE;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "start_properties_dialog")), (Object)bl));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1321617711)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_plugin__start_properties_dialog(Object _self) {
        CallSite element = Invoker.bootstrap("an_explorer_element()", Invoker.bootstrapPrivate("explorer_selection", (Object)_self));
        CallSite dialog = Invoker.bootstrapPrivate("get_dialog()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "properties"));
        if (dialog == null) {
            dialog = Invoker.bootstrap("new_dialog()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_properties_dialog"), _self, _self);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("cache_dialog()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "properties"), (Object)dialog));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_explorer_element()", (Object)dialog, (Object)element));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate_relative_to()", (Object)dialog, null, (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)250, (Object)150));
        } else {
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_explorer_element()", (Object)dialog, (Object)element));
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("reactivate()", (Object)dialog));
        }
        return dialog;
    }

    @SourceHash(value=1945393585)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_plugin__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block1: {
            block0: {
                if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")) break block0;
                ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
                resultTuple.pop();
                Object selection = resultTuple.pop();
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self, (Object)selection));
                break block1;
            }
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")) break block1;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("refresh_dialog()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=364101801)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_plugin__refresh_dialog(Object _self) {
        block1: {
            CallSite element = null;
            CallSite dialog = Invoker.bootstrapPrivate("get_dialog()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "properties"));
            boolean bl = MagikObjectUtils.isnt(dialog, null);
            Boolean bl2 = new Boolean(bl);
            if (bl) {
                element = Invoker.bootstrap("an_explorer_element()", Invoker.bootstrapPrivate("explorer_selection", (Object)_self));
                bl2 = new Boolean(MagikObjectUtils.isnt(element, null));
            }
            if (!MagikObjectUtils.should_be_boolean(bl2)) break block1;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_explorer_element()", (Object)dialog, (Object)element, (Object)Boolean.TRUE));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-556380862)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_plugin__notify_size(Object _self, Object size) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("databus_make_data_available()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_number_of_records"), (Object)VectorBuilder.bootstrap("vb", _self, size)));
        return ResultTuple.EMPTY_TUPLE;
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_properties_plugin_24728;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_properties_plugin_24727
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_properties_plugin_24727() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_properties_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_properties_plugin"), (Object)VectorBuilder.EMPTY_VECTOR, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_view_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_properties_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_selection"), ConstantBuilder.symbolBootstrap("symbol", "explorer_elements")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_properties_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_producer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_number_of_records")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_properties_plugin", "init_actions()", explorer_properties_plugin_24728.class, "explorer_properties_plugin__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_properties_plugin", "manage_actions()", explorer_properties_plugin_24728.class, "explorer_properties_plugin__manage_actions", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_properties_plugin", "start_properties_dialog()", explorer_properties_plugin_24728.class, "explorer_properties_plugin__start_properties_dialog", 1, 1);
        MagikObjectUtils.createMethod("explorer_properties_plugin", "sw_databus_data_available()", explorer_properties_plugin_24728.class, "explorer_properties_plugin__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_properties_plugin", "refresh_dialog()", explorer_properties_plugin_24728.class, "explorer_properties_plugin__refresh_dialog", 1, 1, false, false, true, 0);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_properties_plugin", "notify_size()", explorer_properties_plugin_24728.class, "explorer_properties_plugin__notify_size", 2, 2));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.Cloner;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_properties_dialog_24769 {
    @SourceHash(value=1577623313)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__new(Object _self, Object owner) {
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("init()", (Object)Cloner.makeClone(Cloner.makeClone(_self)), (Object)owner));
    }

    @SourceHash(value=-508943388)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__init(Object _self, Object owner) {
        Invoker.superNaturalBootstrap("init()", "model", "sw", (Object)_self);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_owner()", (Object)_self, (Object)owner));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_display_trees()", (Object)_self, (Object)Invoker.bootstrap("new_for()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope"), Integer.valueOf(5))));
        return _self;
    }

    @SourceHash(value=-698349160)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__set_explorer_element(Object _self, Object explorer_element, Object object) {
        block2: {
            Object object2;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_element()", (Object)_self, (Object)explorer_element));
            boolean bl = MagikObjectUtils.is(object, Boolean.TRUE);
            Object object3 = new Boolean(bl);
            if (bl) {
                object3 = object2 = new Boolean(MagikObjectUtils.isnt(Invoker.bootstrapPrivate("top_frame", (Object)_self), null));
            }
            if (MagikObjectUtils.should_be_boolean(object3)) {
                object2 = Invoker.bootstrap("active?", Invoker.bootstrapPrivate("top_frame", (Object)_self));
            }
            if (!MagikObjectUtils.should_be_boolean(object2)) break block2;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("refresh()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1290270664)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__on_activation(Object _self) {
        CallSite callSite = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "title"), null, (Object)Invoker.bootstrap("name", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self)));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("title\\l\\l", (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self), (Object)callSite));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("refresh()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1959698063)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__on_deactivation(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_explorer_element()", (Object)_self, null));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("empty()", (Object)Invoker.bootstrapPrivate("$slot_get_display_trees()", (Object)_self)));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "display_trees"), (Object)ConstantBuilder.symbolBootstrap("symbol", "renew")));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-2056368668)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__activate_in(Object _self, Object a_frame) {
        CallSite outer_rc = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), a_frame, null, Integer.valueOf(1), ConstantBuilder.symbolBootstrap("symbol", "pixel"), ConstantBuilder.symbolBootstrap("symbol", "style"), ConstantBuilder.symbolBootstrap("symbol", "top_level"));
        Object object = 450;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("min_width\\l\\l", (Object)outer_rc, (Object)object));
        object = 400;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("min_height\\l\\l", (Object)outer_rc, (Object)object));
        object = VectorBuilder.bootstrap("vb", Integer.valueOf(100), Integer.valueOf(0));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("row_resize_values\\l\\l", (Object)outer_rc, (Object)object));
        object = ConstantBuilder.symbolBootstrap("symbol", "primary_modal");
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("modality\\l\\l", (Object)a_frame, (Object)object));
        object = Boolean.FALSE;
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("minimizable?\\l\\l", (Object)a_frame, (Object)object));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_tree_item()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "tree_item"), outer_rc, ConstantBuilder.symbolBootstrap("symbol", "model"), _self, ConstantBuilder.symbolBootstrap("symbol", "module_name"), Invoker.bootstrapPrivate("module_name", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "aspect"), ConstantBuilder.symbolBootstrap("symbol", "display_trees"), ConstantBuilder.symbolBootstrap("symbol", "data_selector"), ConstantBuilder.symbolBootstrap("symbol", "display_trees"), ConstantBuilder.symbolBootstrap("symbol", "editor_required_notifier"), ConstantBuilder.symbolBootstrap("symbol", "editor_required()"), ConstantBuilder.symbolBootstrap("symbol", "edit_on_click?"), Boolean.FALSE, ConstantBuilder.symbolBootstrap("symbol", "distribute_spare_width"), ConstantBuilder.symbolBootstrap("symbol", "always"), ConstantBuilder.symbolBootstrap("symbol", "column_selectabilities"), VectorBuilder.bootstrap("vb", Boolean.FALSE, Boolean.FALSE), ConstantBuilder.symbolBootstrap("symbol", "column_heading_ids"), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "property"), ConstantBuilder.symbolBootstrap("symbol", "value")), ConstantBuilder.symbolBootstrap("symbol", "column_headings_styled_strings"), VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "bold"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "property"))), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "bold"), Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "value")))), ConstantBuilder.symbolBootstrap("symbol", "column_widths"), VectorBuilder.bootstrap("vb", Integer.valueOf(225), Integer.valueOf(225)), ConstantBuilder.symbolBootstrap("symbol", "identifier"), ConstantBuilder.symbolBootstrap("symbol", "properties_lister"), ConstantBuilder.symbolBootstrap("symbol", "row_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "fill"))));
        CallSite button_rc = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rowcol"), outer_rc, Integer.valueOf(1), null, ConstantBuilder.symbolBootstrap("symbol", "pixel"), ConstantBuilder.symbolBootstrap("symbol", "col_alignment"), ConstantBuilder.symbolBootstrap("symbol", "centre"));
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_close_item()", (Object)_self, (Object)Invoker.bootstrap("new_safe()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "button_item"), button_rc, Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "close")), _self, ConstantBuilder.symbolBootstrap("symbol", "close()"), ConstantBuilder.symbolBootstrap("symbol", "identifier"), ConstantBuilder.symbolBootstrap("symbol", "close_cancel_button"), ConstantBuilder.symbolBootstrap("symbol", "min_width"), Integer.valueOf(75))));
        ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("register_action_buttons()", (Object)_self, (Object)Invoker.bootstrapPrivate("$slot_get_close_item()", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=418133326)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__refresh(Object _self) {
        if (Invoker.bootstrapPrivate("$slot_get_task()", (Object)_self) != null) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("cancel_and_wait()", (Object)Invoker.bootstrapPrivate("$slot_get_task()", (Object)_self)));
        }
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("refresh_without_size()", (Object)_self));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_task()", (Object)_self, (Object)Invoker.bootstrap("do_work_at_priority()", Invoker.bootstrap("application", Invoker.bootstrap("owner", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self))), _self, ConstantBuilder.symbolBootstrap("symbol", "refresh_with_size()"), Invoker.bootstrap("high_background_priority", Thread.currentThread()))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1853406440)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__refresh_without_size(Object _self) {
        CallSite callSite = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "cancel"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("label\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_close_item()", (Object)_self), (Object)callSite));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_display_trees()", (Object)_self, (Object)Boolean.FALSE));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "display_trees"), (Object)ConstantBuilder.symbolBootstrap("symbol", "refresh")));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1452117306)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__refresh_with_size(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("setup_display_trees()", (Object)_self, (Object)Boolean.TRUE));
        CallSite callSite = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "close"));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("label\\l\\l", (Object)Invoker.bootstrapPrivate("$slot_get_close_item()", (Object)_self), (Object)callSite));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "display_trees"), (Object)ConstantBuilder.symbolBootstrap("symbol", "refresh")));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_task()", (Object)_self, null));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1830753057)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__close(Object _self) {
        if (Invoker.bootstrapPrivate("$slot_get_task()", (Object)_self) != null) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("cancel_and_wait()", (Object)Invoker.bootstrapPrivate("$slot_get_task()", (Object)_self)));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_task()", (Object)_self, null));
        }
        Invoker.superNaturalBootstrap("close()", "model", "sw", (Object)_self);
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-140897455)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__editor_required(Object _self, Object p_tree, Object p_index, Object p_value_id, Object p_agent) {
        CallSite l_editor;
        block0: {
            l_editor = null;
            if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrap("action_allowed?()", Invoker.bootstrap("owner", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self)), ConstantBuilder.symbolBootstrap("symbol", "rename"), Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self)))) break block0;
            l_editor = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "in_place_value_editor"), p_agent);
        }
        return l_editor;
    }

    @SourceHash(value=90790178)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__get_name(Object _self, Object index, Object display_tree) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("name", (Object)Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self)));
    }

    @SourceHash(value=258994255)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__set_name(Object _self, Object new_value, Object index, Object display_tree) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("do_action()", (Object)Invoker.bootstrap("owner", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self)), (Object)ConstantBuilder.symbolBootstrap("symbol", "rename"), (Object)Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)_self), (Object)new_value));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-2082815130)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__styled_string_for(Object _self, Object explorer_element, Object ... parts) {
        return (ResultTuple)((Object)Invoker.tupleBootstrap("new_appending()", (Object)Invoker.bootstrap("image_styled_string", explorer_element), (Object[])((Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)parts))));
    }

    @SourceHash(value=1826147590)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=174, end=198, index=0), @EnvVar(name="size", type=Object.class, start=24, end=328, index=1), @EnvVar(name="dt", type=Object.class, start=32, end=328, index=2), @EnvVar(name="_self", type=Object.class, start=13, end=329, index=3)})
    public static Object explorer_properties_dialog__size_and_display_tree_for(Object _self, Object parent_tree, Object an_element) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        CallSite size_string = null;
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)0, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "display_tree"), an_element, null, parent_tree), (Object[])__env__, (int)2);
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("lazy_children?", an_element))) {
            CallSite callSite = Invoker.bootstrap("\\b]", Invoker.bootstrap("value", an_element), ConstantBuilder.symbolBootstrap("symbol", "size"));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)1);
            size_string = callSite == null ? Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)ConstantBuilder.symbolBootstrap("symbol", "unknown_size")) : Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)ConstantBuilder.symbolBootstrap("symbol", "size_unevaluated_children"), null, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
        } else if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("children?", an_element))) {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)an_element));
        } else {
            CallSite callSite = Invoker.bootstrap("\\b]", Invoker.bootstrap("value", an_element), ConstantBuilder.symbolBootstrap("symbol", "size"));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)1);
            if (callSite == null) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("size", Invoker.bootstrap("rwo_set", an_element)), (Object[])__env__, (int)1);
            }
        }
        CallSite callSite = Invoker.bootstrapPrivate("styled_string_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)an_element, (Object)Invoker.bootstrap("name", an_element), (Object)ConstantBuilder.symbolBootstrap("symbol", "tab"), (Object)Invoker.bootstrap("default()", size_string, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("styled_string\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)callSite));
        return (ResultTuple)((Object)Invoker.tupleBootstrap("default()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)0));
    }

    @Parent(method="explorer_properties_dialog__size_and_display_tree_for")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="size", type=Object[].class, start=53, end=62, index=1)})
    public static Object __loopbody_(Object[] __env__, Object child) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("+", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), Invoker.bootstrapPrivate("size_and_display_tree_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)child)), (Object[])__env__, (int)1);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-2023147532)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=359, end=716, index=0), @EnvVar(name="sub_elements?", type=Object.class, start=367, end=716, index=1), @EnvVar(name="size", type=Object[].class, start=388, end=719, index=2), @EnvVar(name="dt", type=Object[].class, start=90, end=830, index=3), @EnvVar(name="_self", type=Object.class, start=13, end=834, index=4)})
    public static Object explorer_properties_dialog__setup_display_trees(Object _self, Object object) {
        block6: {
            Object[] __env__ = new Object[5];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)4);
            CallSite rwo_set = null;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("empty()", (Object)Invoker.bootstrapPrivate("$slot_get_display_trees()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))));
            if (Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)) == null) break block6;
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("add()", Invoker.bootstrapPrivate("$slot_get_display_trees()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "display_tree"), ConstantBuilder.symbolBootstrap("symbol", "name"))), (Object[])__env__, (int)3);
            CallSite callSite = VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ConstantBuilder.symbolBootstrap("symbol", "name")), ConstantBuilder.symbolBootstrap("symbol", "tab"), ConstantBuilder.symbolBootstrap("symbol", "value"), ConstantBuilder.symbolBootstrap("symbol", "name"));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("styled_string\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)callSite));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("set_value_method()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ConstantBuilder.symbolBootstrap("symbol", "get_name()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "set_name()")));
            CallSite description = Invoker.bootstrap("description", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
            if (description != null) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("add()", Invoker.bootstrapPrivate("$slot_get_display_trees()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "display_tree"), ConstantBuilder.symbolBootstrap("symbol", "description"))), (Object[])__env__, (int)3);
                CallSite callSite2 = VectorBuilder.bootstrap("vb", Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ConstantBuilder.symbolBootstrap("symbol", "description")), ConstantBuilder.symbolBootstrap("symbol", "tab"), description);
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("styled_string\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)callSite2));
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("add()", Invoker.bootstrapPrivate("$slot_get_display_trees()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "display_tree"), Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)))), (Object[])__env__, (int)3);
            if (MagikObjectUtils.should_be_boolean(object)) {
                Object object2;
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)1);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)0, (Object[])__env__, (int)2);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_children()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))));
                Object object3 = Invoker.bootstrap("not", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
                if (MagikObjectUtils.should_be_boolean(object3)) {
                    rwo_set = Invoker.bootstrap("rwo_set", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
                    object3 = object2 = new Boolean(MagikObjectUtils.isnt(rwo_set, null));
                }
                if (MagikObjectUtils.should_be_boolean(object3)) {
                    CallSite callSite3 = Invoker.bootstrap("\\b]", Invoker.bootstrap("value", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))), ConstantBuilder.symbolBootstrap("symbol", "size"));
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite3, (Object[])__env__, (int)2);
                    object2 = new Boolean(MagikObjectUtils.is(callSite3, null));
                }
                if (MagikObjectUtils.should_be_boolean(object2)) {
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("size", rwo_set), (Object[])__env__, (int)2);
                    CallSite callSite4 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
                    ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrap("value", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))), (Object)callSite4, (Object)ConstantBuilder.symbolBootstrap("symbol", "size")));
                    ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("notify_size()", (Object)Invoker.bootstrapPrivate("$slot_get_owner()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
                }
                CallSite callSite5 = Invoker.bootstrapPrivate("styled_string_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ConstantBuilder.symbolBootstrap("symbol", "size"), null, (Object)Invoker.bootstrap("name", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)))), (Object)ConstantBuilder.symbolBootstrap("symbol", "tab"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2));
                ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("styled_string\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)callSite5));
            } else {
                CallSite callSite6 = Invoker.bootstrapPrivate("styled_string_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ConstantBuilder.symbolBootstrap("symbol", "size"), null, (Object)Invoker.bootstrap("name", Invoker.bootstrapPrivate("$slot_get_explorer_element()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)))), (Object)ConstantBuilder.symbolBootstrap("symbol", "tab"), (Object)ConstantBuilder.symbolBootstrap("symbol", "italic"), (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)ConstantBuilder.symbolBootstrap("symbol", "calculating_size")));
                ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrap("styled_string\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)callSite6));
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_properties_dialog__setup_display_trees")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="size", type=Object[].class, start=63, end=72, index=2), @EnvVar(name="sub_elements?", type=Object[].class, start=24, end=72, index=1)})
    public static Object __loopbody_2(Object[] __env__, Object sub_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.TRUE, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)BinaryDispatcher.bootstrap("+", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), Invoker.bootstrapPrivate("size_and_display_tree_for()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)sub_element)), (Object[])__env__, (int)2);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-2119217992)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__wm_close(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("close()", (Object)_self));
        return Boolean.TRUE;
    }

    @SourceHash(value=2145090960)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_properties_dialog__help_wanted(Object _self, Object id) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("help_wanted()", (Object)Invoker.bootstrapPrivate("$slot_get_owner()", (Object)_self), (Object)id));
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_properties_dialog_24769.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_properties_dialog_24769.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_properties_dialog_24769;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_properties_dialog_24768
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_properties_dialog_24768() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_properties_dialog.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_properties_dialog"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "owner"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "tree_item"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_element"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "display_trees"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "task"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "close_item"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "model")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_slot_access()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_properties_dialog"), (Object)ConstantBuilder.symbolBootstrap("symbol", "display_trees"), (Object)ConstantBuilder.symbolBootstrap("symbol", "read"), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_properties_dialog", "new()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__new", 2, 2);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "init()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__init", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "set_explorer_element()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__set_explorer_element", 3, 2);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "on_activation()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__on_activation", 1, 1);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "on_deactivation()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__on_deactivation", 1, 1);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "activate_in()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__activate_in", 2, 2);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "refresh()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__refresh", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "refresh_without_size()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__refresh_without_size", 1, 1, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "refresh_with_size()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__refresh_with_size", 1, 1);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "close()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__close", 1, 1);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "editor_required()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__editor_required", 5, 5);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "get_name()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__get_name", 3, 3);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "set_name()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__set_name", 4, 4);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "styled_string_for()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__styled_string_for", 3, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "size_and_display_tree_for()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__size_and_display_tree_for", 3, 3, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "setup_display_trees()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__setup_display_trees", 2, 2);
        MagikObjectUtils.createMethod("explorer_properties_dialog", "wm_close()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__wm_close", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_properties_dialog", "help_wanted()", explorer_properties_dialog_24769.class, "explorer_properties_dialog__help_wanted", 2, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_export_plugin_24826 {
    @SourceHash(value=-243114472)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__init(Object _self, Object name, Object framework) {
        Invoker.superNaturalBootstrap("init()", "plugin", "sw", (Object)_self, (Object)name, (Object)framework);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_engine()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "collection_export_engine"), _self)));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_dependent()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self), (Object)_self));
        if (MagikObjectUtils.is(Invoker.bootstrap("size", Invoker.bootstrapPrivate("cached_instances", (Object)_self)), 0)) {
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("global_enabled?\\l\\l", (Object)_self, (Object)bl));
        }
        Object object = _self;
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("cached_instances", (Object)_self), (Object)object, (Object)_self));
        return _self;
    }

    @SourceHash(value=1366842633)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__add_export_type(Object _self, Object ... keys_and_args) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_last()", (Object)Invoker.bootstrapPrivate("exports", (Object)_self), (Object)Invoker.bootstrap("new_from_gathered()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list"), keys_and_args)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1395437296)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=22, end=73, index=0), @EnvVar(name="_self", type=Object.class, start=14, end=74, index=1)})
    public static Object explorer_export_plugin__init_actions(Object _self) {
        Object[] __env__ = new Object[6];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        Invoker.superNaturalBootstrap("init_actions()", "plugin", "sw", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("exports", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_export_plugin__init_actions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="module_name", type=Object[].class, start=85, end=307, index=3), @EnvVar(name="message", type=Object[].class, start=50, end=307, index=2), @EnvVar(name="id", type=Object[].class, start=32, end=307, index=4), @EnvVar(name="image_name", type=Object[].class, start=115, end=307, index=5)})
    public static Object __loopbody_(Object[] __env__, Object export_params) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("\\b]", export_params, ConstantBuilder.symbolBootstrap("symbol", "name")), (Object[])__env__, (int)4);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("\\b]", export_params, ConstantBuilder.symbolBootstrap("symbol", "method")), (Object[])__env__, (int)2);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", export_params, ConstantBuilder.symbolBootstrap("symbol", "module_name")), Invoker.bootstrapPrivate("module_name", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))), (Object[])__env__, (int)3);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", export_params, ConstantBuilder.symbolBootstrap("symbol", "image_name")), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), (Object[])__env__, (int)5);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("add_action()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sw_action"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), ConstantBuilder.symbolBootstrap("symbol", "caption"), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)), ConstantBuilder.symbolBootstrap("symbol", "tooltip"), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), ConstantBuilder.stringBootstrap("string", "_tt"))), ConstantBuilder.symbolBootstrap("symbol", "short_help_text"), Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), ConstantBuilder.stringBootstrap("string", "_sh"))), ConstantBuilder.symbolBootstrap("symbol", "image"), VectorBuilder.bootstrap("vb", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), ConstantBuilder.symbolBootstrap("symbol", "engine"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "action_message"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=1300535400)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=38, end=172, index=1), @EnvVar(name="available?", type=Object.class, start=30, end=172, index=0), @EnvVar(name="export_id", type=Object.class, start=22, end=173, index=5), @EnvVar(name="_self", type=Object.class, start=14, end=173, index=3)})
    public static Object explorer_export_plugin__export_available?(Object _self, Object export_id) {
        Object[] __env__ = new Object[7];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)3);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)export_id, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)0);
        if (MagikObjectUtils.isnt(Invoker.bootstrap("incarnation", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system")), Invoker.bootstrapPrivate("available_exports_incarnation", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)))) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("empty()", (Object)Invoker.bootstrapPrivate("available_exports", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))));
            CallSite callSite = Invoker.bootstrap("incarnation", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system"));
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("available_exports_incarnation\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)callSite));
        }
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_1(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("exports", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))));
        return EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
    }

    @Parent(method="explorer_export_plugin__export_available?")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="check", type=Object[].class, start=215, end=274, index=2), @EnvVar(name="ws", type=Object[].class, start=121, end=318, index=6), @EnvVar(name="id", type=Object[].class, start=33, end=327, index=4), @EnvVar(name="available?", type=Object[].class, start=89, end=327, index=0)})
    public static Object __loopbody_2(Object[] __env__, Object export_params) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            CallSite callSite = Invoker.bootstrap("\\b]", export_params, ConstantBuilder.symbolBootstrap("symbol", "name"));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)4);
            if (MagikObjectUtils.isnt(callSite, EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))) {
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            CallSite callSite2 = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("available_exports", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4));
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite2, (Object[])__env__, (int)0);
            if (callSite2 == null) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("\\b]", export_params, ConstantBuilder.symbolBootstrap("symbol", "window_system")), (Object[])__env__, (int)6);
                boolean bl = MagikObjectUtils.is(Invoker.bootstrap("default()", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), ConstantBuilder.symbolBootstrap("symbol", "all")), ConstantBuilder.symbolBootstrap("symbol", "all"));
                Boolean bl2 = new Boolean(bl);
                if (!bl) {
                    bl2 = new Boolean(MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)6), Invoker.bootstrap("window_system", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system"))));
                }
                if (MagikObjectUtils.should_be_boolean(bl2)) {
                    CallSite callSite3 = Invoker.bootstrap("\\b]", export_params, ConstantBuilder.symbolBootstrap("symbol", "check"));
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite3, (Object[])__env__, (int)2);
                    boolean bl3 = MagikObjectUtils.is(callSite3, null);
                    Object object = new Boolean(bl3);
                    if (!bl3) {
                        object = Invoker.bootstrapPrivate("perform()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2));
                    }
                    if (MagikObjectUtils.should_be_boolean(object)) {
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.TRUE, (Object[])__env__, (int)0);
                    }
                }
                CallSite callSite4 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("available_exports", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3)), (Object)callSite4, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4)));
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=2134625342)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=21, end=74, index=0), @EnvVar(name="enabled?", type=Object.class, start=13, end=75, index=1)})
    public static Object explorer_export_plugin__enable_actions(Object _self, Object object) {
        Object[] __env__ = new Object[2];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)object, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("global_enabled?\\l\\l", (Object)_self, (Object)callSite));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("fast_elements()", (MethodHandle)cfr_ldc_2(), (Object[])__env__, (Object)Invoker.bootstrapPrivate("cached_instances", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_export_plugin__enable_actions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_3(Object[] __env__, Object export_plugin) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("int!enable_actions()", (Object)export_plugin, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=861564962)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=62, index=0), @EnvVar(name="_self", type=Object.class, start=13, end=63, index=1), @EnvVar(name="enabled?", type=Object.class, start=21, end=63, index=2)})
    public static Object explorer_export_plugin__int!enable_actions(Object _self, Object object) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)1);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)object, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("actions()", (MethodHandle)cfr_ldc_3(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_export_plugin__int!enable_actions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="set?", type=Object[].class, start=65, end=68, index=3), @EnvVar(name="set?", type=Object[].class, start=78, end=108, index=3)})
    public static Object __loopbody_4(Object[] __env__, Object action) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            if (MagikObjectUtils.should_be_boolean(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2))) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("available_exports", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)), Invoker.bootstrap("name", action)), Boolean.TRUE), (Object[])__env__, (int)3);
            } else {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)3);
            }
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)action, (Object)callSite));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1052076312)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=30, end=418, index=0), @EnvVar(name="use_size?", type=Object.class, start=38, end=418, index=1), @EnvVar(name="_self", type=Object.class, start=14, end=419, index=5), @EnvVar(name="exporting_id", type=Object.class, start=22, end=419, index=4)})
    public static Object explorer_export_plugin__setup_collection_export_engine(Object _self, Object exporting_id) {
        Object object;
        Object[] __env__ = new Object[6];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)5);
        EnvAccessor.bootstrapReseter("resetEnv", (Object)exporting_id, (Object[])__env__, (int)4);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        CallSite description = Invoker.bootstrapPrivate("description_for_selection()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4));
        ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
        resultTuple.pop();
        Object selection = resultTuple.pop();
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.TRUE, (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("reset()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5))));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)0));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("rwo_sets()", (MethodHandle)cfr_ldc_4(), (Object[])__env__, (Object)selection));
        CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1);
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            callSite = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), Integer.valueOf(0));
        }
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            object = TupleBuilder.bootstrap("tb", Boolean.TRUE, Invoker.bootstrapPrivate("install_progress_indicator()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)description, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "indicator"), (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "bar_progress_indicator"), (Object)ConstantBuilder.symbolBootstrap("symbol", "max_count"), (Object)Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object)ConstantBuilder.symbolBootstrap("symbol", "interrupt_message"), (Object)ConstantBuilder.symbolBootstrap("symbol", "interrupt()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "progress_aspect"), (Object)ConstantBuilder.symbolBootstrap("symbol", "progress"), (Object)ConstantBuilder.symbolBootstrap("symbol", "stop_aspect"), (Object)ConstantBuilder.symbolBootstrap("symbol", "end_export")));
        } else {
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)0));
            object = MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1))) ? TupleBuilder.bootstrap("tb", Boolean.FALSE, Invoker.bootstrapPrivate("install_progress_indicator()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)description, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)ConstantBuilder.symbolBootstrap("symbol", "interrupt_message"), (Object)ConstantBuilder.symbolBootstrap("symbol", "interrupt()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "progress_aspect"), (Object)ConstantBuilder.symbolBootstrap("symbol", "progress"), (Object)ConstantBuilder.symbolBootstrap("symbol", "stop_aspect"), (Object)ConstantBuilder.symbolBootstrap("symbol", "end_export"))) : Boolean.TRUE;
        }
        return object;
    }

    @Parent(method="explorer_export_plugin__setup_collection_export_engine")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="rex", type=Object[].class, start=91, end=121, index=3), @EnvVar(name="name", type=Object[].class, start=213, end=493, index=2), @EnvVar(name="use_size?", type=Object[].class, start=205, end=493, index=1)})
    public static Object __loopbody_5(Object[] __env__, Object rwo_set, Object collection, Object explorer_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            Object object;
            boolean bl = MagikObjectUtils.is(collection, null);
            Object object2 = new Boolean(bl);
            if (!bl && MagikObjectUtils.should_be_boolean(object2 = Invoker.bootstrap("size_is_fast?", rwo_set))) {
                object2 = object = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("size", rwo_set), 0));
            }
            if (!MagikObjectUtils.should_be_boolean(object2)) {
                CallSite callSite = Invoker.bootstrap("record_exemplar", collection);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)3);
                object = Invoker.bootstrap("responds_to?()", callSite, ConstantBuilder.symbolBootstrap("symbol", "dataless?"));
                if (MagikObjectUtils.should_be_boolean(object)) {
                    object = Invoker.bootstrap("dataless?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3));
                }
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("size_is_fast?", rwo_set))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5), (Object)BinaryDispatcher.bootstrap("+", Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), Invoker.bootstrap("size", rwo_set))));
            } else {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)1);
            }
            EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)2);
            if (MagikObjectUtils.is(Invoker.bootstrapPrivate("query_results_name_as_sheet_name?", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), Boolean.TRUE)) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("name", Invoker.bootstrap("parent", explorer_element)), (Object[])__env__, (int)2);
            }
            boolean bl2 = MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), null);
            Object object3 = new Boolean(bl2);
            if (!bl2) {
                object3 = Invoker.bootstrap("empty?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2));
            }
            if (MagikObjectUtils.should_be_boolean(object3)) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("external_name", collection), (Object[])__env__, (int)2);
            }
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_collection()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object)rwo_set, (Object)ConstantBuilder.symbolBootstrap("symbol", "external_name"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "field_list"), (Object)Invoker.bootstrap("visible_field_names", explorer_element), (Object)ConstantBuilder.symbolBootstrap("symbol", "exclude_geometry_fields?"), (Object)Invoker.bootstrapPrivate("exclude_geometry_fields?", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object)ConstantBuilder.symbolBootstrap("symbol", "exclude_join_fields?"), (Object)Invoker.bootstrapPrivate("exclude_join_fields?", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object)ConstantBuilder.symbolBootstrap("symbol", "max_length_multiple_result_joins"), (Object)Invoker.bootstrapPrivate("max_length_multiple_result_joins", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object)ConstantBuilder.symbolBootstrap("symbol", "unit_fields_as_strings?"), (Object)Invoker.bootstrapPrivate("export_units_as_strings?", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_point_geoms_as_coords?"), (Object)new Boolean(MagikObjectUtils.is(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4), ConstantBuilder.symbolBootstrap("symbol", "exporting_to_excel"))), (Object)ConstantBuilder.symbolBootstrap("symbol", "output_coordinate_system"), (Object)Invoker.bootstrapPrivate("get_output_coordinate_system()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)5)), (Object)ConstantBuilder.symbolBootstrap("symbol", "ace"), (Object)Invoker.bootstrap("ace", explorer_element)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-1693420503)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=33, end=490, index=1), @EnvVar(name="use_size?", type=Object.class, start=24, end=490, index=0), @EnvVar(name="_self", type=Object.class, start=15, end=491, index=2)})
    public static Object explorer_export_plugin__int!export_in_background(Object _self, Object method_name, Object exporting_id, Object ... args) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        CallSite description = Invoker.bootstrapPrivate("description_for_selection()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)exporting_id);
        ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
        resultTuple.pop();
        Object selection = resultTuple.pop();
        if (Invoker.bootstrapPrivate("$slot_get_export_thread()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)) != null) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("interrupt()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        }
        EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.TRUE, (Object[])__env__, (int)0);
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)0));
        EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("rwo_sets()", (MethodHandle)cfr_ldc_5(), (Object[])__env__, (Object)selection));
        CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            callSite = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), Integer.valueOf(0));
        }
        if (MagikObjectUtils.should_be_boolean(callSite)) {
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("install_progress_indicator()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)description, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "indicator"), (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "bar_progress_indicator"), (Object)ConstantBuilder.symbolBootstrap("symbol", "max_count"), (Object)Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), (Object)ConstantBuilder.symbolBootstrap("symbol", "interrupt_message"), (Object)ConstantBuilder.symbolBootstrap("symbol", "interrupt()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "progress_aspect"), (Object)ConstantBuilder.symbolBootstrap("symbol", "progress"), (Object)ConstantBuilder.symbolBootstrap("symbol", "stop_aspect"), (Object)ConstantBuilder.symbolBootstrap("symbol", "end_export")));
        } else {
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)0));
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("install_progress_indicator()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)description, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "interrupt_message"), (Object)ConstantBuilder.symbolBootstrap("symbol", "interrupt()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "progress_aspect"), (Object)ConstantBuilder.symbolBootstrap("symbol", "progress"), (Object)ConstantBuilder.symbolBootstrap("symbol", "stop_aspect"), (Object)ConstantBuilder.symbolBootstrap("symbol", "end_export")));
        }
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_export_thread()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)Invoker.bootstrap("fork_at()", ConstantBuilder.procWithEmptyEnvBootstrap("proc", (Class<?>)explorer_export_plugin_24826.class, "proc___", "", 4, 4, 0, 0), Invoker.bootstrap("high_background_priority", Thread.currentThread()), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), method_name, args)));
        CallSite callSite2 = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
        if (MagikObjectUtils.should_be_boolean(callSite2)) {
            callSite2 = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), Integer.valueOf(0));
        }
        return callSite2;
    }

    @Parent(method="explorer_export_plugin__int!export_in_background")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="rex", type=Object[].class, start=29, end=153, index=3)})
    public static Object __loopbody_6(Object[] __env__, Object rwo_set, Object collection, Object explorer_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            CallSite callSite = Invoker.bootstrap("record_exemplar", collection);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite, (Object[])__env__, (int)3);
            CallSite callSite2 = Invoker.bootstrap("responds_to?()", callSite, ConstantBuilder.symbolBootstrap("symbol", "dataless?"));
            if (MagikObjectUtils.should_be_boolean(callSite2)) {
                callSite2 = Invoker.bootstrap("dataless?", EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3));
            }
            if (MagikObjectUtils.should_be_boolean(callSite2)) {
                ResultTuple resultTuple2 = ResultTuple.EMPTY_TUPLE;
                DynamicScope.interjectFrame(__iterator_frame__);
                return resultTuple2;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("size_is_fast?", rwo_set))) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)BinaryDispatcher.bootstrap("+", Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), Invoker.bootstrap("size", rwo_set))));
            } else {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)0);
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_export_plugin__int!export_in_background")
    @SourceHash(value=-118936491)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    public static Object proc___(Object _self, Object model, Object method, Object args) {
        try {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("perform()", (Object)model, (Object)method, (Object[])((Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)args))));
        }
        finally {
            InterruptInfrastructure.disableInterrupts();
            try {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("changed()", (Object)model, (Object)ConstantBuilder.symbolBootstrap("symbol", "end_export")));
            }
            finally {
                InterruptInfrastructure.enableInterrupts();
            }
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=2003384767)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__interrupt(Object _self) {
        block0: {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("interrupt()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self)));
            if (Invoker.bootstrapPrivate("$slot_get_export_thread()", (Object)_self) == null) break block0;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("kill_and_wait()", (Object)Invoker.bootstrapPrivate("$slot_get_export_thread()", (Object)_self)));
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("$slot_set_export_thread()", (Object)_self, null));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-291446561)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__note_change(Object _self, Object who, Object what, Object ... args) {
        block1: {
            block4: {
                block3: {
                    block2: {
                        block0: {
                            Invoker.bootstrap("\\b]", args, Integer.valueOf(1));
                            if (what != ConstantBuilder.symbolBootstrap("symbol", "start_export")) break block0;
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("enable_actions()", (Object)_self, (Object)Boolean.FALSE));
                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "start_export")));
                            break block1;
                        }
                        if (what == ConstantBuilder.symbolBootstrap("symbol", "start_collection")) break block1;
                        if (what != ConstantBuilder.symbolBootstrap("symbol", "progress")) break block2;
                        ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)args)));
                        resultTuple.pop();
                        Object total_exported = resultTuple.pop();
                        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "progress"), (Object)total_exported));
                        break block1;
                    }
                    if (what != ConstantBuilder.symbolBootstrap("symbol", "interrupting")) break block3;
                    Boolean bl = Boolean.TRUE;
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl));
                    break block1;
                }
                if (what != ConstantBuilder.symbolBootstrap("symbol", "end_export")) break block4;
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("changed()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "end_export")));
                ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("enable_actions()", (Object)_self, (Object)Boolean.TRUE));
                Boolean bl = Boolean.FALSE;
                ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("busy?\\l\\l", (Object)_self, (Object)bl));
                break block1;
            }
            if (what != ConstantBuilder.symbolBootstrap("symbol", "error")) break block1;
            ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("show_alert()", (Object)Invoker.bootstrapPrivate("framework", (Object)_self), (Object)Invoker.bootstrap("an_element()", args)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=635907520)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__terminate(Object _self) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_key()", (Object)Invoker.bootstrapPrivate("cached_instances", (Object)_self), (Object)_self));
        if (MagikObjectUtils.is(Invoker.bootstrap("size", Invoker.bootstrapPrivate("cached_instances", (Object)_self)), 0)) {
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("global_enabled?\\l\\l", (Object)_self, (Object)bl));
        }
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("interrupt()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self)));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("remove_dependent()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self), (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=332947347)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="name", type=Object.class, start=21, end=167, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=29, end=167, index=1), @EnvVar(name="__leave_catcher__", type=Object[].class, start=102, end=168, index=3), @EnvVar(name="_self", type=Object.class, start=13, end=168, index=2)})
    public static Object explorer_export_plugin__description_for_selection(Object _self, Object message) {
        Object[] __env__ = new Object[4];
        EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
        ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
        resultTuple.pop();
        Object selection = resultTuple.pop();
        EnvAccessor.bootstrapStorer("storeEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)3);
        try {
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("explorer_elements()", (MethodHandle)cfr_ldc_6(), (Object[])__env__, (Object)selection));
        }
        catch (LeaveCatcher.Leave leave) {
            ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).getLeaveResult(leave);
        }
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)message, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
    }

    @Parent(method="explorer_export_plugin__description_for_selection")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="name", type=Object[].class, start=37, end=40, index=0), @EnvVar(name="name", type=Object[].class, start=71, end=98, index=0)})
    public static Object __loopbody_7(Object[] __env__, Object element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            if (EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0) != null) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrapPrivate("message()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2), (Object)ConstantBuilder.symbolBootstrap("symbol", "multiple_names"), (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)), (Object[])__env__, (int)0);
                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).makeLeave(ResultTuple.EMPTY_TUPLE);
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("name", element), (Object[])__env__, (int)0);
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=-437094777)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="enabled?", type=Object.class, start=39, end=148, index=0), @EnvVar(name="__dynamic_frame__", type=Object.class, start=47, end=148, index=1), @EnvVar(name="_self", type=Object.class, start=13, end=155, index=2)})
    public static Object explorer_export_plugin__manage_actions(Object _self, Object selection) {
        block2: {
            Object[] __env__ = new Object[3];
            EnvAccessor.bootstrapReseter("resetEnv", (Object)_self, (Object[])__env__, (int)2);
            if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("global_enabled?", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)))) break block2;
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.TRUE, (Object[])__env__, (int)0);
            CallSite rwo_set = Invoker.bootstrap("rwo_set", selection);
            Object object = Invoker.bootstrap("size_is_fast?", rwo_set);
            if (MagikObjectUtils.should_be_boolean(object)) {
                object = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("size", rwo_set), 0));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)Boolean.FALSE, (Object[])__env__, (int)0);
            }
            EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("actions()", (MethodHandle)cfr_ldc_7(), (Object[])__env__, (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_export_plugin__manage_actions")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_8(Object[] __env__, Object action) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            if (MagikObjectUtils.should_be_boolean(callSite)) {
                callSite = Invoker.bootstrap("default()", Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("available_exports", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)), Invoker.bootstrap("name", action)), Boolean.TRUE);
            }
            CallSite callSite2 = callSite;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)action, (Object)callSite2));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @SourceHash(value=478450918)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__sw_databus_data_available(Object _self, Object data_type_name, Object data) {
        block0: {
            if (data_type_name != ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")) break block0;
            ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)data)));
            resultTuple.pop();
            Object selection = resultTuple.pop();
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("manage_actions()", (Object)_self, (Object)selection));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-871053699)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="me", type=Object.class, start=13, end=109, index=0)})
    public static Object explorer_export_plugin__progress_counter(Object _self, Object object, Object step) {
        Object[] __env__ = new Object[1];
        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
        EnvAccessor.bootstrapStorer("storeEnv", (Object)_self, (Object[])__env__, (int)0);
        Object[] objectArray = new Object[]{__env__[0]};
        CallSite reporter_proc = ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_export_plugin_24826.class, "proc___2", "", 3, 3, 0, 0, (Object[])objectArray);
        CallSite pc = MagikObjectUtils.should_be_boolean(object) ? Invoker.bootstrap("new_on_count()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "progress_counter"), Integer.valueOf(1), Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)_self)) : Invoker.bootstrap("new_on_count()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "progress_counter"), step);
        CallSite callSite = reporter_proc;
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("reporter\\l\\l", (Object)pc, (Object)callSite));
        return pc;
    }

    @Parent(method="explorer_export_plugin__progress_counter")
    @SourceHash(value=-552259633)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="me", type=Object.class, start=0, end=31, index=0)})
    public static Object proc___2(Object[] __env__, Object _self, Object counter) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("changed()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (Object)ConstantBuilder.symbolBootstrap("symbol", "progress"), (Object)Invoker.bootstrap("count", counter)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-1858334847)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__abandon_export(Object _self, Object export_type) {
        if (export_type == ConstantBuilder.symbolBootstrap("symbol", "excel")) {
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_excel")), (Object)bl));
        } else if (export_type == ConstantBuilder.symbolBootstrap("symbol", "word")) {
            Boolean bl = Boolean.TRUE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_word")), (Object)bl));
        }
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("raise()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "condition"), (Object)ConstantBuilder.symbolBootstrap("symbol", "user_interrupt")));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1319197185)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__int!export_to_word_save_as(Object _self, Object filename) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("export_to_word()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "run_in_background?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "filename"), (Object)filename, (Object)ConstantBuilder.symbolBootstrap("symbol", "quiet?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "overwrite?"), (Object)Boolean.TRUE));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1503813633)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__export_filename(Object _self, Object type, Object title, Object filter, Object message, Object exporting_id) {
        CallSite fs = Invoker.bootstrapPrivate("$slot_get_file_selector()", (Object)_self);
        if (fs == null) {
            fs = Invoker.bootstrapPrivate("$slot_set_file_selector()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "file_dialog"), _self, ConstantBuilder.stringBootstrap("string", ""), null, ConstantBuilder.symbolBootstrap("symbol", "operation"), ConstantBuilder.symbolBootstrap("symbol", "save"), ConstantBuilder.symbolBootstrap("symbol", "do_creation_check?"), Boolean.TRUE));
        }
        Object object = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)title);
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("title\\l\\l", (Object)fs, (Object)object));
        CallSite pathname = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("last_export_filenames", (Object)_self), type);
        if (pathname != null) {
            ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrap("pathname_components()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system"), (Object)pathname));
            Object dir = resultTuple.pop();
            Object fn = resultTuple.pop();
            Object object2 = dir;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("directory\\l\\l", (Object)fs, (Object)object2));
            object2 = fn;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("selection\\l\\l", (Object)fs, (Object)object2));
        } else {
            CallSite callSite = Invoker.bootstrap("home_for()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system"), Invoker.bootstrap("user_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system")));
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("directory\\l\\l", (Object)fs, (Object)callSite));
        }
        object = filter;
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("filter\\l\\l", (Object)fs, (Object)object));
        object = VectorBuilder.bootstrap("vb", message);
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("ok_message\\l\\l", (Object)fs, (Object)object));
        object = VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "abandon_export()"), type);
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("cancel_message\\l\\l", (Object)fs, (Object)object));
        ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate_relative_to()", (Object)fs, (Object)Invoker.bootstrap("title", fs), (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=933051471)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__int!export_to_excel_save_as(Object _self, Object filename) {
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("export_to_excel()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "run_in_background?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "filename"), (Object)filename, (Object)ConstantBuilder.symbolBootstrap("symbol", "quiet?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "overwrite?"), (Object)Boolean.TRUE));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=268143823)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__get_output_coordinate_system(Object _self) {
        DynamicAccessor.bootstrapBinder("!current_application!", "sw", 1);
        try {
            CallSite output_coordinate_system = null;
            if (DynamicAccessor.bootstrapFetcher("!current_application!", "sw") != null) {
                CallSite output_projection;
                ResultTuple resultTuple = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrap("databus", DynamicAccessor.bootstrapFetcher("!current_application!", "sw")), ConstantBuilder.symbolBootstrap("symbol", "map_properties")))));
                resultTuple.pop();
                Object the_map_properties = resultTuple.pop();
                if (the_map_properties != null && (output_projection = Invoker.bootstrap("get_display_coordinate_system()", the_map_properties)) != null) {
                    CallSite unit_name = Invoker.bootstrap("name", Invoker.bootstrap("unit", Invoker.bootstrap("get_coordinate_unit_display_format()", the_map_properties)));
                    output_coordinate_system = Invoker.bootstrap("new_from()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "coordinate_system"), output_projection, unit_name);
                }
            }
            CallSite callSite = output_coordinate_system;
            DynamicScope.destroyFrame();
            return callSite;
        }
        catch (Throwable throwable) {
            DynamicScope.destroyFrame();
            throw throwable;
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_export_plugin_24826.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_1() {
        try {
            return MethodHandles.lookup().findStatic(explorer_export_plugin_24826.class, "__loopbody_2", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_2() {
        try {
            return MethodHandles.lookup().findStatic(explorer_export_plugin_24826.class, "__loopbody_3", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_3() {
        try {
            return MethodHandles.lookup().findStatic(explorer_export_plugin_24826.class, "__loopbody_4", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_4() {
        try {
            return MethodHandles.lookup().findStatic(explorer_export_plugin_24826.class, "__loopbody_5", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_5() {
        try {
            return MethodHandles.lookup().findStatic(explorer_export_plugin_24826.class, "__loopbody_6", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_6() {
        try {
            return MethodHandles.lookup().findStatic(explorer_export_plugin_24826.class, "__loopbody_7", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_7() {
        try {
            return MethodHandles.lookup().findStatic(explorer_export_plugin_24826.class, "__loopbody_8", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_export_plugin_24826;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_export_plugin_24825
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_export_plugin_24825() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_export_plugin.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ProcInvoker.naturalBootstrap("()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "def_slotted_exemplar"), (Object)ConstantBuilder.symbolBootstrap("symbol", "explorer_export_plugin"), (Object)VectorBuilder.bootstrap("vb", VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "file_selector"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "engine"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "export_thread"), null), VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "total_to_export"), null)), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "plugin"), ConstantBuilder.symbolBootstrap("symbol", "explorer_view_plugin_mixin")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "cached_instances"), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "hash_table")), (Object)ConstantBuilder.symbolBootstrap("symbol", "private")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_variable()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "global_enabled?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "private")));
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_variable()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "last_export_filenames"), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "exclude_geometry_fields?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "exclude_join_fields?"), (Object)Boolean.FALSE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_variable()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_units_as_strings?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_variable()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "exports"), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "rope")), (Object)ConstantBuilder.symbolBootstrap("symbol", "private")));
        ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_variable()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "available_exports"), (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object)ConstantBuilder.symbolBootstrap("symbol", "private")));
        ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_variable()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "available_exports_incarnation"), null, (Object)ConstantBuilder.symbolBootstrap("symbol", "private")));
        ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "databus_consumer_data_types"), (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")), (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_10 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "always_use_save_as?"), (Object)Boolean.FALSE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_11 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_constant()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "max_length_multiple_result_joins"), (Object)0, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        ResultTuple cfr_ignored_12 = (ResultTuple)((Object)Invoker.tupleBootstrap("define_shared_variable()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "query_results_name_as_sheet_name?"), (Object)Boolean.FALSE, (Object)ConstantBuilder.symbolBootstrap("symbol", "public")));
        MagikObjectUtils.createMethod("explorer_export_plugin", "init()", explorer_export_plugin_24826.class, "explorer_export_plugin__init", 3, 3);
        MagikObjectUtils.createMethod("explorer_export_plugin", "add_export_type()", explorer_export_plugin_24826.class, "explorer_export_plugin__add_export_type", 2, 1);
        MagikObjectUtils.createMethod("explorer_export_plugin", "init_actions()", explorer_export_plugin_24826.class, "explorer_export_plugin__init_actions", 1, 1);
        MagikObjectUtils.createMethod("explorer_export_plugin", "export_available?()", explorer_export_plugin_24826.class, "explorer_export_plugin__export_available?", 2, 2);
        MagikObjectUtils.createMethod("explorer_export_plugin", "enable_actions()", explorer_export_plugin_24826.class, "explorer_export_plugin__enable_actions", 2, 2);
        MagikObjectUtils.createMethod("explorer_export_plugin", "int!enable_actions()", explorer_export_plugin_24826.class, "explorer_export_plugin__int!enable_actions", 2, 2);
        MagikObjectUtils.createMethod("explorer_export_plugin", "setup_collection_export_engine()", explorer_export_plugin_24826.class, "explorer_export_plugin__setup_collection_export_engine", 2, 2);
        MagikObjectUtils.createMethod("explorer_export_plugin", "int!export_in_background()", explorer_export_plugin_24826.class, "explorer_export_plugin__int!export_in_background", 4, 3);
        MagikObjectUtils.createMethod("explorer_export_plugin", "interrupt()", explorer_export_plugin_24826.class, "explorer_export_plugin__interrupt", 1, 1);
        MagikObjectUtils.createMethod("explorer_export_plugin", "note_change()", explorer_export_plugin_24826.class, "explorer_export_plugin__note_change", 4, 3);
        MagikObjectUtils.createMethod("explorer_export_plugin", "terminate()", explorer_export_plugin_24826.class, "explorer_export_plugin__terminate", 1, 1);
        MagikObjectUtils.createMethod("explorer_export_plugin", "description_for_selection()", explorer_export_plugin_24826.class, "explorer_export_plugin__description_for_selection", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_export_plugin", "manage_actions()", explorer_export_plugin_24826.class, "explorer_export_plugin__manage_actions", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_export_plugin", "sw_databus_data_available()", explorer_export_plugin_24826.class, "explorer_export_plugin__sw_databus_data_available", 3, 3);
        MagikObjectUtils.createMethod("explorer_export_plugin", "progress_counter()", explorer_export_plugin_24826.class, "explorer_export_plugin__progress_counter", 3, 2);
        MagikObjectUtils.createMethod("explorer_export_plugin", "abandon_export()", explorer_export_plugin_24826.class, "explorer_export_plugin__abandon_export", 2, 2);
        MagikObjectUtils.createMethod("explorer_export_plugin", "int!export_to_word_save_as()", explorer_export_plugin_24826.class, "explorer_export_plugin__int!export_to_word_save_as", 2, 2);
        MagikObjectUtils.createMethod("explorer_export_plugin", "export_filename()", explorer_export_plugin_24826.class, "explorer_export_plugin__export_filename", 6, 6);
        MagikObjectUtils.createMethod("explorer_export_plugin", "int!export_to_excel_save_as()", explorer_export_plugin_24826.class, "explorer_export_plugin__int!export_to_excel_save_as", 2, 2);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_export_plugin", "get_output_coordinate_system()", explorer_export_plugin_24826.class, "explorer_export_plugin__get_output_coordinate_system", 1, 1, false, false, true, 0));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_export_plugin_export_to_word_24834 {
    @SourceHash(value=314039928)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="11a6d8f3-68c9-4400-a135-034297958b29", type=Object.class, start=13, end=171, index=0), @EnvVar(name="11a6d8f3-68c9-4400-a135-034297958b29", type=Object.class, start=206, end=221, index=0)})
    public static Object explorer_export_plugin__check_export_to_word(Object _self) {
        CallSite word_appl;
        block8: {
            Object object;
            Object[] __env__ = new Object[1];
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "ole_unrecognised_server"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_export_plugin_export_to_word_24834.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray));
                        word_appl = Invoker.bootstrap("create_object()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "ole_client"), ConstantBuilder.stringBootstrap("string", "Word.Application"));
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("is_class_of?()", word_appl, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "ole_controller"))))) {
                            Boolean bl = Boolean.FALSE;
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            return bl;
                        }
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        break block8;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "ole_unrecognised_server")))) {
                return Boolean.FALSE;
            }
            throw new Error("Try block caught unexpected error.");
        }
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("release_object()", (Object)word_appl));
        return Boolean.TRUE;
    }

    @Parent(method="explorer_export_plugin__check_export_to_word")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="11a6d8f3-68c9-4400-a135-034297958b29", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @SourceHash(value=1398091368)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="0a6357e5-84a6-40a4-aff6-b027101574e9", type=Object.class, start=153, end=310, index=0), @EnvVar(name="0a6357e5-84a6-40a4-aff6-b027101574e9", type=Object.class, start=427, end=430, index=0)})
    public static Object explorer_export_plugin__export_to_word(Object _self) {
        Object[] __env__ = new Object[1];
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("export_available?()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_word")))) {
            Object object = Invoker.bootstrapPrivate("setup_collection_export_engine()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "exporting_to_word"));
            if (MagikObjectUtils.should_be_boolean(object)) {
                object = new Boolean(MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)_self), 0));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("raise()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "condition"), (Object)ConstantBuilder.symbolBootstrap("symbol", "user_error"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "nothing_to_export"))));
                return ResultTuple.EMPTY_TUPLE;
            }
            Boolean bl = Boolean.FALSE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_word")), (Object)bl));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("always_use_save_as?", (Object)_self))) {
                Object object2;
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[0]};
                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_export_plugin_export_to_word_24834.class, "proc___2", "", 3, 3, 0, 0, (Object[])objectArray);
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "user_interrupt"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2);
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("export_filename()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "word"), (Object)ConstantBuilder.symbolBootstrap("symbol", "select_word_file"), (Object)ConstantBuilder.stringBootstrap("string", "*.doc"), (Object)ConstantBuilder.symbolBootstrap("symbol", "int!export_to_word_save_as()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "exporting_to_word")));
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            return ResultTuple.EMPTY_TUPLE;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object3;
                        object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "user_interrupt")))) {
                    Boolean bl2 = Boolean.TRUE;
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_word")), (Object)bl2));
                    return ResultTuple.EMPTY_TUPLE;
                } else {
                    Object object4 = object2;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) {
                        object4 = object4;
                        if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) throw new Error("Try block caught unexpected error.");
                    }
                    ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("report_on()", (Object)object4, (Object)DynamicAccessor.bootstrapFetcher("!error_output!", "sw")));
                }
                return ResultTuple.EMPTY_TUPLE;
            }
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("export_to_word()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "run_in_background?"), (Object)Boolean.TRUE));
            return ResultTuple.EMPTY_TUPLE;
        }
        Boolean bl = Boolean.FALSE;
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_word")), (Object)bl));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_export_plugin__export_to_word")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="0a6357e5-84a6-40a4-aff6-b027101574e9", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___2(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_export_plugin_export_to_word_24834;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_export_plugin_export_to_word_24833
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_export_plugin_export_to_word_24833() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_export_plugin_export_to_word.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_export_type()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_word"), (Object)ConstantBuilder.symbolBootstrap("symbol", "window_system"), (Object)ConstantBuilder.symbolBootstrap("symbol", "win32"), (Object)ConstantBuilder.symbolBootstrap("symbol", "module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "ui_resources"), (Object)ConstantBuilder.symbolBootstrap("symbol", "check"), (Object)ConstantBuilder.symbolBootstrap("symbol", "check_export_to_word()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "method"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_word()")));
        MagikObjectUtils.createMethod("explorer_export_plugin", "check_export_to_word()", explorer_export_plugin_export_to_word_24834.class, "explorer_export_plugin__check_export_to_word", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_export_plugin", "export_to_word()", explorer_export_plugin_export_to_word_24834.class, "explorer_export_plugin__export_to_word", 1, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_export_plugin_export_to_excel_24842 {
    @SourceHash(value=-792570936)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="39077371-838d-4689-b74e-19a15a5616f5", type=Object.class, start=13, end=171, index=0), @EnvVar(name="39077371-838d-4689-b74e-19a15a5616f5", type=Object.class, start=206, end=221, index=0)})
    public static Object explorer_export_plugin__check_export_to_excel(Object _self) {
        CallSite excel_appl;
        block8: {
            Object object;
            Object[] __env__ = new Object[1];
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "ole_unrecognised_server"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_export_plugin_export_to_excel_24842.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray));
                        excel_appl = Invoker.bootstrap("create_object()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "ole_client"), ConstantBuilder.stringBootstrap("string", "Excel.application"));
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("not", Invoker.bootstrap("is_class_of?()", excel_appl, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "ole_controller"))))) {
                            Boolean bl = Boolean.FALSE;
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            return bl;
                        }
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        break block8;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "ole_unrecognised_server")))) {
                return Boolean.FALSE;
            }
            throw new Error("Try block caught unexpected error.");
        }
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("release_object()", (Object)excel_appl));
        return Boolean.TRUE;
    }

    @Parent(method="explorer_export_plugin__check_export_to_excel")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="39077371-838d-4689-b74e-19a15a5616f5", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled force condition propagation
     * Lifted jumps to return sites
     */
    @SourceHash(value=1270244191)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="552d5e8b-8937-4e62-8f11-a000eee4f491", type=Object.class, start=153, end=310, index=0), @EnvVar(name="552d5e8b-8937-4e62-8f11-a000eee4f491", type=Object.class, start=427, end=430, index=0)})
    public static Object explorer_export_plugin__export_to_excel(Object _self) {
        Object[] __env__ = new Object[1];
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("export_available?()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_excel")))) {
            Object object = Invoker.bootstrapPrivate("setup_collection_export_engine()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "exporting_to_excel"));
            if (MagikObjectUtils.should_be_boolean(object)) {
                object = new Boolean(MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)_self), 0));
            }
            if (MagikObjectUtils.should_be_boolean(object)) {
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("raise()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "condition"), (Object)ConstantBuilder.symbolBootstrap("symbol", "user_error"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "nothing_to_export"))));
                return ResultTuple.EMPTY_TUPLE;
            }
            Boolean bl = Boolean.FALSE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_excel")), (Object)bl));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("always_use_save_as?", (Object)_self))) {
                Object object2;
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[0]};
                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_export_plugin_export_to_excel_24842.class, "proc___2", "", 3, 3, 0, 0, (Object[])objectArray);
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "user_interrupt"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2);
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("export_filename()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "excel"), (Object)ConstantBuilder.symbolBootstrap("symbol", "select_excel_file"), (Object)ConstantBuilder.stringBootstrap("string", "*.xls"), (Object)ConstantBuilder.symbolBootstrap("symbol", "int!export_to_excel_save_as()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "exporting_to_excel")));
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            return ResultTuple.EMPTY_TUPLE;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object3;
                        object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "user_interrupt")))) {
                    Boolean bl2 = Boolean.TRUE;
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_excel")), (Object)bl2));
                    return ResultTuple.EMPTY_TUPLE;
                } else {
                    Object object4 = object2;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) {
                        object4 = object4;
                        if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) throw new Error("Try block caught unexpected error.");
                    }
                    ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("report_on()", (Object)object4, (Object)DynamicAccessor.bootstrapFetcher("!error_output!", "sw")));
                }
                return ResultTuple.EMPTY_TUPLE;
            }
            ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("export_to_excel()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "run_in_background?"), (Object)Boolean.TRUE));
            return ResultTuple.EMPTY_TUPLE;
        }
        Boolean bl = Boolean.FALSE;
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_excel")), (Object)bl));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="explorer_export_plugin__export_to_excel")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="552d5e8b-8937-4e62-8f11-a000eee4f491", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___2(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_export_plugin_export_to_excel_24842;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_export_plugin_export_to_excel_24841
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_export_plugin_export_to_excel_24841() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_export_plugin_export_to_excel.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_export_type()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_excel"), (Object)ConstantBuilder.symbolBootstrap("symbol", "window_system"), (Object)ConstantBuilder.symbolBootstrap("symbol", "win32"), (Object)ConstantBuilder.symbolBootstrap("symbol", "module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "ui_resources"), (Object)ConstantBuilder.symbolBootstrap("symbol", "check"), (Object)ConstantBuilder.symbolBootstrap("symbol", "check_export_to_excel()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "method"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_excel()")));
        MagikObjectUtils.createMethod("explorer_export_plugin", "check_export_to_excel()", explorer_export_plugin_export_to_excel_24842.class, "explorer_export_plugin__check_export_to_excel", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_export_plugin", "export_to_excel()", explorer_export_plugin_export_to_excel_24842.class, "explorer_export_plugin__export_to_excel", 1, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.LeaveCatcher;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.ReturnCatcher;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_export_plugin_export_to_access_24861 {
    @SourceHash(value=-347648623)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="__dynamic_frame__", type=Object.class, start=27, end=103, index=1), @EnvVar(name="__leave_catcher__", type=Object[].class, start=41, end=106, index=4), @EnvVar(name="__leave_catcher__", type=Object[].class, start=121, end=122, index=4), @EnvVar(name="__return_catcher__", type=Object[].class, start=19, end=122, index=3)})
    public static Object explorer_export_plugin__check_export_to_access(Object _self, Object possible_engine_names) {
        Boolean bl;
        Object[] __env__ = new Object[5];
        EnvAccessor.bootstrapStorer("storeEnv", (Object)new ReturnCatcher(), (Object[])__env__, (int)3);
        try {
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new LeaveCatcher(), (Object[])__env__, (int)4);
            try {
                EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)1);
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("elements()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)possible_engine_names));
                return Boolean.FALSE;
            }
            catch (LeaveCatcher.Leave leave) {
                ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).getLeaveResult(leave);
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("release_object()", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2)));
                bl = Boolean.TRUE;
            }
        }
        catch (ReturnCatcher.Return return_) {
            return ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).getReturnResult(return_);
        }
        return bl;
    }

    @Parent(method="explorer_export_plugin__check_export_to_access")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    @EnvVars(value={@EnvVar(name="engine", type=Object[].class, start=115, end=158, index=2), @EnvVar(name="466db6f6-d139-4ab2-998f-967b45fa86ba", type=Object.class, start=22, end=183, index=0), @EnvVar(name="466db6f6-d139-4ab2-998f-967b45fa86ba", type=Object.class, start=232, end=241, index=0), @EnvVar(name="engine", type=Object[].class, start=232, end=241, index=2)})
    public static Object __loopbody_(Object[] __env__, Object engine_name) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1)));
        try {
            block10: {
                Object object;
                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                try {
                    try {
                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                        try {
                            Object[] objectArray = new Object[]{__env__[0]};
                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "ole_unrecognised_server"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_export_plugin_export_to_access_24861.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray));
                            CallSite callSite2 = Invoker.bootstrap("create_object()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "ole_client"), engine_name);
                            EnvAccessor.bootstrapStorer("storeEnv", (Object)callSite2, (Object[])__env__, (int)2);
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("is_class_of?()", callSite2, GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "ole_controller")))) {
                                throw ((LeaveCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)4))).makeLeave(ResultTuple.EMPTY_TUPLE);
                            }
                            DynamicScope.destroyFrame();
                            DynamicScope.destroyFrame();
                            break block10;
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                    }
                    catch (Thrower.Throw throw_) {
                        Object object2;
                        object = object2 = Thrower.checkTag(throw_, callSite).peek();
                        DynamicScope.destroyFrame();
                    }
                }
                catch (Throwable throwable) {
                    DynamicScope.destroyFrame();
                    throw throwable;
                }
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "ole_unrecognised_server")))) {
                    throw ((ReturnCatcher)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)3))).makeReturn(Boolean.FALSE);
                }
                throw new Error("Try block caught unexpected error.");
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="__loopbody_")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="466db6f6-d139-4ab2-998f-967b45fa86ba", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=-1293323208)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__check_export_to_access97(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("check_export_to_access()", (Object)_self, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.stringBootstrap("string", "dao.dbengine.35"))));
    }

    @SourceHash(value=583922591)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__check_export_to_access2000_2002(Object _self) {
        return (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("check_export_to_access()", (Object)_self, (Object)VectorBuilder.bootstrap("vb", ConstantBuilder.stringBootstrap("string", "dao.dbengine.36"))));
    }

    @SourceHash(value=321154317)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__int!export_to_access(Object _self, Object engine, Object a_filename) {
        ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrap("split_filename()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system"), (Object)a_filename));
        resultTuple.pop();
        Object filename = resultTuple.pop();
        Object object = a_filename = ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), filename, ConstantBuilder.stringBootstrap("string", ".mdb"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("last_export_filenames", (Object)_self), (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "access")));
        Object object2 = Invoker.bootstrapPrivate("setup_collection_export_engine()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "exporting_to_access"));
        if (MagikObjectUtils.should_be_boolean(object2)) {
            object2 = new Boolean(MagikObjectUtils.is(Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)_self), 0));
        }
        if (MagikObjectUtils.should_be_boolean(object2)) {
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("raise()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "condition"), (Object)ConstantBuilder.symbolBootstrap("symbol", "user_error"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "nothing_to_export"))));
        } else {
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("export_to_access()", (Object)Invoker.bootstrapPrivate("$slot_get_engine()", (Object)_self), (Object)ConstantBuilder.symbolBootstrap("symbol", "engine"), (Object)engine, (Object)ConstantBuilder.symbolBootstrap("symbol", "run_in_background?"), (Object)Boolean.TRUE, (Object)ConstantBuilder.symbolBootstrap("symbol", "filename"), (Object)a_filename));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=-490625879)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__export_to_access(Object _self, Object engine) {
        CallSite fs = Invoker.bootstrapPrivate("$slot_get_file_selector()", (Object)_self);
        if (fs == null) {
            fs = Invoker.bootstrapPrivate("$slot_set_file_selector()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "file_dialog"), _self, ConstantBuilder.stringBootstrap("string", ""), null, ConstantBuilder.symbolBootstrap("symbol", "operation"), ConstantBuilder.symbolBootstrap("symbol", "open")));
        }
        CallSite callSite = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_access_database"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("title\\l\\l", (Object)fs, (Object)callSite));
        CallSite pathname = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("last_export_filenames", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "access"));
        if (pathname != null) {
            ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrap("pathname_components()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system"), (Object)pathname));
            Object dir = resultTuple.pop();
            Object fn = resultTuple.pop();
            Object object = dir;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("directory\\l\\l", (Object)fs, (Object)object));
            object = fn;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("selection\\l\\l", (Object)fs, (Object)object));
        } else {
            CallSite callSite2 = Invoker.bootstrap("home_for()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system"), Invoker.bootstrap("user_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system")));
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("directory\\l\\l", (Object)fs, (Object)callSite2));
        }
        callSite = ConstantBuilder.stringBootstrap("string", "*.mdb");
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("filter\\l\\l", (Object)fs, (Object)callSite));
        callSite = VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "int!export_to_access()"), engine);
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("ok_message\\l\\l", (Object)fs, (Object)callSite));
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate_relative_to()", (Object)fs, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_access_database")), (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=399992147)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__export_to_access97(Object _self) {
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("export_available?()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_access97")))) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("export_to_access()", (Object)_self, (Object)ConstantBuilder.stringBootstrap("string", "dao.dbengine.35")));
        } else {
            Boolean bl = Boolean.FALSE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_access97")), (Object)bl));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    @SourceHash(value=1499735634)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__export_to_access2000_2002(Object _self) {
        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("export_available?()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_access2000_2002")))) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("export_to_access()", (Object)_self, (Object)ConstantBuilder.stringBootstrap("string", "dao.dbengine.36")));
        } else {
            Boolean bl = Boolean.FALSE;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("enabled?\\l\\l", (Object)Invoker.bootstrapPrivate("action()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_access2000_2002")), (Object)bl));
        }
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_export_plugin_export_to_access_24861.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_export_plugin_export_to_access_24861;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_export_plugin_export_to_access_24860
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_export_plugin_export_to_access_24860() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_export_plugin_export_to_access.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_export_type()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_access97"), (Object)ConstantBuilder.symbolBootstrap("symbol", "window_system"), (Object)ConstantBuilder.symbolBootstrap("symbol", "win32"), (Object)ConstantBuilder.symbolBootstrap("symbol", "image_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_access"), (Object)ConstantBuilder.symbolBootstrap("symbol", "module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "ui_resources"), (Object)ConstantBuilder.symbolBootstrap("symbol", "check"), (Object)ConstantBuilder.symbolBootstrap("symbol", "check_export_to_access97()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "method"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_access97()")));
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_export_type()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_access2000_2002"), (Object)ConstantBuilder.symbolBootstrap("symbol", "window_system"), (Object)ConstantBuilder.symbolBootstrap("symbol", "win32"), (Object)ConstantBuilder.symbolBootstrap("symbol", "image_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_access"), (Object)ConstantBuilder.symbolBootstrap("symbol", "module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "ui_resources"), (Object)ConstantBuilder.symbolBootstrap("symbol", "check"), (Object)ConstantBuilder.symbolBootstrap("symbol", "check_export_to_access2000_2002()"), (Object)ConstantBuilder.symbolBootstrap("symbol", "method"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_access2000_2002()")));
        MagikObjectUtils.createMethod("explorer_export_plugin", "check_export_to_access()", explorer_export_plugin_export_to_access_24861.class, "explorer_export_plugin__check_export_to_access", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_export_plugin", "check_export_to_access97()", explorer_export_plugin_export_to_access_24861.class, "explorer_export_plugin__check_export_to_access97", 1, 1);
        MagikObjectUtils.createMethod("explorer_export_plugin", "check_export_to_access2000_2002()", explorer_export_plugin_export_to_access_24861.class, "explorer_export_plugin__check_export_to_access2000_2002", 1, 1);
        MagikObjectUtils.createMethod("explorer_export_plugin", "int!export_to_access()", explorer_export_plugin_export_to_access_24861.class, "explorer_export_plugin__int!export_to_access", 3, 3);
        MagikObjectUtils.createMethod("explorer_export_plugin", "export_to_access()", explorer_export_plugin_export_to_access_24861.class, "explorer_export_plugin__export_to_access", 2, 2, false, false, true, 0);
        MagikObjectUtils.createMethod("explorer_export_plugin", "export_to_access97()", explorer_export_plugin_export_to_access_24861.class, "explorer_export_plugin__export_to_access97", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_export_plugin", "export_to_access2000_2002()", explorer_export_plugin_export_to_access_24861.class, "explorer_export_plugin__export_to_access2000_2002", 1, 1));
    }

    @Override
    public void preload() {
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.BinaryDispatcher;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.lang.invoke.MethodType;

/*
 * Illegal identifiers - consider using --renameillegalidents true
 */
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class explorer_export_plugin_export_to_xml_24869 {
    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-503791996)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="hetero_field_list", type=Object.class, start=264, end=546, index=1), @EnvVar(name="__dynamic_frame__", type=Object.class, start=256, end=546, index=0), @EnvVar(name="a370ff8d-e2ea-4c6f-a073-e84bf59a5874", type=Object.class, start=595, end=715, index=2), @EnvVar(name="a370ff8d-e2ea-4c6f-a073-e84bf59a5874", type=Object.class, start=750, end=753, index=2), @EnvVar(name="a370ff8d-e2ea-4c6f-a073-e84bf59a5874", type=Object.class, start=821, end=941, index=2), @EnvVar(name="a370ff8d-e2ea-4c6f-a073-e84bf59a5874", type=Object.class, start=976, end=979, index=2)})
    public static Object explorer_export_plugin__int!export_to_xml(Object _self, Object a_filename) {
        ResultTuple resultTuple;
        Object[] __env__ = new Object[3];
        CallSite xml_stream = null;
        DynamicAccessor.bootstrapBinder("!current_coordinate_system!", "sw", 1);
        try {
            block27: {
                ResultTuple resultTuple2 = (ResultTuple)((Object)TupleBuilder.bootstrap("tb", (Object[])Invoker.bootstrapPrivate("for_scatter()", (Object)Invoker.bootstrap("request_data()", Invoker.bootstrapPrivate("databus", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "explorer_selection")))));
                resultTuple2.pop();
                Object selection = resultTuple2.pop();
                CallSite result = Invoker.bootstrap("rwo_set", selection);
                DynamicAccessor.bootstrapStorer("!current_coordinate_system!", "sw", (Object)Invoker.bootstrap("coordinate_system", Invoker.bootstrapPrivate("application", (Object)_self)));
                ResultTuple resultTuple3 = (ResultTuple)((Object)Invoker.tupleBootstrap("split_filename()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system"), (Object)a_filename));
                resultTuple3.pop();
                Object filename = resultTuple3.pop();
                Object object = a_filename = ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "write_string"), filename, ConstantBuilder.stringBootstrap("string", ".xml"));
                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)Invoker.bootstrapPrivate("last_export_filenames", (Object)_self), (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "xml")));
                Object object2 = Invoker.bootstrap("size_is_fast?", result);
                if (MagikObjectUtils.should_be_boolean(object2)) {
                    object2 = new Boolean(MagikObjectUtils.is(Invoker.bootstrap("size", result), 0));
                }
                if (MagikObjectUtils.should_be_boolean(object2)) {
                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("raise()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "condition"), (Object)ConstantBuilder.symbolBootstrap("symbol", "user_error"), (Object)ConstantBuilder.symbolBootstrap("symbol", "string"), (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "nothing_to_export"))));
                    ResultTuple resultTuple4 = ResultTuple.EMPTY_TUPLE;
                    DynamicScope.destroyFrame();
                    return resultTuple4;
                }
                try {
                    EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                    EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)1);
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "property_list")), (Object[])__env__, (int)1);
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("enable_actions()", (Object)_self, (Object)Boolean.FALSE));
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)DynamicScope.getFrame(), (Object[])__env__, (int)0);
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("rwo_sets()", (MethodHandle)cfr_ldc_0(), (Object[])__env__, (Object)selection));
                    CallSite xml_descriptor = Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "xml_collection_descriptor"), result, ConstantBuilder.symbolBootstrap("symbol", "hetero_field_list"), EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), ConstantBuilder.symbolBootstrap("symbol", "want_geometry?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "want_coords?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "want_external_name?"), Boolean.TRUE, ConstantBuilder.symbolBootstrap("symbol", "want_relationships?"), Invoker.bootstrap("not", Invoker.bootstrapPrivate("exclude_join_fields?", (Object)_self)));
                    xml_stream = Invoker.bootstrap("new_file()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "xml_output_stream"), a_filename);
                    ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("write_prolog()", (Object)xml_stream));
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrap("size_is_fast?", result))) {
                        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("start_element()", (Object)xml_stream, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "xml_title")), (Object)ConstantBuilder.symbolBootstrap("symbol", "size"), (Object)Invoker.bootstrap("size", result)));
                    } else {
                        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("start_element()", (Object)xml_stream, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "xml_title"))));
                    }
                    CallSite callSite = BinaryDispatcher.bootstrap("\\g", Invoker.bootstrapPrivate("$slot_get_total_to_export()", (Object)_self), Integer.valueOf(0));
                    Integer step = MagikObjectUtils.should_be_boolean(callSite) ? Integer.valueOf(1) : Integer.valueOf(50);
                    ResultTuple cfr_ignored_7 = (ResultTuple)((Object)Invoker.tupleBootstrap("write_collection()", (Object)xml_stream, (Object)result, (Object)xml_descriptor, (Object)ConstantBuilder.symbolBootstrap("symbol", "progress_counter"), (Object)Invoker.bootstrapPrivate("progress_counter()", (Object)_self, (Object)callSite, (Object)step)));
                }
                catch (Throwable throwable) {
                    InterruptInfrastructure.disableInterrupts();
                    try {
                        Object object3;
                        ResultTuple cfr_ignored_8 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("enable_actions()", (Object)_self, (Object)Boolean.TRUE));
                        if (xml_stream == null) throw throwable;
                        ResultTuple cfr_ignored_9 = (ResultTuple)((Object)Invoker.tupleBootstrap("end_element()", xml_stream, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "xml_title"))));
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)2);
                        DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                        CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
                        DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                        try {
                            try {
                                DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                try {
                                    Object[] objectArray = new Object[]{__env__[2]};
                                    ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_export_plugin_export_to_xml_24869.class, "proc___2", "", 3, 3, 0, 0, (Object[])objectArray));
                                    ResultTuple cfr_ignored_10 = (ResultTuple)((Object)Invoker.tupleBootstrap("close()", (Object)xml_stream));
                                    DynamicScope.destroyFrame();
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                catch (Throwable throwable2) {
                                    DynamicScope.destroyFrame();
                                    throw throwable2;
                                }
                            }
                            catch (Thrower.Throw throw_) {
                                Object object4;
                                object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                DynamicScope.destroyFrame();
                            }
                        }
                        catch (Throwable throwable3) {
                            DynamicScope.destroyFrame();
                            throw throwable3;
                        }
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) throw throwable;
                        throw new Error("Try block caught unexpected error.");
                    }
                    finally {
                        InterruptInfrastructure.enableInterrupts();
                    }
                }
                InterruptInfrastructure.disableInterrupts();
                try {
                    Object object5;
                    ResultTuple cfr_ignored_11 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("enable_actions()", (Object)_self, (Object)Boolean.TRUE));
                    if (xml_stream == null) break block27;
                    ResultTuple cfr_ignored_12 = (ResultTuple)((Object)Invoker.tupleBootstrap("end_element()", (Object)xml_stream, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "xml_title"))));
                    EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)2);
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)2);
                    DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                    CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)2);
                    DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                    try {
                        try {
                            DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                            try {
                                Object[] objectArray = new Object[]{__env__[2]};
                                ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), ConstantBuilder.procBootstrap("proc", (Class<?>)explorer_export_plugin_export_to_xml_24869.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray));
                                ResultTuple cfr_ignored_13 = (ResultTuple)((Object)Invoker.tupleBootstrap("close()", (Object)xml_stream));
                                DynamicScope.destroyFrame();
                                DynamicScope.destroyFrame();
                                break block27;
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                        }
                        catch (Thrower.Throw throw_) {
                            Object object6;
                            object5 = object6 = Thrower.checkTag(throw_, callSite).peek();
                            DynamicScope.destroyFrame();
                        }
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
                finally {
                    InterruptInfrastructure.enableInterrupts();
                }
            }
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.destroyFrame();
            throw throwable;
        }
        DynamicScope.destroyFrame();
        return resultTuple;
    }

    @Parent(method="explorer_export_plugin__int!export_to_xml")
    @Debugger(value="MagikDebug")
    @CodeType(value="LoopBody")
    public static Object __loopbody_(Object[] __env__, Object rwo_set, Object collection, Object explorer_element) {
        ResultTuple resultTuple;
        DynamicScope __iterator_frame__ = DynamicScope.interjectFrame((DynamicScope)((Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0)));
        try {
            CallSite callSite = Invoker.bootstrap("visible_field_names", explorer_element);
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("\\b]\\l\\l", (Object)EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)1), (Object)callSite, (Object)Invoker.bootstrap("name", collection)));
            resultTuple = ResultTuple.EMPTY_TUPLE;
        }
        catch (Throwable throwable) {
            DynamicScope.interjectFrame(__iterator_frame__);
            throw throwable;
        }
        DynamicScope.interjectFrame(__iterator_frame__);
        return resultTuple;
    }

    @Parent(method="explorer_export_plugin__int!export_to_xml")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="a370ff8d-e2ea-4c6f-a073-e84bf59a5874", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @Parent(method="explorer_export_plugin__int!export_to_xml")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="a370ff8d-e2ea-4c6f-a073-e84bf59a5874", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___2(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=-1707312387)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object explorer_export_plugin__export_to_xml(Object _self) {
        CallSite fs = Invoker.bootstrapPrivate("$slot_get_file_selector()", (Object)_self);
        if (fs == null) {
            fs = Invoker.bootstrapPrivate("$slot_set_file_selector()", (Object)_self, (Object)Invoker.bootstrap("new()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "file_dialog"), _self, ConstantBuilder.stringBootstrap("string", ""), null, ConstantBuilder.symbolBootstrap("symbol", "operation"), ConstantBuilder.symbolBootstrap("symbol", "save")));
        }
        CallSite callSite = Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_xml_file"));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("title\\l\\l", (Object)fs, (Object)callSite));
        CallSite pathname = Invoker.bootstrap("\\b]", Invoker.bootstrapPrivate("last_export_filenames", (Object)_self), ConstantBuilder.symbolBootstrap("symbol", "xml"));
        if (pathname != null) {
            ResultTuple resultTuple = (ResultTuple)((Object)Invoker.tupleBootstrap("pathname_components()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system"), (Object)pathname));
            Object dir = resultTuple.pop();
            Object fn = resultTuple.pop();
            Object object = dir;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrap("directory\\l\\l", (Object)fs, (Object)object));
            object = fn;
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrap("selection\\l\\l", (Object)fs, (Object)object));
        } else {
            CallSite callSite2 = Invoker.bootstrap("home_for()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system"), Invoker.bootstrap("user_name", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "system")));
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrap("directory\\l\\l", (Object)fs, (Object)callSite2));
        }
        callSite = ConstantBuilder.stringBootstrap("string", "*.xml");
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrap("filter\\l\\l", (Object)fs, (Object)callSite));
        callSite = VectorBuilder.bootstrap("vb", ConstantBuilder.symbolBootstrap("symbol", "int!export_in_background()"), ConstantBuilder.symbolBootstrap("symbol", "int!export_to_xml()"), ConstantBuilder.symbolBootstrap("symbol", "exporting_to_xml"));
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrap("ok_message\\l\\l", (Object)fs, (Object)callSite));
        ResultTuple cfr_ignored_6 = (ResultTuple)((Object)Invoker.tupleBootstrap("activate_relative_to()", (Object)fs, (Object)Invoker.bootstrapPrivate("message()", (Object)_self, (Object)ConstantBuilder.symbolBootstrap("symbol", "select_xml_file")), (Object)Invoker.bootstrapPrivate("top_frame", (Object)_self)));
        return ResultTuple.EMPTY_TUPLE;
    }

    /*
     * Works around MethodHandle LDC.
     */
    static MethodHandle cfr_ldc_0() {
        try {
            return MethodHandles.lookup().findStatic(explorer_export_plugin_export_to_xml_24869.class, "__loopbody_", MethodType.fromMethodDescriptorString("([Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", null));
        }
        catch (NoSuchMethodException | IllegalAccessException except) {
            throw new IllegalArgumentException(except);
        }
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.sw_core.explorer_plugin;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.sw_core.explorer_plugin.explorer_export_plugin_export_to_xml_24869;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class explorer_export_plugin_export_to_xml_24868
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public explorer_export_plugin_export_to_xml_24868() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        DynamicAccessor.bootstrapStorer("!source_file!", "sw", (Object)ConstantBuilder.stringBootstrap("string", "/projects/hg/corerepo/sw_core/modules/sw_common/explorer_plugin/source/view_plugins/explorer_export_plugin_export_to_xml.magik"));
        DynamicAccessor.bootstrapStorer("!current_package!", "sw", (Object)ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "package"), ConstantBuilder.stringBootstrap("string", "sw")));
        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrap("add_export_type()", (Object)GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "explorer_export_plugin"), (Object)ConstantBuilder.symbolBootstrap("symbol", "name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_xml"), (Object)ConstantBuilder.symbolBootstrap("symbol", "window_system"), (Object)ConstantBuilder.symbolBootstrap("symbol", "all"), (Object)ConstantBuilder.symbolBootstrap("symbol", "module_name"), (Object)ConstantBuilder.symbolBootstrap("symbol", "ui_resources"), (Object)ConstantBuilder.symbolBootstrap("symbol", "method"), (Object)ConstantBuilder.symbolBootstrap("symbol", "export_to_xml()")));
        MagikObjectUtils.createMethod("explorer_export_plugin", "int!export_to_xml()", explorer_export_plugin_export_to_xml_24869.class, "explorer_export_plugin__int!export_to_xml", 2, 2);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("explorer_export_plugin", "export_to_xml()", explorer_export_plugin_export_to_xml_24869.class, "explorer_export_plugin__export_to_xml", 1, 1));
    }

    @Override
    public void preload() {
    }
}
#############
#############
