## jpn_method_test_loop
@CodeType(value="Subsidiary")
public class deco_test_3468 {
    @CodeType(value="Method")
    public static Object deco_test__test_loop(Object _self) {
        while (true) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("use()", (Object)_self));
        }
    }
}

@CodeType(value="Primary")
public class deco_test_3457
implements ExecutableMagik {
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("deco_test", "test_loop()", deco_test_3468.class, "deco_test__test_loop", 1, 1);
    }
}
###########
_method deco_test.test_loop()
	_loop
		_self.use()
	_endloop 
_endmethod
$
###########
## jpn_method_test_loop_leave
@CodeType(value="Subsidiary")
public class deco_test_3468 {
    @CodeType(value="Method")
    public static Object deco_test__test_loop_leave(Object _self) {
        while (true) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("use()", (Object)_self));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("test?", (Object)_self))) break;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("dont_use()", (Object)_self));
        }
        return ResultTuple.EMPTY_TUPLE;
    }
}

@CodeType(value="Primary")
public class deco_test_3457
implements ExecutableMagik {
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("deco_test", "test_loop_leave()", deco_test_3468.class, "deco_test__test_loop_leave", 1, 1);
    }
}
###########
_method deco_test.test_loop_leave()
	_loop
		_self.use()
		_if _self.test? _then _leave _endif 
		_self.dont_use()
	_endloop 
	_return _unset
_endmethod
$
###########
## jpn_method_test_loop_continue
@CodeType(value="Subsidiary")
public class deco_test_3468 {
    @CodeType(value="Method")
    public static Object deco_test__test_loop_continue(Object _self) {
        while (true) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("use()", (Object)_self));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("test?", (Object)_self))) {
                ResultTuple resultTuple = ResultTuple.EMPTY_TUPLE;
                continue;
            }
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("dont_use()", (Object)_self));
        }
    }
}

@CodeType(value="Primary")
public class deco_test_3457
implements ExecutableMagik {
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("deco_test", "test_loop_continue()", deco_test_3468.class, "deco_test__test_loop_continue", 1, 1);
    }
}
###########
_method deco_test.test_loop_continue()
	_loop
		_self.use()
		_if _self.test?
        	_then
			_local resultTuple << _unset
            		_continue
        	_endif
		_self.dont_use()
	_endloop
_endmethod
$

###########
## jpn_method_test_loop_leave_outer
@CodeType(value="Subsidiary")
public class deco_test_3468 {
    @CodeType(value="Method")
    public static Object deco_test__test_loop_leave_outer(Object _self) {
        block0: while (true) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("pre()", (Object)_self));
            while (true) {
                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("use()", (Object)_self));
                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("test?", (Object)_self))) {
                    continue block0;
                }
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("dont_use()", (Object)_self));
            }
            break;
        }
    }
}

@CodeType(value="Primary")
public class deco_test_3457
implements ExecutableMagik {
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("deco_test", "test_loop_leave_outer()", deco_test_3468.class, "deco_test__test_loop_leave_outer", 1, 1);
    }
}
###########
_method deco_test.test_loop_leave_outer()
	_loop @block0
		_self.pre()
		_loop
			_self.use()
			_if _self.test? _then _continue @block0 _endif 
			_self.dont_use()
		_endloop
		_leave
	_endloop 
_endmethod
$
###########
## jpn_method_test_loop_exit_condition_last
@CodeType(value="Subsidiary")
public class deco_test_3468 {
    @CodeType(value="Method")
    public static Object deco_test__test_loop_exit_condition_last(Object _self) {
        do {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("use()", (Object)_self));
        } while (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("test", (Object)_self)));
        Integer var = 1;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("show()", (Object)_self, (Object)var));
        return ResultTuple.EMPTY_TUPLE;
    }
}

@CodeType(value="Primary")
public class deco_test_3457
implements ExecutableMagik {
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("deco_test", "test_loop_exit_condition_last()", deco_test_3468.class, "deco_test__test_loop_exit_condition_last", 1, 1);
    }
}
###########
_method deco_test.test_loop_exit_condition_last() 
    _loop
        _self.use()
        _if _self.test _then_leave _endif
    _endloop
    _local var << 1
    _self.show(var)
    _return  _unset
_endmethod
$
###########
## jpn_method_test_loop_exit_condition
@CodeType(value="Subsidiary")
public class deco_test_3468 {
    @CodeType(value="Method")
    public static Object deco_test__test_loop_exit_condition(Object _self) {
        while (true) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("use()", (Object)_self));
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("test", (Object)_self))) break;
            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("use2()", (Object)_self));
        }
        Integer var = 1;
        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("show()", (Object)_self, (Object)var));
        return ResultTuple.EMPTY_TUPLE;
    }
}

@CodeType(value="Primary")
public class deco_test_3457
implements ExecutableMagik {
    @CodeType(value="TopLevel")
    public Object execute() {
    	   MagikObjectUtils.createMethod("deco_test", "test_loop_exit_condition()", deco_test_3468.class, "deco_test__test_loop_exit_condition", 1, 1);
	   }
}
###########
_method deco_test.test_loop_exit_condition() 
    _loop
        _self.use()
        _if _self.test
        _then
             _leave
        _endif
        _self.use2()
    _endloop
    _local var << 1
    _self.show(var)
    _return  _unset
_endmethod
$
###########
## jpn_method_test_loop_exit_var_condition
@CodeType(value="Subsidiary")
public class deco_test_3468 {
    @CodeType(value="Method")
    public static Object deco_test__test_loop_exit_var_condition(Object _self) {
        CallSite a;
        while (true) {
            a = Invoker.bootstrapPrivate("use()", (Object)_self);
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("test", (Object)_self))) break;
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("use2()", (Object)_self));
        }
        CallSite var = a;
        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("show()", (Object)_self, (Object)var));
        return ResultTuple.EMPTY_TUPLE;
    }
}

@CodeType(value="Primary")
public class deco_test_3457
implements ExecutableMagik {
    @CodeType(value="TopLevel")
    public Object execute() {
    	   MagikObjectUtils.createMethod("deco_test", "test_loop_exit_var_condition()", deco_test_3468.class, "deco_test__test_loop_exit_var_condition", 1, 1);
	   }
}
###########
_method deco_test.test_loop_exit_var_condition() 
    _local a
    _loop
        a << _self.use()
        _if _self.test
        _then
             _leave
        _endif
        _self.use2()
    _endloop
    _local var << a
    _self.show(var)
    _return  _unset
_endmethod
$
###########
## jpn_loop_after
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_tester_4080 {
    @SourceHash(value=1503780222)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object deco_tester__test_loop_return_after(Object _self) {
        do {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("do()", (Object)_self));
        } while (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("stop?", (Object)_self)));
        return 2;
    }
}

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_tester_4079
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public deco_tester_4079() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("deco_tester", "test_loop_return_after()", deco_tester_4080.class, "deco_tester__test_loop_return_after", 1, 1);
    }

    @Override
    public void preload() {
    }
}

###########
_method deco_tester.test_loop_return_after() 
    _loop
        _self.do()
        _if _self.stop?
        _then
             _leave
        _endif
    _endloop
    _return 2
_endmethod
$
###########
## jpn_loop_before
@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_tester_4080 {
    @SourceHash(value=-1138217627)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    public static Object deco_tester__test_loop_return_before(Object _self) {
        while (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("stop?", (Object)_self))) {
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("do()", (Object)_self));
        }
        return 2;
    }
}

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_tester_4079
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public deco_tester_4079() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("deco_tester", "test_loop_return_before()", deco_tester_4080.class, "deco_tester__test_loop_return_before", 1, 1));
    }

    @Override
    public void preload() {
    }
}

###########
_method deco_tester.test_loop_return_before() 
    _loop
        _if _self.stop?
        _then
             _leave
        _endif
        _self.do()
    _endloop
    _return 2
_endmethod
$
###########
