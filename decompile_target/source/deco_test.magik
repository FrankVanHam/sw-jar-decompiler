_package user
$
remex(:deco_test)
$

_pragma(classify_level=restricted, topic={jar_decompiler})
def_slotted_exemplar(:deco_test,
	{},
	:model)
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_iter _method deco_test.simple_elements()
	##
	_loopbody(1)
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_iter _method deco_test.scatter_elements()
	##
	_local a << _self.vars()
	_loopbody(1, _scatter a)
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_iter _method deco_test.return_elements()
	##
	_loopbody("var")
	_return _self.result()
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_iter _method deco_test.fast_elements()
	##
	_for el _over _self.elements()
	_loop
		_loopbody(el)
	_endloop 
_endmethod
$
