_package user
$
remex(:deco_test)
$

_pragma(classify_level=restricted, topic={jar_decompiler})
def_slotted_exemplar(:deco_test,
	{},
	:model)
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method deco_test.dynamic_declare()
	## 
	_dynamic !current_new!
	
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method deco_test.dynamic_assign(p_arg)
	## 
	_dynamic !current_dsview! << _self
	_dynamic !current_sts! << p_arg
	
	_dynamic !curent_world! << _self.world
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method deco_test.dynamic_use()
	##
	_dynamic !current_new!
	!current_new!.do()
	_self.run(!current_new!)
_endmethod
$

_pragma(classify_level=restricted, topic={jar_decompiler})
_method deco_test.dyanmic_local_use()
	##
	_if _self.test?
	_then
		_dynamic !current_new! << 2
		_self.run()
	_endif
	_self.run()
_endmethod
$

