_package user
$

remex(:deco_test)
$

_pragma(classify_level=restricted, topic={jar_decompiler})
def_slotted_exemplar(:deco_test,
	{},
	:model)
$

_pragma(classify_level=basic, topic={explorer_model})
_method deco_test.has_collection_parts?
	##
	## Indicates whether this is a collection element that has
	## collection parts as children.
	##
	>> _self.is_collection? _andif _self.children?
_endmethod
$

_pragma(classify_level=advanced, usage={subclassable}, topic={explorer_model_plugin})
_method deco_test.do_move_action( action, source_element, target_element )
	
	_protect
		_if target_element _is _self.current_set_element
		_then
			# Store in the clipboard
			scrapbook.set_current_result(_self.name)
		_elif target_element _is saved_sets_element
		_then
			# Store a query_result
			_local stored_result << query_result.new_non_persistent()

			# And store in the scrapbook, preventing errors in case the
			# scrapbook is readonly (multiple users logged on using the
			# same name).
			_try
				_self.scrapbook.store(_self.name)
			_when scrapbook_read_only
			      # Shouldn't occur, since the scrapbook wasn't shown as a valid
			      # target. 
			_endtry
		_endif
	_protection
		_self.write(1)
	_endprotect
_endmethod
$
