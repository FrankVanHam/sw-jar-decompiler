_package user
$

def_slotted_exemplar(:deco_test,{})
$

_method deco_test.test_gather_iter()
	_for i_index, _gather i_var _over _self.fast_elements()
	_loop
		_self.run(i_index, _scatter i_var)
	_endloop
	_return 
_endmethod
$

_method deco_test.test_nested_iter()
	_for i_var _over _self.fast_elements()
	_loop
		_for i_var2 _over _self.fast_elements()
		_loop 
			_self.run(i_var, i_var2)
		_endloop 
	_endloop
	_return 
_endmethod
$

_method deco_test.test_nested_break_iter()
	_for i_var _over _self.fast_elements()
	_loop @outer
		_for i_var2 _over _self.fast_elements()
		_loop 
			_self.run1(i_var, i_var2)
			_if _self.exit? _then _leave @outer _endif
			_self.run2(i_var, i_var2)
			_self.self.exit? _then _continue @outer _endif
			_self.run3(i_var, i_var2)
		_endloop 
	_endloop
	_return 
_endmethod
$

