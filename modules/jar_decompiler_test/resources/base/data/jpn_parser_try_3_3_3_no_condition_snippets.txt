## jpn_3_3_3_no_cnd_try_combinations
package magik.jar_decompiler_lp.decompile_target;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVar;
import com.gesmallworld.magik.commons.runtime.annotations.EnvVars;
import com.gesmallworld.magik.commons.runtime.annotations.Parent;
import com.gesmallworld.magik.language.DynamicScope;
import com.gesmallworld.magik.language.InterruptInfrastructure;
import com.gesmallworld.magik.language.ResultTuple;
import com.gesmallworld.magik.language.SourceHash;
import com.gesmallworld.magik.language.Thrower;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.EnvAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.Invoker;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import java.lang.invoke.CallSite;

@Debugger(value="MagikDebug")
@CodeType(value="Subsidiary")
public class deco_test_4424 {
    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=1841822035)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="5e30ed4c-2a50-496a-b671-e4a95a9db961", type=Object.class, start=23, end=194, index=0), @EnvVar(name="5e30ed4c-2a50-496a-b671-e4a95a9db961", type=Object.class, start=408, end=422, index=0)})
    public static Object deco_test__try_3_3_3(Object _self) {
        block8: {
            block12: {
                Object object;
                block13: {
                    block10: {
                        Object object2;
                        block11: {
                            block9: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_user_error"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block8;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                Object object5 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block9;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block9;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block9;
                                object2 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block10;
                                break block11;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block8;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block10;
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) break block10;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block12;
                        break block13;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block8;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    object = object;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_user_error")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_3_3")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="5e30ed4c-2a50-496a-b671-e4a95a9db961", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=48247686)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="0c1dab49-5653-4819-81cd-778e06fbeb11", type=Object.class, start=23, end=187, index=0), @EnvVar(name="0c1dab49-5653-4819-81cd-778e06fbeb11", type=Object.class, start=384, end=398, index=0)})
    public static Object deco_test__try_3_3_2(Object _self) {
        block7: {
            block11: {
                Object object;
                block12: {
                    block9: {
                        Object object2;
                        block10: {
                            block8: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___2", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block7;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                Object object5 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block8;
                                object2 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                                break block10;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block7;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) break block9;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block11;
                        break block12;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block7;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_3_2")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="0c1dab49-5653-4819-81cd-778e06fbeb11", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___2(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=1636994778)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="57dfaab9-d53a-4d63-89d6-40e1383f9838", type=Object.class, start=23, end=180, index=0), @EnvVar(name="57dfaab9-d53a-4d63-89d6-40e1383f9838", type=Object.class, start=360, end=374, index=0)})
    public static Object deco_test__try_3_3_1(Object _self) {
        block7: {
            block11: {
                block9: {
                    Object object;
                    block10: {
                        block8: {
                            Object object2;
                            Object[] __env__ = new Object[1];
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                            try {
                                try {
                                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                    try {
                                        Object[] objectArray = new Object[]{__env__[0]};
                                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___3", "", 3, 3, 0, 0, (Object[])objectArray);
                                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2);
                                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                        DynamicScope.destroyFrame();
                                        DynamicScope.destroyFrame();
                                        break block7;
                                    }
                                    catch (Throwable throwable) {
                                        DynamicScope.destroyFrame();
                                        throw throwable;
                                    }
                                }
                                catch (Thrower.Throw throw_) {
                                    Object object3;
                                    object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                    DynamicScope.destroyFrame();
                                }
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                            Object object4 = object2;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                            object4 = object4;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                            object4 = object4;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block8;
                            object = object4;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                            break block10;
                        }
                        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                        break block7;
                    }
                    object = object;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                    object = object;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) break block9;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                    break block11;
                }
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                break block7;
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_3_1")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="57dfaab9-d53a-4d63-89d6-40e1383f9838", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___3(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=205051619)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="e9e3dc89-536f-4c46-beb9-d57ebebd5227", type=Object.class, start=23, end=173, index=0), @EnvVar(name="e9e3dc89-536f-4c46-beb9-d57ebebd5227", type=Object.class, start=319, end=333, index=0)})
    public static Object deco_test__try_3_3_0(Object _self) {
        block8: {
            block10: {
                Object object;
                block11: {
                    block9: {
                        Object object2;
                        Object[] __env__ = new Object[1];
                        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                        DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                        CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                        DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                        try {
                            try {
                                DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                try {
                                    Object[] objectArray = new Object[]{__env__[0]};
                                    CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___4", "", 3, 3, 0, 0, (Object[])objectArray);
                                    ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2);
                                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                    DynamicScope.destroyFrame();
                                    DynamicScope.destroyFrame();
                                    break block8;
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                            }
                            catch (Thrower.Throw throw_) {
                                Object object3;
                                object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                DynamicScope.destroyFrame();
                            }
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                        Object object4 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block9;
                        object4 = object4;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block9;
                        object4 = object4;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block9;
                        object = object4;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block10;
                        break block11;
                    }
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                    break block8;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) {
                    object = object;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
            }
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
        }
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_3_0")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="e9e3dc89-536f-4c46-beb9-d57ebebd5227", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___4(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-826642126)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="0e162bfe-dafb-4d4a-a61d-594b70383779", type=Object.class, start=23, end=187, index=0), @EnvVar(name="0e162bfe-dafb-4d4a-a61d-594b70383779", type=Object.class, start=384, end=398, index=0)})
    public static Object deco_test__try_3_2_3(Object _self) {
        block8: {
            block12: {
                Object object;
                block13: {
                    block10: {
                        Object object2;
                        block11: {
                            block9: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___5", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_user_error"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block8;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                Object object5 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block9;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block9;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block9;
                                object2 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block10;
                                break block11;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block8;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block10;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block12;
                        break block13;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block8;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    object = object;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_user_error")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_2_3")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="0e162bfe-dafb-4d4a-a61d-594b70383779", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___5(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-802608953)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="3510879c-5839-4522-a10b-148f478d852a", type=Object.class, start=23, end=180, index=0), @EnvVar(name="3510879c-5839-4522-a10b-148f478d852a", type=Object.class, start=360, end=374, index=0)})
    public static Object deco_test__try_3_2_2(Object _self) {
        block7: {
            block11: {
                Object object;
                block12: {
                    block9: {
                        Object object2;
                        block10: {
                            block8: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___6", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block7;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                Object object5 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block8;
                                object2 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                                break block10;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block7;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block11;
                        break block12;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block7;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_2_2")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="3510879c-5839-4522-a10b-148f478d852a", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___6(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-401542757)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="b680ec9d-6ea9-4387-9a1e-6ff6d2ae010a", type=Object.class, start=23, end=173, index=0), @EnvVar(name="b680ec9d-6ea9-4387-9a1e-6ff6d2ae010a", type=Object.class, start=336, end=350, index=0)})
    public static Object deco_test__try_3_2_1(Object _self) {
        block7: {
            block11: {
                block9: {
                    Object object;
                    block10: {
                        block8: {
                            Object object2;
                            Object[] __env__ = new Object[1];
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                            try {
                                try {
                                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                    try {
                                        Object[] objectArray = new Object[]{__env__[0]};
                                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___7", "", 3, 3, 0, 0, (Object[])objectArray);
                                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2);
                                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                        DynamicScope.destroyFrame();
                                        DynamicScope.destroyFrame();
                                        break block7;
                                    }
                                    catch (Throwable throwable) {
                                        DynamicScope.destroyFrame();
                                        throw throwable;
                                    }
                                }
                                catch (Thrower.Throw throw_) {
                                    Object object3;
                                    object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                    DynamicScope.destroyFrame();
                                }
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                            Object object4 = object2;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                            object4 = object4;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                            object4 = object4;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block8;
                            object = object4;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                            break block10;
                        }
                        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                        break block7;
                    }
                    object = object;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                    break block11;
                }
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                break block7;
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_2_1")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="b680ec9d-6ea9-4387-9a1e-6ff6d2ae010a", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___7(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=544510372)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="ac904154-e832-4456-b9a0-996a9821c517", type=Object.class, start=23, end=166, index=0), @EnvVar(name="ac904154-e832-4456-b9a0-996a9821c517", type=Object.class, start=295, end=309, index=0)})
    public static Object deco_test__try_3_2_0(Object _self) {
        block7: {
            block9: {
                Object object;
                block10: {
                    block8: {
                        Object object2;
                        Object[] __env__ = new Object[1];
                        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                        DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                        CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                        DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                        try {
                            try {
                                DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                try {
                                    Object[] objectArray = new Object[]{__env__[0]};
                                    CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___8", "", 3, 3, 0, 0, (Object[])objectArray);
                                    ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2);
                                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                    DynamicScope.destroyFrame();
                                    DynamicScope.destroyFrame();
                                    break block7;
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                            }
                            catch (Thrower.Throw throw_) {
                                Object object3;
                                object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                DynamicScope.destroyFrame();
                            }
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                        Object object4 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                        object4 = object4;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                        object4 = object4;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block8;
                        object = object4;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                        break block10;
                    }
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                    break block7;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
        }
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_2_0")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="ac904154-e832-4456-b9a0-996a9821c517", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___8(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=1653683016)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="29466a9e-fafa-4d28-a37b-cb8f7add8c07", type=Object.class, start=23, end=180, index=0), @EnvVar(name="29466a9e-fafa-4d28-a37b-cb8f7add8c07", type=Object.class, start=360, end=374, index=0)})
    public static Object deco_test__try_3_1_3(Object _self) {
        block8: {
            block12: {
                Object object;
                block13: {
                    block10: {
                        Object object2;
                        block11: {
                            block9: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___9", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_user_error"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block8;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                object2 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block9;
                                object2 = object2;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block9;
                                object2 = object2;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block9;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block10;
                                break block11;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block8;
                        }
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block12;
                        break block13;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block8;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    object = object;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_user_error")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_1_3")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="29466a9e-fafa-4d28-a37b-cb8f7add8c07", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___9(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=1307852657)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="c679abb4-99bc-40ab-aeeb-ea9f70268617", type=Object.class, start=23, end=173, index=0), @EnvVar(name="c679abb4-99bc-40ab-aeeb-ea9f70268617", type=Object.class, start=336, end=350, index=0)})
    public static Object deco_test__try_3_1_2(Object _self) {
        block7: {
            block11: {
                Object object;
                block12: {
                    block9: {
                        Object object2;
                        block10: {
                            block8: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___10", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block7;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                object2 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                                object2 = object2;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                                object2 = object2;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block8;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                                break block10;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block7;
                        }
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block11;
                        break block12;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block7;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_1_2")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="c679abb4-99bc-40ab-aeeb-ea9f70268617", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___10(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-2071191355)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="6ab58908-57df-4e1a-9799-ce4716f09f2a", type=Object.class, start=23, end=166, index=0), @EnvVar(name="6ab58908-57df-4e1a-9799-ce4716f09f2a", type=Object.class, start=312, end=326, index=0)})
    public static Object deco_test__try_3_1_1(Object _self) {
        block7: {
            block11: {
                block9: {
                    Object object;
                    block10: {
                        block8: {
                            Object object2;
                            Object[] __env__ = new Object[1];
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                            try {
                                try {
                                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                    try {
                                        Object[] objectArray = new Object[]{__env__[0]};
                                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___11", "", 3, 3, 0, 0, (Object[])objectArray);
                                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2);
                                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                        DynamicScope.destroyFrame();
                                        DynamicScope.destroyFrame();
                                        break block7;
                                    }
                                    catch (Throwable throwable) {
                                        DynamicScope.destroyFrame();
                                        throw throwable;
                                    }
                                }
                                catch (Thrower.Throw throw_) {
                                    Object object3;
                                    object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                    DynamicScope.destroyFrame();
                                }
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                            object = object2;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                            object = object;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                            object = object;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block8;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                            break block10;
                        }
                        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                        break block7;
                    }
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                    break block11;
                }
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                break block7;
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_1_1")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="6ab58908-57df-4e1a-9799-ce4716f09f2a", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___11(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-1573531058)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="b0d8f47e-f8c4-4a82-b098-c9771bce6782", type=Object.class, start=23, end=159, index=0), @EnvVar(name="b0d8f47e-f8c4-4a82-b098-c9771bce6782", type=Object.class, start=271, end=285, index=0)})
    public static Object deco_test__try_3_1_0(Object _self) {
        block7: {
            block9: {
                block8: {
                    Object object;
                    Object[] __env__ = new Object[1];
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                    EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                    DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                    CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                    DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                    try {
                        try {
                            DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                            try {
                                Object[] objectArray = new Object[]{__env__[0]};
                                CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___12", "", 3, 3, 0, 0, (Object[])objectArray);
                                ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2);
                                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                DynamicScope.destroyFrame();
                                DynamicScope.destroyFrame();
                                break block7;
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                        }
                        catch (Thrower.Throw throw_) {
                            Object object2;
                            object = object2 = Thrower.checkTag(throw_, callSite).peek();
                            DynamicScope.destroyFrame();
                        }
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                    Object object3 = object;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                    object3 = object3;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                    object3 = object3;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "ds_file_unchanged")))) break block8;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                    break block9;
                }
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                break block7;
            }
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
        }
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_3_1_0")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="b0d8f47e-f8c4-4a82-b098-c9771bce6782", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___12(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-1546185010)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="0fdd56f1-7b84-4fd1-b842-d8e59d5d80cc", type=Object.class, start=23, end=187, index=0), @EnvVar(name="0fdd56f1-7b84-4fd1-b842-d8e59d5d80cc", type=Object.class, start=384, end=398, index=0)})
    public static Object deco_test__try_2_3_3(Object _self) {
        block8: {
            block12: {
                Object object;
                block13: {
                    block10: {
                        Object object2;
                        block11: {
                            block9: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___13", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_user_error"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block8;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                Object object5 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block9;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block9;
                                object2 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block10;
                                break block11;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block8;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block10;
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) break block10;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block12;
                        break block13;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block8;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    object = object;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_user_error")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_3_3")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="0fdd56f1-7b84-4fd1-b842-d8e59d5d80cc", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___13(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-1839590647)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="c7da1007-2b9a-49f6-b8ab-23f677f15151", type=Object.class, start=23, end=180, index=0), @EnvVar(name="c7da1007-2b9a-49f6-b8ab-23f677f15151", type=Object.class, start=360, end=374, index=0)})
    public static Object deco_test__try_2_3_2(Object _self) {
        block7: {
            block11: {
                Object object;
                block12: {
                    block9: {
                        Object object2;
                        block10: {
                            block8: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___14", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block7;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                Object object5 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                                object2 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                                break block10;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block7;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) break block9;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block11;
                        break block12;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block7;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_3_2")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="c7da1007-2b9a-49f6-b8ab-23f677f15151", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___14(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=1029969211)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="1a3971b6-18cd-4aa7-af18-f31ee4c3b53f", type=Object.class, start=23, end=173, index=0), @EnvVar(name="1a3971b6-18cd-4aa7-af18-f31ee4c3b53f", type=Object.class, start=336, end=350, index=0)})
    public static Object deco_test__try_2_3_1(Object _self) {
        block7: {
            block11: {
                block9: {
                    Object object;
                    block10: {
                        block8: {
                            Object object2;
                            Object[] __env__ = new Object[1];
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                            try {
                                try {
                                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                    try {
                                        Object[] objectArray = new Object[]{__env__[0]};
                                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___15", "", 3, 3, 0, 0, (Object[])objectArray);
                                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2);
                                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                        DynamicScope.destroyFrame();
                                        DynamicScope.destroyFrame();
                                        break block7;
                                    }
                                    catch (Throwable throwable) {
                                        DynamicScope.destroyFrame();
                                        throw throwable;
                                    }
                                }
                                catch (Thrower.Throw throw_) {
                                    Object object3;
                                    object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                    DynamicScope.destroyFrame();
                                }
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                            Object object4 = object2;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                            object4 = object4;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                            object = object4;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                            break block10;
                        }
                        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                        break block7;
                    }
                    object = object;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                    object = object;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) break block9;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                    break block11;
                }
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                break block7;
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_3_1")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="1a3971b6-18cd-4aa7-af18-f31ee4c3b53f", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___15(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-1214689886)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="2663a4fd-1d3b-4fbc-9774-673e251667b1", type=Object.class, start=23, end=166, index=0), @EnvVar(name="2663a4fd-1d3b-4fbc-9774-673e251667b1", type=Object.class, start=295, end=309, index=0)})
    public static Object deco_test__try_2_3_0(Object _self) {
        block8: {
            block10: {
                Object object;
                block11: {
                    block9: {
                        Object object2;
                        Object[] __env__ = new Object[1];
                        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                        DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                        CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                        DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                        try {
                            try {
                                DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                try {
                                    Object[] objectArray = new Object[]{__env__[0]};
                                    CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___16", "", 3, 3, 0, 0, (Object[])objectArray);
                                    ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2);
                                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                    DynamicScope.destroyFrame();
                                    DynamicScope.destroyFrame();
                                    break block8;
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                            }
                            catch (Thrower.Throw throw_) {
                                Object object3;
                                object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                DynamicScope.destroyFrame();
                            }
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                        Object object4 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block9;
                        object4 = object4;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block9;
                        object = object4;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block10;
                        break block11;
                    }
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                    break block8;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) {
                    object = object;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
            }
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
        }
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_3_0")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="2663a4fd-1d3b-4fbc-9774-673e251667b1", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___16(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=858919311)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="99567485-76e4-49bf-8fb3-8021421d5d98", type=Object.class, start=23, end=180, index=0), @EnvVar(name="99567485-76e4-49bf-8fb3-8021421d5d98", type=Object.class, start=360, end=374, index=0)})
    public static Object deco_test__try_2_2_3(Object _self) {
        block8: {
            block12: {
                Object object;
                block13: {
                    block10: {
                        Object object2;
                        block11: {
                            block9: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___17", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_user_error"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block8;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                Object object5 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block9;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block9;
                                object2 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block10;
                                break block11;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block8;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block10;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block12;
                        break block13;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block8;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    object = object;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_user_error")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_2_3")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="99567485-76e4-49bf-8fb3-8021421d5d98", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___17(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=1084118824)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="76ec724e-4fe8-4507-8f6a-113ff91bf7e8", type=Object.class, start=23, end=173, index=0), @EnvVar(name="76ec724e-4fe8-4507-8f6a-113ff91bf7e8", type=Object.class, start=336, end=350, index=0)})
    public static Object deco_test__try_2_2_2(Object _self) {
        block7: {
            block11: {
                Object object;
                block12: {
                    block9: {
                        Object object2;
                        block10: {
                            block8: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___18", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block7;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                Object object5 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                                object5 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                                object2 = object5;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object5, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                                break block10;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block7;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block11;
                        break block12;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block7;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_2_2")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="76ec724e-4fe8-4507-8f6a-113ff91bf7e8", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___18(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=638720986)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="7ba2235a-0035-4e53-bf24-6367e56645a6", type=Object.class, start=23, end=166, index=0), @EnvVar(name="7ba2235a-0035-4e53-bf24-6367e56645a6", type=Object.class, start=312, end=326, index=0)})
    public static Object deco_test__try_2_2_1(Object _self) {
        block7: {
            block11: {
                block9: {
                    Object object;
                    block10: {
                        block8: {
                            Object object2;
                            Object[] __env__ = new Object[1];
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                            try {
                                try {
                                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                    try {
                                        Object[] objectArray = new Object[]{__env__[0]};
                                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___19", "", 3, 3, 0, 0, (Object[])objectArray);
                                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2);
                                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                        DynamicScope.destroyFrame();
                                        DynamicScope.destroyFrame();
                                        break block7;
                                    }
                                    catch (Throwable throwable) {
                                        DynamicScope.destroyFrame();
                                        throw throwable;
                                    }
                                }
                                catch (Thrower.Throw throw_) {
                                    Object object3;
                                    object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                    DynamicScope.destroyFrame();
                                }
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                            Object object4 = object2;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                            object4 = object4;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                            object = object4;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                            break block10;
                        }
                        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                        break block7;
                    }
                    object = object;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                    break block11;
                }
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                break block7;
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_2_1")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="7ba2235a-0035-4e53-bf24-6367e56645a6", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___19(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=1273732161)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="c08b1cc5-cb81-4db3-a80e-00c488319ef7", type=Object.class, start=23, end=159, index=0), @EnvVar(name="c08b1cc5-cb81-4db3-a80e-00c488319ef7", type=Object.class, start=271, end=285, index=0)})
    public static Object deco_test__try_2_2_0(Object _self) {
        block7: {
            block9: {
                Object object;
                block10: {
                    block8: {
                        Object object2;
                        Object[] __env__ = new Object[1];
                        ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                        EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                        EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                        DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                        CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                        DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                        try {
                            try {
                                DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                try {
                                    Object[] objectArray = new Object[]{__env__[0]};
                                    CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___20", "", 3, 3, 0, 0, (Object[])objectArray);
                                    ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2);
                                    ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                    DynamicScope.destroyFrame();
                                    DynamicScope.destroyFrame();
                                    break block7;
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                            }
                            catch (Thrower.Throw throw_) {
                                Object object3;
                                object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                DynamicScope.destroyFrame();
                            }
                        }
                        catch (Throwable throwable) {
                            DynamicScope.destroyFrame();
                            throw throwable;
                        }
                        Object object4 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                        object4 = object4;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                        object = object4;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object4, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                        break block10;
                    }
                    ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                    break block7;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
        }
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_2_0")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="c08b1cc5-cb81-4db3-a80e-00c488319ef7", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___20(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=1899634823)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="e6bec5ba-d5c9-449b-b31a-8c4ab5306c76", type=Object.class, start=23, end=173, index=0), @EnvVar(name="e6bec5ba-d5c9-449b-b31a-8c4ab5306c76", type=Object.class, start=336, end=350, index=0)})
    public static Object deco_test__try_2_1_3(Object _self) {
        block8: {
            block12: {
                Object object;
                block13: {
                    block10: {
                        Object object2;
                        block11: {
                            block9: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___21", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_user_error"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block8;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                object2 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block9;
                                object2 = object2;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block9;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block10;
                                break block11;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block8;
                        }
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block12;
                        break block13;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block8;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    object = object;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_user_error")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_1_3")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="e6bec5ba-d5c9-449b-b31a-8c4ab5306c76", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___21(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=508375728)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="db37ecd5-b06b-4d0f-9821-12deb23d6ef0", type=Object.class, start=23, end=166, index=0), @EnvVar(name="db37ecd5-b06b-4d0f-9821-12deb23d6ef0", type=Object.class, start=312, end=326, index=0)})
    public static Object deco_test__try_2_1_2(Object _self) {
        block7: {
            block11: {
                Object object;
                block12: {
                    block9: {
                        Object object2;
                        block10: {
                            block8: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___22", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block7;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                object2 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                                object2 = object2;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                                break block10;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block7;
                        }
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block11;
                        break block12;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block7;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_1_2")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="db37ecd5-b06b-4d0f-9821-12deb23d6ef0", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___22(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-1836915486)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="8d73cbb2-4f7c-4b18-ac06-ec8d0c2f7e83", type=Object.class, start=23, end=159, index=0), @EnvVar(name="8d73cbb2-4f7c-4b18-ac06-ec8d0c2f7e83", type=Object.class, start=288, end=302, index=0)})
    public static Object deco_test__try_2_1_1(Object _self) {
        block7: {
            block11: {
                block9: {
                    Object object;
                    block10: {
                        block8: {
                            Object object2;
                            Object[] __env__ = new Object[1];
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                            try {
                                try {
                                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                    try {
                                        Object[] objectArray = new Object[]{__env__[0]};
                                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___23", "", 3, 3, 0, 0, (Object[])objectArray);
                                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2);
                                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                        DynamicScope.destroyFrame();
                                        DynamicScope.destroyFrame();
                                        break block7;
                                    }
                                    catch (Throwable throwable) {
                                        DynamicScope.destroyFrame();
                                        throw throwable;
                                    }
                                }
                                catch (Thrower.Throw throw_) {
                                    Object object3;
                                    object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                    DynamicScope.destroyFrame();
                                }
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                            object = object2;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                            object = object;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                            break block10;
                        }
                        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                        break block7;
                    }
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                    break block11;
                }
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                break block7;
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_1_1")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="8d73cbb2-4f7c-4b18-ac06-ec8d0c2f7e83", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___23(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-2059540791)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="1e020945-e7da-4f81-90d2-b6fe97a288e8", type=Object.class, start=23, end=152, index=0), @EnvVar(name="1e020945-e7da-4f81-90d2-b6fe97a288e8", type=Object.class, start=247, end=261, index=0)})
    public static Object deco_test__try_2_1_0(Object _self) {
        block7: {
            block9: {
                block8: {
                    Object object;
                    Object[] __env__ = new Object[1];
                    ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                    EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                    EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                    DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                    CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                    DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                    try {
                        try {
                            DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                            try {
                                Object[] objectArray = new Object[]{__env__[0]};
                                CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___24", "", 3, 3, 0, 0, (Object[])objectArray);
                                ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2);
                                ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                DynamicScope.destroyFrame();
                                DynamicScope.destroyFrame();
                                break block7;
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                        }
                        catch (Thrower.Throw throw_) {
                            Object object2;
                            object = object2 = Thrower.checkTag(throw_, callSite).peek();
                            DynamicScope.destroyFrame();
                        }
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                    Object object3 = object;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                    object3 = object3;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) break block8;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                    break block9;
                }
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                break block7;
            }
            ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
        }
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_1_0")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="1e020945-e7da-4f81-90d2-b6fe97a288e8", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___24(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=1631951184)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="0226fe7b-fc1d-4080-b66d-20a9d86b6b45", type=Object.class, start=23, end=145, index=0), @EnvVar(name="0226fe7b-fc1d-4080-b66d-20a9d86b6b45", type=Object.class, start=206, end=220, index=0)})
    public static Object deco_test__try_2_0_0(Object _self) {
        block9: {
            Object object;
            Object[] __env__ = new Object[1];
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___25", "", 3, 3, 0, 0, (Object[])objectArray);
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "information"), callSite2);
                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        break block9;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            Object object3 = object;
            if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) {
                object3 = object3;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "information")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
        }
        ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_2_0_0")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="0226fe7b-fc1d-4080-b66d-20a9d86b6b45", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___25(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=1747201997)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="ea953d6c-8a6b-4af6-86a0-67b08331ef0f", type=Object.class, start=23, end=180, index=0), @EnvVar(name="ea953d6c-8a6b-4af6-86a0-67b08331ef0f", type=Object.class, start=360, end=374, index=0)})
    public static Object deco_test__try_1_3_3(Object _self) {
        block8: {
            block12: {
                Object object;
                block13: {
                    block10: {
                        Object object2;
                        block11: {
                            block9: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___26", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_user_error"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block8;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block9;
                                object2 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block10;
                                break block11;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block8;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block10;
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) break block10;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block12;
                        break block13;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block8;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    object = object;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_user_error")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_3_3")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="ea953d6c-8a6b-4af6-86a0-67b08331ef0f", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___26(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=507603148)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="bb50999a-1cc5-492a-8b07-6311d5631f95", type=Object.class, start=23, end=173, index=0), @EnvVar(name="bb50999a-1cc5-492a-8b07-6311d5631f95", type=Object.class, start=336, end=350, index=0)})
    public static Object deco_test__try_1_3_2(Object _self) {
        block7: {
            block11: {
                Object object;
                block12: {
                    block9: {
                        Object object2;
                        block10: {
                            block8: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___27", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block7;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                                object2 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                                break block10;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block7;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) break block9;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block11;
                        break block12;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block7;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_3_2")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="bb50999a-1cc5-492a-8b07-6311d5631f95", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___27(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=1270577696)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="909b6d31-b093-413e-a1f0-2e9018c9f109", type=Object.class, start=23, end=166, index=0), @EnvVar(name="909b6d31-b093-413e-a1f0-2e9018c9f109", type=Object.class, start=312, end=326, index=0)})
    public static Object deco_test__try_1_3_1(Object _self) {
        block7: {
            block11: {
                block9: {
                    Object object;
                    block10: {
                        block8: {
                            Object object2;
                            Object[] __env__ = new Object[1];
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                            try {
                                try {
                                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                    try {
                                        Object[] objectArray = new Object[]{__env__[0]};
                                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___28", "", 3, 3, 0, 0, (Object[])objectArray);
                                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2);
                                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                        DynamicScope.destroyFrame();
                                        DynamicScope.destroyFrame();
                                        break block7;
                                    }
                                    catch (Throwable throwable) {
                                        DynamicScope.destroyFrame();
                                        throw throwable;
                                    }
                                }
                                catch (Thrower.Throw throw_) {
                                    Object object3;
                                    object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                    DynamicScope.destroyFrame();
                                }
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                            object = object2;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                            break block10;
                        }
                        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                        break block7;
                    }
                    object = object;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                    object = object;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) break block9;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                    break block11;
                }
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                break block7;
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_3_1")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="909b6d31-b093-413e-a1f0-2e9018c9f109", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___28(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=-295413975)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="275aa5a1-8756-4c93-891e-a09f2ef240ef", type=Object.class, start=23, end=159, index=0), @EnvVar(name="275aa5a1-8756-4c93-891e-a09f2ef240ef", type=Object.class, start=271, end=285, index=0)})
    public static Object deco_test__try_1_3_0(Object _self) {
        block12: {
            Object object;
            Object[] __env__ = new Object[1];
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___29", "", 3, 3, 0, 0, (Object[])objectArray);
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_too_large"), callSite2);
                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        break block12;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
            } else {
                Object object3 = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) {
                    object3 = object3;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) {
                        object3 = object3;
                        if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_too_large")))) {
                            throw new Error("Try block caught unexpected error.");
                        }
                    }
                }
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
            }
        }
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_3_0")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="275aa5a1-8756-4c93-891e-a09f2ef240ef", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___29(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=-1623137108)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="a81825b3-01b9-4b3f-81ef-c91fc32d2df0", type=Object.class, start=23, end=173, index=0), @EnvVar(name="a81825b3-01b9-4b3f-81ef-c91fc32d2df0", type=Object.class, start=336, end=350, index=0)})
    public static Object deco_test__try_1_2_3(Object _self) {
        block8: {
            block12: {
                Object object;
                block13: {
                    block10: {
                        Object object2;
                        block11: {
                            block9: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___30", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_user_error"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block8;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block9;
                                object2 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block10;
                                break block11;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block8;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block10;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block12;
                        break block13;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block8;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    object = object;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_user_error")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_2_3")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="a81825b3-01b9-4b3f-81ef-c91fc32d2df0", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___30(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=1667105037)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="ab282f06-a73b-4ec9-a57c-4bda4a17c4bd", type=Object.class, start=23, end=166, index=0), @EnvVar(name="ab282f06-a73b-4ec9-a57c-4bda4a17c4bd", type=Object.class, start=312, end=326, index=0)})
    public static Object deco_test__try_1_2_2(Object _self) {
        block7: {
            block11: {
                Object object;
                block12: {
                    block9: {
                        Object object2;
                        block10: {
                            block8: {
                                Object object3;
                                Object[] __env__ = new Object[1];
                                ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                                EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                                EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                                CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                                DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                                try {
                                    try {
                                        DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                        try {
                                            Object[] objectArray = new Object[]{__env__[0]};
                                            CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___31", "", 3, 3, 0, 0, (Object[])objectArray);
                                            ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2);
                                            ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                            DynamicScope.destroyFrame();
                                            DynamicScope.destroyFrame();
                                            break block7;
                                        }
                                        catch (Throwable throwable) {
                                            DynamicScope.destroyFrame();
                                            throw throwable;
                                        }
                                    }
                                    catch (Thrower.Throw throw_) {
                                        Object object4;
                                        object3 = object4 = Thrower.checkTag(throw_, callSite).peek();
                                        DynamicScope.destroyFrame();
                                    }
                                }
                                catch (Throwable throwable) {
                                    DynamicScope.destroyFrame();
                                    throw throwable;
                                }
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                                object2 = object3;
                                if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                                break block10;
                            }
                            ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                            break block7;
                        }
                        object2 = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                        object = object2;
                        if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) break block11;
                        break block12;
                    }
                    ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                    break block7;
                }
                object = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                    throw new Error("Try block caught unexpected error.");
                }
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_2_2")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="ab282f06-a73b-4ec9-a57c-4bda4a17c4bd", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___31(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    /*
     * Enabled aggressive block sorting
     * Enabled unnecessary exception pruning
     * Enabled aggressive exception aggregation
     */
    @SourceHash(value=999325665)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="db73a714-4198-4c3d-a0cd-6d2e93bda280", type=Object.class, start=23, end=159, index=0), @EnvVar(name="db73a714-4198-4c3d-a0cd-6d2e93bda280", type=Object.class, start=288, end=302, index=0)})
    public static Object deco_test__try_1_2_1(Object _self) {
        block7: {
            block11: {
                block9: {
                    Object object;
                    block10: {
                        block8: {
                            Object object2;
                            Object[] __env__ = new Object[1];
                            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
                            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
                            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
                            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
                            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
                            try {
                                try {
                                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                                    try {
                                        Object[] objectArray = new Object[]{__env__[0]};
                                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___32", "", 3, 3, 0, 0, (Object[])objectArray);
                                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2);
                                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                                        DynamicScope.destroyFrame();
                                        DynamicScope.destroyFrame();
                                        break block7;
                                    }
                                    catch (Throwable throwable) {
                                        DynamicScope.destroyFrame();
                                        throw throwable;
                                    }
                                }
                                catch (Thrower.Throw throw_) {
                                    Object object3;
                                    object2 = object3 = Thrower.checkTag(throw_, callSite).peek();
                                    DynamicScope.destroyFrame();
                                }
                            }
                            catch (Throwable throwable) {
                                DynamicScope.destroyFrame();
                                throw throwable;
                            }
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) break block8;
                            object = object2;
                            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object2, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) break block9;
                            break block10;
                        }
                        ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
                        break block7;
                    }
                    object = object;
                    if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) break block9;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                    break block11;
                }
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
                break block7;
            }
            ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_2_1")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="db73a714-4198-4c3d-a0cd-6d2e93bda280", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___32(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=-915852054)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="9f43c9e7-6d66-4b30-939f-a8f109916165", type=Object.class, start=23, end=152, index=0), @EnvVar(name="9f43c9e7-6d66-4b30-939f-a8f109916165", type=Object.class, start=247, end=261, index=0)})
    public static Object deco_test__try_1_2_0(Object _self) {
        block11: {
            Object object;
            Object[] __env__ = new Object[1];
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___33", "", 3, 3, 0, 0, (Object[])objectArray);
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks"), callSite2);
                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        break block11;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
            } else {
                Object object3 = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) {
                    object3 = object3;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "bad_user_bookmarks")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
            }
        }
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_2_0")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="9f43c9e7-6d66-4b30-939f-a8f109916165", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___33(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=1614308290)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="1f574188-2027-4253-bdd8-5a6e7f3fbbaf", type=Object.class, start=23, end=166, index=0), @EnvVar(name="1f574188-2027-4253-bdd8-5a6e7f3fbbaf", type=Object.class, start=312, end=326, index=0)})
    public static Object deco_test__try_1_1_3(Object _self) {
        block14: {
            Object object;
            Object[] __env__ = new Object[1];
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___34", "", 3, 3, 0, 0, (Object[])objectArray);
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "document_user_error"), callSite2);
                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        break block14;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
            } else if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) {
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
            } else {
                Object object3 = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) {
                    object3 = object3;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                        object3 = object3;
                        if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "document_user_error")))) {
                            throw new Error("Try block caught unexpected error.");
                        }
                    }
                }
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
            }
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_1_3")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="1f574188-2027-4253-bdd8-5a6e7f3fbbaf", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___34(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=1844853431)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="e6809667-5aff-44d5-861d-5c55a87b5397", type=Object.class, start=23, end=159, index=0), @EnvVar(name="e6809667-5aff-44d5-861d-5c55a87b5397", type=Object.class, start=288, end=302, index=0)})
    public static Object deco_test__try_1_1_2(Object _self) {
        block13: {
            Object object;
            Object[] __env__ = new Object[1];
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___35", "", 3, 3, 0, 0, (Object[])objectArray);
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected"), callSite2);
                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        break block13;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
            } else if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) {
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
            } else {
                Object object3 = object;
                if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) {
                    object3 = object3;
                    if (!MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object3, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_not_selected")))) {
                        throw new Error("Try block caught unexpected error.");
                    }
                }
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
            }
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_1_2")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="e6809667-5aff-44d5-861d-5c55a87b5397", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___35(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=-203697653)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="f0d03a61-ebbd-4eb6-bca1-1c375cd0c4c0", type=Object.class, start=23, end=152, index=0), @EnvVar(name="f0d03a61-ebbd-4eb6-bca1-1c375cd0c4c0", type=Object.class, start=264, end=278, index=0)})
    public static Object deco_test__try_1_1_1(Object _self) {
        block12: {
            Object object;
            Object[] __env__ = new Object[1];
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___36", "", 3, 3, 0, 0, (Object[])objectArray);
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path"), callSite2);
                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        break block12;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
            } else if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) {
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
            } else if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "directory_invalid_path")))) {
                ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error2()", (Object)_self));
            } else {
                throw new Error("Try block caught unexpected error.");
            }
        }
        ResultTuple cfr_ignored_5 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_1_1")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="f0d03a61-ebbd-4eb6-bca1-1c375cd0c4c0", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___36(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }

    @SourceHash(value=2108496020)
    @Debugger(value="MagikDebug")
    @CodeType(value="Method")
    @EnvVars(value={@EnvVar(name="12666058-a542-4a92-b6ab-f8de6486350f", type=Object.class, start=23, end=145, index=0), @EnvVar(name="12666058-a542-4a92-b6ab-f8de6486350f", type=Object.class, start=223, end=237, index=0)})
    public static Object deco_test__try_1_1_0(Object _self) {
        block10: {
            Object object;
            Object[] __env__ = new Object[1];
            ResultTuple cfr_ignored_0 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("before()", (Object)_self));
            EnvAccessor.bootstrapReseter("resetEnv", null, (Object[])__env__, (int)0);
            EnvAccessor.bootstrapStorer("storeEnv", (Object)new Object(), (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapBinder("__catch_tags_dynamic__", "sw", 1);
            CallSite callSite = EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0);
            DynamicAccessor.bootstrapStorer("__catch_tags_dynamic__", "sw", (Object)callSite);
            try {
                try {
                    DynamicAccessor.bootstrapBinder("!sys!condition_handler_cluster!", "sw", 1);
                    try {
                        Object[] objectArray = new Object[]{__env__[0]};
                        CallSite callSite2 = ConstantBuilder.procBootstrap("proc", (Class<?>)deco_test_4424.class, "proc___37", "", 3, 3, 0, 0, (Object[])objectArray);
                        ProcInvoker.bootstrap("()", GlobalAccessor.bootstrapFetcher2("fetchGlobal2", "sw", "sys!install_handlers"), ConstantBuilder.symbolBootstrap("symbol", "error"), callSite2, ConstantBuilder.symbolBootstrap("symbol", "warning"), callSite2);
                        ResultTuple cfr_ignored_1 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("try()", (Object)_self));
                        DynamicScope.destroyFrame();
                        DynamicScope.destroyFrame();
                        break block10;
                    }
                    catch (Throwable throwable) {
                        DynamicScope.destroyFrame();
                        throw throwable;
                    }
                }
                catch (Thrower.Throw throw_) {
                    Object object2;
                    object = object2 = Thrower.checkTag(throw_, callSite).peek();
                    DynamicScope.destroyFrame();
                }
            }
            catch (Throwable throwable) {
                DynamicScope.destroyFrame();
                throw throwable;
            }
            if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "error")))) {
                ResultTuple cfr_ignored_2 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error()", (Object)_self));
            } else if (MagikObjectUtils.should_be_boolean(Invoker.bootstrapPrivate("taxonomy_includes?()", (Object)object, (Object)ConstantBuilder.symbolBootstrap("symbol", "warning")))) {
                ResultTuple cfr_ignored_3 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("error1()", (Object)_self));
            } else {
                throw new Error("Try block caught unexpected error.");
            }
        }
        ResultTuple cfr_ignored_4 = (ResultTuple)((Object)Invoker.tupleBootstrapPrivate("after()", (Object)_self));
        return ResultTuple.EMPTY_TUPLE;
    }

    @Parent(method="deco_test__try_1_1_0")
    @SourceHash(value=91382809)
    @Debugger(value="MagikDebug")
    @CodeType(value="Proc")
    @EnvVars(value={@EnvVar(name="12666058-a542-4a92-b6ab-f8de6486350f", type=Object.class, start=0, end=20, index=0)})
    public static Object proc___37(Object[] __env__, Object _self, Object cond) {
        InterruptInfrastructure.checkAndProcessInterrupts();
        throw Thrower.make(EnvAccessor.bootstrapFetcher("fetchEnv", (Object[])__env__, (int)0), (ResultTuple)((Object)TupleBuilder.bootstrap("tb", cond)));
    }
}

/*
 * Decompiled with CFR 0.151-SNAPSHOT (${git.commit.id.abbrev}).
 */
package magik.jar_decompiler_lp.decompile_target;

import com.gesmallworld.magik.commons.runtime.annotations.CodeType;
import com.gesmallworld.magik.commons.runtime.annotations.Debugger;
import com.gesmallworld.magik.language.invokers.ConstantBuilder;
import com.gesmallworld.magik.language.invokers.DynamicAccessor;
import com.gesmallworld.magik.language.invokers.GlobalAccessor;
import com.gesmallworld.magik.language.invokers.ProcInvoker;
import com.gesmallworld.magik.language.invokers.TupleBuilder;
import com.gesmallworld.magik.language.invokers.VectorBuilder;
import com.gesmallworld.magik.language.utils.ExecutableMagik;
import com.gesmallworld.magik.language.utils.MagikObjectUtils;
import magik.jar_decompiler_lp.decompile_target.deco_test_4424;

@Debugger(value="MagikDebug")
@CodeType(value="Primary")
public class deco_test_4423
implements ExecutableMagik {
    @Debugger(value="MagikDebug")
    @CodeType(value="EmptyConstructor")
    public deco_test_4423() {
    }

    @Override
    @Debugger(value="MagikDebug")
    @CodeType(value="TopLevel")
    public Object execute() {
        MagikObjectUtils.createMethod("deco_test", "try_3_3_3()", deco_test_4424.class, "deco_test__try_3_3_3", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_3_3_2()", deco_test_4424.class, "deco_test__try_3_3_2", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_3_3_1()", deco_test_4424.class, "deco_test__try_3_3_1", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_3_3_0()", deco_test_4424.class, "deco_test__try_3_3_0", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_3_2_3()", deco_test_4424.class, "deco_test__try_3_2_3", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_3_2_2()", deco_test_4424.class, "deco_test__try_3_2_2", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_3_2_1()", deco_test_4424.class, "deco_test__try_3_2_1", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_3_2_0()", deco_test_4424.class, "deco_test__try_3_2_0", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_3_1_3()", deco_test_4424.class, "deco_test__try_3_1_3", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_3_1_2()", deco_test_4424.class, "deco_test__try_3_1_2", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_3_1_1()", deco_test_4424.class, "deco_test__try_3_1_1", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_3_1_0()", deco_test_4424.class, "deco_test__try_3_1_0", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_3_3()", deco_test_4424.class, "deco_test__try_2_3_3", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_3_2()", deco_test_4424.class, "deco_test__try_2_3_2", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_3_1()", deco_test_4424.class, "deco_test__try_2_3_1", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_3_0()", deco_test_4424.class, "deco_test__try_2_3_0", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_2_3()", deco_test_4424.class, "deco_test__try_2_2_3", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_2_2()", deco_test_4424.class, "deco_test__try_2_2_2", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_2_1()", deco_test_4424.class, "deco_test__try_2_2_1", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_2_0()", deco_test_4424.class, "deco_test__try_2_2_0", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_1_3()", deco_test_4424.class, "deco_test__try_2_1_3", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_1_2()", deco_test_4424.class, "deco_test__try_2_1_2", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_1_1()", deco_test_4424.class, "deco_test__try_2_1_1", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_1_0()", deco_test_4424.class, "deco_test__try_2_1_0", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_2_0_0()", deco_test_4424.class, "deco_test__try_2_0_0", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_1_3_3()", deco_test_4424.class, "deco_test__try_1_3_3", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_1_3_2()", deco_test_4424.class, "deco_test__try_1_3_2", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_1_3_1()", deco_test_4424.class, "deco_test__try_1_3_1", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_1_3_0()", deco_test_4424.class, "deco_test__try_1_3_0", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_1_2_3()", deco_test_4424.class, "deco_test__try_1_2_3", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_1_2_2()", deco_test_4424.class, "deco_test__try_1_2_2", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_1_2_1()", deco_test_4424.class, "deco_test__try_1_2_1", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_1_2_0()", deco_test_4424.class, "deco_test__try_1_2_0", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_1_1_3()", deco_test_4424.class, "deco_test__try_1_1_3", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_1_1_2()", deco_test_4424.class, "deco_test__try_1_1_2", 1, 1);
        MagikObjectUtils.createMethod("deco_test", "try_1_1_1()", deco_test_4424.class, "deco_test__try_1_1_1", 1, 1);
        return TupleBuilder.bootstrap("tb", MagikObjectUtils.createMethod("deco_test", "try_1_1_0()", deco_test_4424.class, "deco_test__try_1_1_0", 1, 1));
    }

    @Override
    public void preload() {
    }
}
###########
_method deco_test.try_3_3_3() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when bad_user_bookmarks, document_too_large, warning
        _self.error1()
    _when directory_not_selected, document_user_error, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_3_3_2() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when bad_user_bookmarks, document_too_large, warning
        _self.error1()
    _when directory_not_selected, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_3_3_1() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when bad_user_bookmarks, document_too_large, warning
        _self.error1()
    _when directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_3_3_0() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when bad_user_bookmarks, document_too_large, warning
        _self.error1()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_3_2_3() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when bad_user_bookmarks, warning
        _self.error1()
    _when directory_not_selected, document_user_error, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_3_2_2() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when bad_user_bookmarks, warning
        _self.error1()
    _when directory_not_selected, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_3_2_1() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when bad_user_bookmarks, warning
        _self.error1()
    _when directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_3_2_0() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when bad_user_bookmarks, warning
        _self.error1()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_3_1_3() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when warning
        _self.error1()
    _when directory_not_selected, document_user_error, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_3_1_2() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when warning
        _self.error1()
    _when directory_not_selected, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_3_1_1() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when warning
        _self.error1()
    _when directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_3_1_0() 
    _self.before()
    _try 
        _self.try()
    _when error, information, ds_file_unchanged
        _self.error()
    _when warning
        _self.error1()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_3_3() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when bad_user_bookmarks, document_too_large, warning
        _self.error1()
    _when directory_not_selected, document_user_error, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_3_2() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when bad_user_bookmarks, document_too_large, warning
        _self.error1()
    _when directory_not_selected, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_3_1() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when bad_user_bookmarks, document_too_large, warning
        _self.error1()
    _when directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_3_0() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when bad_user_bookmarks, document_too_large, warning
        _self.error1()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_2_3() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when bad_user_bookmarks, warning
        _self.error1()
    _when directory_not_selected, document_user_error, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_2_2() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when bad_user_bookmarks, warning
        _self.error1()
    _when directory_not_selected, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_2_1() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when bad_user_bookmarks, warning
        _self.error1()
    _when directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_2_0() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when bad_user_bookmarks, warning
        _self.error1()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_1_3() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when warning
        _self.error1()
    _when directory_not_selected, document_user_error, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_1_2() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when warning
        _self.error1()
    _when directory_not_selected, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_1_1() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when warning
        _self.error1()
    _when directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_1_0() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _when warning
        _self.error1()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_2_0_0() 
    _self.before()
    _try 
        _self.try()
    _when error, information
        _self.error()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_3_3() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when bad_user_bookmarks, document_too_large, warning
        _self.error1()
    _when directory_not_selected, document_user_error, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_3_2() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when bad_user_bookmarks, document_too_large, warning
        _self.error1()
    _when directory_not_selected, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_3_1() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when bad_user_bookmarks, document_too_large, warning
        _self.error1()
    _when directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_3_0() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when warning, bad_user_bookmarks, document_too_large
        _self.error1()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_2_3() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when bad_user_bookmarks, warning
        _self.error1()
    _when directory_not_selected, document_user_error, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_2_2() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when bad_user_bookmarks, warning
        _self.error1()
    _when directory_not_selected, directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_2_1() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when bad_user_bookmarks, warning
        _self.error1()
    _when directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_2_0() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when warning, bad_user_bookmarks
        _self.error1()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_1_3() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when warning
        _self.error1()
    _when directory_invalid_path, directory_not_selected, document_user_error
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_1_2() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when warning
        _self.error1()
    _when directory_invalid_path, directory_not_selected
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_1_1() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when warning
        _self.error1()
    _when directory_invalid_path
        _self.error2()
    _endtry
    _self.after()
    _return _unset
_endmethod
$

_method deco_test.try_1_1_0() 
    _self.before()
    _try 
        _self.try()
    _when error
        _self.error()
    _when warning
        _self.error1()
    _endtry
    _self.after()
    _return _unset
_endmethod
$
###########
