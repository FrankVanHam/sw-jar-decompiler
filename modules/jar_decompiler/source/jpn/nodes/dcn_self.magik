_package deco
$

#remex(:dcn_self)
$

_pragma(classify_level=restricted, topic={decompiler})
## Node for _self
def_slotted_exemplar(:dcn_self, {}, :dcn_base)
$

_pragma(classify_level=restricted, topic={decompiler})
_method dcn_self.new()
	_return _clone.init()
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_private _method dcn_self.init()
	_return _self
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_method dcn_self.decode_on(p_stream)
	p_stream.write( "_self" )
_endmethod
$
