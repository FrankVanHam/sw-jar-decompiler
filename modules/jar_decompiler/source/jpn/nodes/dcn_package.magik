_package deco
$

#remex(:dcn_package)
$

_pragma(classify_level=restricted, topic={decompiler})
## Node for the package statement
def_slotted_exemplar(:dcn_package,
	{
		{:name, _unset}
	},
	:dcn_base)
$

_pragma(classify_level=restricted, topic={decompiler})
_method dcn_package.new( name )
	_return _clone.init(name)
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_private _method dcn_package.init(name)
	.name << name
	_return _self
_endmethod
$

_pragma(classify_level=restricted, topic={decompiler})
_method dcn_package.decode_on(p_stream)
	p_stream.write( "_package ", .name )
_endmethod
$
